/*
Deployment script for MDW_udvikling

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "MDW_udvikling"
:setvar DefaultFilePrefix "MDW_udvikling"
:setvar DefaultDataPath "d:\sqldata\data01\SOEM\"
:setvar DefaultLogPath "d:\sqldata\log01\SOEM\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE Danish_Norwegian_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [DSB\HEBR2802]...';


GO
CREATE USER [DSB\HEBR2802] FOR LOGIN [DSB\HEBR2802];


GO
REVOKE CONNECT TO [DSB\HEBR2802];


GO
PRINT N'Creating [DSB\SQL_BI_BRUGER]...';


GO
CREATE USER [DSB\SQL_BI_BRUGER] FOR LOGIN [DSB\SQL_BI_BRUGER];


GO
REVOKE CONNECT TO [DSB\SQL_BI_BRUGER];


GO
PRINT N'Creating <unnamed>...';


GO
EXECUTE sp_addrolemember @rolename = N'db_accessadmin', @membername = N'DSB\HEBR2802';


GO
PRINT N'Creating <unnamed>...';


GO
EXECUTE sp_addrolemember @rolename = N'db_datareader', @membername = N'DSB\SQL_BI_BRUGER';


GO
PRINT N'Creating <unnamed>...';


GO
EXECUTE sp_addrolemember @rolename = N'db_datawriter', @membername = N'DSB\SQL_BI_BRUGER';


GO
PRINT N'Creating <unnamed>...';


GO
EXECUTE sp_addrolemember @rolename = N'db_ddladmin', @membername = N'DSB\HEBR2802';


GO
PRINT N'Creating <unnamed>...';


GO
EXECUTE sp_addrolemember @rolename = N'db_owner', @membername = N'DSB\HEBR2802';


GO
PRINT N'Creating <unnamed>...';


GO
EXECUTE sp_addrolemember @rolename = N'db_owner', @membername = N'DSB\SQL_BI_BRUGER';


GO
PRINT N'Creating [edw]...';


GO
CREATE SCHEMA [edw]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [etl]...';


GO
CREATE SCHEMA [etl]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [ods]...';


GO
CREATE SCHEMA [ods]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [edw].[CD_FT-Lokopersonale]...';


GO
CREATE TABLE [edw].[CD_FT-Lokopersonale] (
    [DI_Omksted]      INT          NOT NULL,
    [MedarbejdeId]    VARCHAR (50) NULL,
    [Medarbejde_PKID] INT          NULL,
    [DI_Turdepot]     VARCHAR (5)  NOT NULL,
    [DI_Elementkode]  VARCHAR (10) NOT NULL,
    [DI_Togsystem]    INT          NOT NULL,
    [Togsystem]       VARCHAR (50) NULL,
    [DI_Lokation]     VARCHAR (10) NOT NULL,
    [DI_Litra]        VARCHAR (12) NOT NULL,
    [Tognummer]       VARCHAR (6)  NULL,
    [Turtimer]        FLOAT (53)   NULL,
    [Turdag]          VARCHAR (15) NULL,
    [Praktik]         VARCHAR (3)  NULL,
    [Antaltur]        INT          NULL,
    [Turnummer]       VARCHAR (15) NULL,
    [DI_Tid_Maaned]   VARCHAR (6)  NOT NULL
);


GO
PRINT N'Creating [edw].[FT_Arbejdstimer]...';


GO
CREATE TABLE [edw].[FT_Arbejdstimer] (
    [DI_Medarbejde]   INT          NOT NULL,
    [DI_Tid_Maaned]   VARCHAR (6)  NOT NULL,
    [Loankodegrp]     INT          NOT NULL,
    [DI_Omksted]      INT          NOT NULL,
    [Loanart]         VARCHAR (10) NOT NULL,
    [Samko]           VARCHAR (10) NULL,
    [Arbejdstimer]    FLOAT (53)   NULL,
    [DI_Tjenestested] INT          NOT NULL
);


GO
PRINT N'Creating [edw].[DI_Tjenestested]...';


GO
CREATE TABLE [edw].[DI_Tjenestested] (
    [PK_ID]            INT          IDENTITY (-1, 1) NOT NULL,
    [Tjenestested]     VARCHAR (15) NOT NULL,
    [TjenestestedNavn] VARCHAR (50) NULL,
    [Niveau4]          VARCHAR (15) NULL,
    [Niveau4Navn]      VARCHAR (50) NULL,
    [Niveau3]          VARCHAR (15) NULL,
    [Niveau3Navn]      VARCHAR (50) NULL,
    [Niveau2]          VARCHAR (15) NULL,
    [Niveau2Navn]      VARCHAR (50) NULL,
    [GyldigFradato]    DATETIME     NULL,
    [GyldigTildato]    DATETIME     NULL,
    [Aktiv]            VARCHAR (50) NULL,
    [Timestamp]        DATETIME     NULL,
    CONSTRAINT [PK_DI_Tjenestested] PRIMARY KEY CLUSTERED ([PK_ID] ASC)
);


GO
PRINT N'Creating [edw].[FT_Togproduktion_Togstandsninger]...';


GO
CREATE TABLE [edw].[FT_Togproduktion_Togstandsninger] (
    [FK_DI_Togsystem]        INT          NULL,
    [FK_DI_Tid]              VARCHAR (50) NULL,
    [AT_Togkategori]         VARCHAR (50) NULL,
    [AT_Stationsforkortelse] VARCHAR (50) NULL,
    [AT_Stationsnavn]        VARCHAR (50) NULL,
    [AT_Status]              VARCHAR (50) NULL,
    [AntalTog]               BIGINT       NULL,
    [Timestamp]              DATETIME     NULL
);


GO
PRINT N'Creating [edw].[CD_Togproduktion_Togstandsninger]...';


GO
CREATE TABLE [edw].[CD_Togproduktion_Togstandsninger] (
    [Beskrivelse]            VARCHAR (50) NULL,
    [FK_DI_Togsystem]        INT          NULL,
    [FK_DI_Tid]              VARCHAR (50) NULL,
    [AT_Togkategori]         VARCHAR (50) NULL,
    [AT_Stationsforkortelse] VARCHAR (50) NULL,
    [AT_Stationsnavn]        VARCHAR (50) NULL,
    [AT_Status]              VARCHAR (50) NULL,
    [AntalTog]               BIGINT       NULL,
    [Timestamp]              DATETIME     NULL
);


GO
PRINT N'Creating [edw].[CD_FT-Lokofravaer]...';


GO
CREATE TABLE [edw].[CD_FT-Lokofravaer] (
    [DI_Omksted]     INT          NULL,
    [MedarbejdeId]   VARCHAR (50) NULL,
    [DI_Turdepot]    VARCHAR (5)  NULL,
    [DI_Elementkode] VARCHAR (10) NULL,
    [Antaltimer]     FLOAT (53)   NULL,
    [Turdag]         VARCHAR (15) NULL,
    [Turnummer]      VARCHAR (15) NULL,
    [DI_Tid_Maaned]  VARCHAR (6)  NULL
);


GO
PRINT N'Creating [edw].[TD_Togprod_Straeknings_Prioritet_Tog]...';


GO
CREATE TABLE [edw].[TD_Togprod_Straeknings_Prioritet_Tog] (
    [FK_DI_Tid]       VARCHAR (50) NOT NULL,
    [Tognr]           INT          NULL,
    [Priority]        INT          NULL,
    [FK_DI_Togsystem] INT          NULL,
    [Loebenr]         INT          NULL
);


GO
PRINT N'Creating [edw].[FT_Lokofravaer]...';


GO
CREATE TABLE [edw].[FT_Lokofravaer] (
    [DI_Omksted]     INT          NOT NULL,
    [DI_Turdepot]    VARCHAR (5)  NOT NULL,
    [DI_Fravaerkode] VARCHAR (10) NOT NULL,
    [Fravaertimer]   FLOAT (53)   NOT NULL,
    [DI_Tid_Maaned]  VARCHAR (6)  NOT NULL,
    [Turdag]         VARCHAR (15) NULL,
    [Turnummer]      VARCHAR (15) NULL
);


GO
PRINT N'Creating [edw].[DI_Loebestrk]...';


GO
CREATE TABLE [edw].[DI_Loebestrk] (
    [Loebestrk]     VARCHAR (50) NULL,
    [LoebestrkNavn] VARCHAR (50) NULL
);


GO
PRINT N'Creating [edw].[CD_LTD_Lokopersonale]...';


GO
CREATE TABLE [edw].[CD_LTD_Lokopersonale] (
    [OmkStedKont]     VARCHAR (50) NULL,
    [TurDepot]        VARCHAR (50) NULL,
    [Elementkode]     VARCHAR (50) NULL,
    [ElementkodeNavn] VARCHAR (50) NULL,
    [FraStation]      VARCHAR (50) NULL,
    [TilStation]      VARCHAR (50) NULL,
    [Praktik]         VARCHAR (50) NULL,
    [Togsystem]       VARCHAR (50) NULL,
    [Kostobjekt]      VARCHAR (50) NULL,
    [KostobjektNavn]  VARCHAR (50) NULL,
    [Litratype]       VARCHAR (50) NULL,
    [MaanedsDato]     DATETIME     NULL,
    [Turtimer]        FLOAT (53)   NULL,
    [Timestamp]       DATETIME     NULL,
    [Turnummer]       VARCHAR (15) NULL,
    [Turdag]          VARCHAR (15) NULL,
    [Antalture]       SMALLINT     NULL,
    [DsbId]           VARCHAR (15) NULL,
    [Fravaer]         CHAR (1)     NULL
);


GO
PRINT N'Creating [edw].[DI_Traekkraft]...';


GO
CREATE TABLE [edw].[DI_Traekkraft] (
    [Traekkraft] VARCHAR (50) NULL
);


GO
PRINT N'Creating [edw].[DI_Litra]...';


GO
CREATE TABLE [edw].[DI_Litra] (
    [Kode]          VARCHAR (12) NOT NULL,
    [Navn]          VARCHAR (50) NULL,
    [MaterielTypel] VARCHAR (10) NULL,
    [Data_kilde]    VARCHAR (10) NULL,
    [Timestamp]     DATETIME     NULL,
    CONSTRAINT [PK_DI_Litra] PRIMARY KEY CLUSTERED ([Kode] ASC)
);


GO
PRINT N'Creating [edw].[DI_TogOmraade]...';


GO
CREATE TABLE [edw].[DI_TogOmraade] (
    [Omraade]     VARCHAR (50) NULL,
    [Omraadeland] VARCHAR (50) NULL
);


GO
PRINT N'Creating [edw].[DI_Fravaerkode]...';


GO
CREATE TABLE [edw].[DI_Fravaerkode] (
    [Kode]            VARCHAR (10) NOT NULL,
    [PDSKode]         VARCHAR (10) NULL,
    [Navn]            VARCHAR (50) NULL,
    [PDSNavn]         VARCHAR (50) NULL,
    [Tid]             CHAR (1)     NULL,
    [Gruppe]          VARCHAR (10) NULL,
    [GruppeNavn]      VARCHAR (50) NULL,
    [Type]            VARCHAR (10) NULL,
    [TypeNavn]        VARCHAR (50) NULL,
    [PDSRegistrering] VARCHAR (3)  NULL,
    [Timestamp]       DATETIME     NULL,
    CONSTRAINT [PK_DI_Fravaerkode] PRIMARY KEY CLUSTERED ([Kode] ASC)
);


GO
PRINT N'Creating [edw].[DI_S_Straekning]...';


GO
CREATE TABLE [edw].[DI_S_Straekning] (
    [PK_ID]      INT          IDENTITY (1, 1) NOT NULL,
    [Finger_ID]  INT          NOT NULL,
    [Straekning] VARCHAR (5)  NOT NULL,
    [Navn]       VARCHAR (50) NOT NULL,
    CONSTRAINT [PK_DI_S_Straekning] PRIMARY KEY CLUSTERED ([PK_ID] ASC),
    CONSTRAINT [UK_DI_S_Straekning_Finger_id] UNIQUE NONCLUSTERED ([Finger_ID] ASC)
);


GO
PRINT N'Creating [edw].[DI_Arbejdskode]...';


GO
CREATE TABLE [edw].[DI_Arbejdskode] (
    [Kode]        VARCHAR (15)  NOT NULL,
    [Navn]        VARCHAR (50)  NULL,
    [Beskrivelse] VARCHAR (100) NULL,
    [Timestamp]   DATETIME      NULL,
    CONSTRAINT [PK_DI_Arbejdskode] PRIMARY KEY CLUSTERED ([Kode] ASC)
);


GO
PRINT N'Creating [edw].[DI_Turdepot]...';


GO
CREATE TABLE [edw].[DI_Turdepot] (
    [Turdepot]  VARCHAR (5)  NOT NULL,
    [Navn]      VARCHAR (50) NULL,
    [Timestamp] DATETIME     NULL,
    CONSTRAINT [PK_DI_Turdepot] PRIMARY KEY CLUSTERED ([Turdepot] ASC)
);


GO
PRINT N'Creating [edw].[DI_S_Materiel]...';


GO
CREATE TABLE [edw].[DI_S_Materiel] (
    [PK_ID]            INT          IDENTITY (1, 1) NOT NULL,
    [Litra_typer]      VARCHAR (50) NOT NULL,
    [Siddepladser]     INT          NOT NULL,
    [Antal_vogne]      INT          NOT NULL,
    [Materielkategori] VARCHAR (50) NOT NULL,
    CONSTRAINT [PK_DI_S_Materiel] PRIMARY KEY CLUSTERED ([PK_ID] ASC),
    CONSTRAINT [UK_DI_S_Materiel_Siddepladser] UNIQUE NONCLUSTERED ([Siddepladser] ASC, [Materielkategori] ASC)
);


GO
PRINT N'Creating [edw].[DI_Opgave]...';


GO
CREATE TABLE [edw].[DI_Opgave] (
    [PK_ID]             INT           IDENTITY (-1, 1) NOT NULL,
    [OpgaveKode]        VARCHAR (30)  NOT NULL,
    [OpgaveNavn]        VARCHAR (50)  NULL,
    [OpgaveBeskrivelse] VARCHAR (500) NULL,
    [OpgaveGruppe]      VARCHAR (50)  NULL,
    [OpgaveGruppeNavn]  VARCHAR (50)  NULL,
    [OpgaveType]        VARCHAR (10)  NULL,
    [OpgaveTypeNavn]    VARCHAR (50)  NULL,
    [GyldigFradato]     DATETIME      NULL,
    [GyldigTildato]     DATETIME      NULL,
    [Aktiv]             CHAR (1)      NULL,
    [Timestamp]         DATETIME      NULL,
    CONSTRAINT [PK_DI_Opgave] PRIMARY KEY CLUSTERED ([PK_ID] ASC),
    CONSTRAINT [UK_DI_Opgave_Kode] UNIQUE NONCLUSTERED ([OpgaveKode] ASC)
);


GO
PRINT N'Creating [edw].[DI_S_Station_Straekning]...';


GO
CREATE TABLE [edw].[DI_S_Station_Straekning] (
    [PK_ID]                           INT             IDENTITY (1, 1) NOT NULL,
    [Straekning]                      VARCHAR (10)    NOT NULL,
    [Frastation]                      VARCHAR (10)    NOT NULL,
    [Frastation_navn]                 VARCHAR (50)    NOT NULL,
    [Tilstation]                      VARCHAR (10)    NOT NULL,
    [TilStation_navn]                 VARCHAR (50)    NOT NULL,
    [Retningsbestemt_straekning]      VARCHAR (50)    NOT NULL,
    [Ikke_retningsbestemt_straekning] VARCHAR (50)    NOT NULL,
    [Distance_km]                     NUMERIC (24, 6) NOT NULL,
    CONSTRAINT [PK_DI_S_Station_Straekning] PRIMARY KEY CLUSTERED ([PK_ID] ASC),
    CONSTRAINT [UK_DI_S_Station_Straekning_Strk] UNIQUE NONCLUSTERED ([Straekning] ASC)
);


GO
PRINT N'Creating [edw].[DI_Medarbejder_Togfører_FR]...';


GO
CREATE TABLE [edw].[DI_Medarbejder_Togfører_FR] (
    [PK_ID]       INT          IDENTITY (1, 1) NOT NULL,
    [NetId]       VARCHAR (50) NOT NULL,
    [Navn]        VARCHAR (30) NOT NULL,
    [TurDepot]    VARCHAR (30) NOT NULL,
    [Aktiv]       CHAR (1)     NOT NULL,
    [Tidsstempel] DATETIME     NOT NULL,
    CONSTRAINT [PK_DI_Medarbejder_Togfører_FR] PRIMARY KEY CLUSTERED ([PK_ID] ASC),
    CONSTRAINT [UK_DI_Medarbejder_Togfører_FR] UNIQUE NONCLUSTERED ([NetId] ASC, [TurDepot] ASC)
);


GO
PRINT N'Creating [edw].[FT_OBSFravaer]...';


GO
CREATE TABLE [edw].[FT_OBSFravaer] (
    [DI_Medarbejder_Togfører_FR] INT          NOT NULL,
    [DI_Fravaerkode]             VARCHAR (10) NOT NULL,
    [DI_Tid]                     VARCHAR (50) NOT NULL,
    [Varighed_tim]               FLOAT (53)   NOT NULL
);


GO
PRINT N'Creating [edw].[CD_FT-OBSOpgaver]...';


GO
CREATE TABLE [edw].[CD_FT-OBSOpgaver] (
    [DI_Medarbejde_OBS] INT          NOT NULL,
    [MedarbejdeId]      VARCHAR (50) NULL,
    [DI_Opgave]         INT          NOT NULL,
    [Opgave]            VARCHAR (50) NULL,
    [DI_TjenesteDepot]  VARCHAR (50) NOT NULL,
    [Depot]             VARCHAR (50) NULL,
    [DI_Lokation]       VARCHAR (10) NOT NULL,
    [Lokation]          VARCHAR (10) NULL,
    [DI_Togsystem]      INT          NOT NULL,
    [Togsystem]         VARCHAR (50) NULL,
    [DI_Tid]            VARCHAR (50) NOT NULL,
    [Varighed_tim]      FLOAT (53)   NULL,
    [Tognummer]         INT          NOT NULL,
    [DI_Station_fra]    VARCHAR (50) NULL,
    [DI_Station_til]    VARCHAR (50) NULL
);


GO
PRINT N'Creating [edw].[TD_OBSOpgaver_med_togproduktion]...';


GO
CREATE TABLE [edw].[TD_OBSOpgaver_med_togproduktion] (
    [DI_Medarbejde_OBS]    INT          NOT NULL,
    [DI_Opgave]            INT          NOT NULL,
    [DI_TjenesteDepot]     VARCHAR (5)  NOT NULL,
    [DI_Lokation]          VARCHAR (10) NOT NULL,
    [DI_Togsystem]         INT          NOT NULL,
    [DI_Tid]               VARCHAR (50) NOT NULL,
    [Varighed_tim]         FLOAT (53)   NULL,
    [Tognummer]            INT          NOT NULL,
    [Tog_km_pct]           FLOAT (53)   NULL,
    [Varighed_orig]        FLOAT (53)   NULL,
    [DI_Station_fra]       INT          NULL,
    [DI_Station_til]       INT          NULL,
    [PDS_Varighed_fordelt] FLOAT (53)   NULL,
    [Fra_tidspunkt]        DATETIME     NULL,
    [Til_tidspunkt]        DATETIME     NULL,
    [PDS_Start_tidspunkt]  DATETIME     NULL
);


GO
PRINT N'Creating [edw].[DI_Tid]...';


GO
CREATE TABLE [edw].[DI_Tid] (
    [uds_level]         VARCHAR (50) NOT NULL,
    [Reference]         VARCHAR (50) NOT NULL,
    [ParentReference]   VARCHAR (50) NOT NULL,
    [Name]              VARCHAR (50) NOT NULL,
    [Aar]               INT          NULL,
    [Halvaar]           INT          NULL,
    [Kvartal]           INT          NULL,
    [Maanedtekst]       VARCHAR (50) NULL,
    [MaanedNum]         INT          NULL,
    [UgedagTekst]       VARCHAR (50) NULL,
    [UgedagNum]         INT          NULL,
    [Maanedsdag]        INT          NULL,
    [Helligdag]         VARCHAR (50) NULL,
    [Alternativ1]       VARCHAR (50) NULL,
    [ParentHier2]       VARCHAR (50) NULL,
    [Dagenefter]        VARCHAR (50) NULL,
    [Dato]              DATETIME     NULL,
    [Maanedstekst_Kort] VARCHAR (3)  NULL,
    [HalvaarTekst]      VARCHAR (2)  NULL,
    [KvartalTekst]      VARCHAR (2)  NULL,
    [ReferenceName]     VARCHAR (50) NULL,
    CONSTRAINT [PK_DI_Tid] PRIMARY KEY CLUSTERED ([Reference] ASC)
);


GO
PRINT N'Creating [edw].[FT_OBSArbejder]...';


GO
CREATE TABLE [edw].[FT_OBSArbejder] (
    [DI_Medarbejder_Togfører_FR] INT          NOT NULL,
    [DI_Arbejdskode]             VARCHAR (15) NOT NULL,
    [DI_Tid]                     VARCHAR (50) NOT NULL,
    [TjenesteVarighed_tim]       FLOAT (53)   NOT NULL
);


GO
PRINT N'Creating [edw].[FT_OBSOpgaver]...';


GO
CREATE TABLE [edw].[FT_OBSOpgaver] (
    [DI_Medarbejder_Togfører_FR] INT          NOT NULL,
    [DI_Opgave]                  INT          NOT NULL,
    [DI_TjenesteDepot]           VARCHAR (5)  NOT NULL,
    [DI_Lokation]                VARCHAR (10) NOT NULL,
    [DI_Togsystem]               INT          NOT NULL,
    [DI_Tid]                     VARCHAR (50) NOT NULL,
    [Varighed_tim]               FLOAT (53)   NULL,
    [Tognummer]                  INT          NOT NULL,
    [DI_Station_fra]             INT          NULL,
    [DI_Station_til]             INT          NULL,
    [PDS_Varighed_fordelt]       FLOAT (53)   NULL,
    [DI_Tidsintervaller]         INT          NULL,
    [FraTidspunkt]               DATETIME     NULL,
    [TilTidspunkt]               DATETIME     NULL
);


GO
PRINT N'Creating [edw].[DI_Station]...';


GO
CREATE TABLE [edw].[DI_Station] (
    [PK_ID]               INT           IDENTITY (1, 1) NOT NULL,
    [Stationsforkortelse] VARCHAR (10)  NULL,
    [Station]             VARCHAR (255) NULL,
    CONSTRAINT [PK_DI_Station] PRIMARY KEY CLUSTERED ([PK_ID] ASC)
);


GO
PRINT N'Creating [edw].[DI_Omksted]...';


GO
CREATE TABLE [edw].[DI_Omksted] (
    [PK_ID]                INT          IDENTITY (-1, 1) NOT NULL,
    [OmkSted]              VARCHAR (15) NOT NULL,
    [OmkStedNavn]          VARCHAR (50) NULL,
    [OmkStedAnsvarlig]     VARCHAR (50) NULL,
    [OmkStedBeskrivelse]   VARCHAR (50) NULL,
    [Profitcenter]         VARCHAR (15) NULL,
    [FK_Profitcenter_PKID] INT          NOT NULL,
    [GyldigFradato]        DATETIME     NULL,
    [GyldigTildato]        DATETIME     NULL,
    [Aktiv]                VARCHAR (10) NULL,
    [Timestamp]            DATETIME     NULL,
    CONSTRAINT [PK_DI_Omksted] PRIMARY KEY CLUSTERED ([PK_ID] ASC)
);


GO
PRINT N'Creating [edw].[DI_Profitcenter]...';


GO
CREATE TABLE [edw].[DI_Profitcenter] (
    [PK_ID]                   INT          IDENTITY (-1, 1) NOT NULL,
    [Profitcenter]            VARCHAR (15) NOT NULL,
    [ProfitcenterNavn]        VARCHAR (50) NULL,
    [ProfitcenterParent_FH]   VARCHAR (50) NULL,
    [ProfitcenterAnsvarlig]   VARCHAR (50) NULL,
    [ProfitcenterBeskrivelse] VARCHAR (50) NULL,
    [Enhed]                   VARCHAR (50) NULL,
    [GyldigFradato]           DATETIME     NULL,
    [GyldigTildato]           DATETIME     NULL,
    [Aktiv]                   VARCHAR (50) NULL,
    [Timestamp]               DATETIME     NULL,
    CONSTRAINT [PK_DI_Profitcenter] PRIMARY KEY CLUSTERED ([PK_ID] ASC)
);


GO
PRINT N'Creating [edw].[GD_A_Stamdata_OmkSted]...';


GO
CREATE TABLE [edw].[GD_A_Stamdata_OmkSted] (
    [OmkSted]            VARCHAR (50) NOT NULL,
    [OmkStedNavn]        VARCHAR (50) NULL,
    [OmkStedAnsvarlig]   VARCHAR (50) NULL,
    [OmkStedBeskrivelse] VARCHAR (50) NULL,
    [StandardHierarki]   VARCHAR (50) NULL,
    [Profitcenter]       VARCHAR (50) NULL,
    [GyldigFradato]      DATETIME     NULL,
    [GyldigTildato]      DATETIME     NULL,
    [Aktiv]              VARCHAR (50) NULL,
    [Timestamp]          DATETIME     NULL
);


GO
PRINT N'Creating [edw].[DI_CostObject]...';


GO
CREATE TABLE [edw].[DI_CostObject] (
    [Reference]       VARCHAR (50) NOT NULL,
    [Name]            VARCHAR (50) NOT NULL,
    [ParentReference] VARCHAR (50) NULL,
    [FK_DI_Togsystem] INT          NULL,
    CONSTRAINT [PK_DI_CostObject] PRIMARY KEY CLUSTERED ([Reference] ASC)
);


GO
PRINT N'Creating [edw].[GD_Dim_CostObject]...';


GO
CREATE TABLE [edw].[GD_Dim_CostObject] (
    [Omraade]         VARCHAR (50)  NULL,
    [Reference]       VARCHAR (50)  NOT NULL,
    [Produkt]         VARCHAR (50)  NULL,
    [HFO]             VARCHAR (50)  NULL,
    [FO]              VARCHAR (50)  NULL,
    [Name]            VARCHAR (50)  NOT NULL,
    [Momsbelastning]  FLOAT (53)    NULL,
    [Type]            VARCHAR (50)  NULL,
    [ParentReference] VARCHAR (50)  NULL,
    [Togsystem]       INT           NULL,
    [Kode]            VARCHAR (50)  NULL,
    [Beskrivelse]     VARCHAR (255) NULL,
    [Udbudt]          VARCHAR (50)  NULL,
    [Kommentar]       VARCHAR (255) NULL,
    [Aktiv]           VARCHAR (50)  NULL,
    [Markedsprisdok]  VARCHAR (50)  NULL,
    [Period]          VARCHAR (50)  NULL,
    [Timestamp]       DATETIME      NULL
);


GO
PRINT N'Creating [edw].[DIH_CostObject]...';


GO
CREATE TABLE [edw].[DIH_CostObject] (
    [Omraade]         VARCHAR (50)   NULL,
    [Reference]       VARCHAR (50)   NOT NULL,
    [Produkt]         VARCHAR (50)   NULL,
    [HFO]             VARCHAR (50)   NULL,
    [FO]              VARCHAR (50)   NULL,
    [Name]            VARCHAR (50)   NOT NULL,
    [Momsbelastning]  FLOAT (53)     NULL,
    [Type]            VARCHAR (50)   NULL,
    [ParentReference] VARCHAR (50)   NULL,
    [Togsystem]       INT            NULL,
    [Kode]            VARCHAR (50)   NULL,
    [Beskrivelse]     VARCHAR (1000) NULL,
    [Udbudt]          VARCHAR (50)   NULL,
    [Kommentar]       VARCHAR (200)  NULL,
    [Aktiv]           VARCHAR (50)   NULL,
    [Markedsprisdok]  VARCHAR (50)   NULL,
    [Period]          VARCHAR (50)   NULL,
    [Timestamp]       DATETIME       NULL
);


GO
PRINT N'Creating [edw].[TD_Dim_CostObject]...';


GO
CREATE TABLE [edw].[TD_Dim_CostObject] (
    [Reference]       VARCHAR (50) NOT NULL,
    [Name]            VARCHAR (50) NOT NULL,
    [ParentReference] VARCHAR (50) NULL,
    [Period]          VARCHAR (50) NULL,
    [Togsystem]       INT          NULL
);


GO
PRINT N'Creating [edw].[CD_Togproduktion_Afgifter]...';


GO
CREATE TABLE [edw].[CD_Togproduktion_Afgifter] (
    [Beskrivelse]      VARCHAR (50)    NULL,
    [FK_DI_Togsystem]  INT             NULL,
    [FK_DI_Tid]        VARCHAR (50)    NULL,
    [AT_Togkategori]   VARCHAR (50)    NULL,
    [AT_Afgiftstype]   VARCHAR (50)    NULL,
    [AT_Afgiftsdriver] VARCHAR (50)    NULL,
    [AT_Afgiftssats]   DECIMAL (24, 6) NULL,
    [Antal]            BIGINT          NULL,
    [Afgift_kr]        DECIMAL (24, 6) NULL,
    [Status]           VARCHAR (50)    NULL,
    [Timestamp]        DATETIME        NULL
);


GO
PRINT N'Creating [edw].[MD_Afgiftssats]...';


GO
CREATE TABLE [edw].[MD_Afgiftssats] (
    [Straekning]  VARCHAR (50)    NOT NULL,
    [Navn]        VARCHAR (50)    NULL,
    [AfgiftsSats] DECIMAL (18, 2) NOT NULL,
    [Bemaerkning] VARCHAR (50)    NULL,
    CONSTRAINT [PK__MD_Afgiftssats__2F3AE904] PRIMARY KEY CLUSTERED ([Straekning] ASC)
);


GO
PRINT N'Creating [edw].[FT_PDS]...';


GO
CREATE TABLE [edw].[FT_PDS] (
    [DI_Medarbejder_Togfører_FR]          INT             NOT NULL,
    [DI_Tid]                              VARCHAR (50)    NOT NULL,
    [DI_Togsystem]                        INT             NOT NULL,
    [DI_Tidsintervaller]                  INT             NOT NULL,
    [DI_Turdepot]                         VARCHAR (5)     NOT NULL,
    [DI_Straekning]                       INT             NOT NULL,
    [DI_Opgave]                           INT             NOT NULL,
    [DI_Fravaerkode]                      VARCHAR (50)    NOT NULL,
    [DI_Arbejdskode]                      VARCHAR (15)    NOT NULL,
    [Opgave_varighed_timer]               DECIMAL (24, 6) NOT NULL,
    [Medarbejder_tjeneste_varighed_timer] DECIMAL (24, 6) NOT NULL,
    [fravaer_varighed_timer]              DECIMAL (24, 6) NOT NULL
);


GO
PRINT N'Creating [edw].[FT_Togproduktion_Afgifter]...';


GO
CREATE TABLE [edw].[FT_Togproduktion_Afgifter] (
    [FK_DI_Togsystem]  INT             NULL,
    [FK_DI_Tid]        VARCHAR (50)    NULL,
    [AT_Togkategori]   VARCHAR (50)    NULL,
    [AT_Afgiftstype]   VARCHAR (50)    NULL,
    [AT_Afgiftsdriver] VARCHAR (50)    NULL,
    [AT_Afgiftssats]   DECIMAL (24, 6) NULL,
    [Antal]            BIGINT          NULL,
    [Afgift_kr]        DECIMAL (24, 6) NULL,
    [Status]           VARCHAR (50)    NULL,
    [Timestamp]        DATETIME        NULL
);


GO
PRINT N'Creating [edw].[CD_FT-OBSFravaer]...';


GO
CREATE TABLE [edw].[CD_FT-OBSFravaer] (
    [DI_Medarbejde_OBS] INT             NOT NULL,
    [CPR_Medarbejde]    VARCHAR (50)    NOT NULL,
    [DI_Fravaerkode]    VARCHAR (50)    NOT NULL,
    [PDSkode]           VARCHAR (50)    NOT NULL,
    [DI_Tid_Maaned]     VARCHAR (50)    NOT NULL,
    [Varighed_regist]   DECIMAL (18, 1) NULL
);


GO
PRINT N'Creating [edw].[DI_Togsystem]...';


GO
CREATE TABLE [edw].[DI_Togsystem] (
    [PK_DI_Togsystem]    INT           IDENTITY (1, 1) NOT NULL,
    [Togsystemnummer]    INT           NOT NULL,
    [Togsystemnavn]      VARCHAR (50)  NOT NULL,
    [IC_Straekning]      VARCHAR (50)  NOT NULL,
    [Gl_togsystemnummer] INT           NOT NULL,
    [Kontraktoperatoer]  VARCHAR (50)  NULL,
    [Produkt]            VARCHAR (50)  NOT NULL,
    [POEM_CZ-ref]        VARCHAR (50)  NOT NULL,
    [POEM_CX-ref]        VARCHAR (50)  NOT NULL,
    [Kommentar]          VARCHAR (255) NULL,
    [Aktiv]              BIT           NOT NULL,
    [AktivFra]           DATETIME      NOT NULL,
    [AktivTil]           DATETIME      NOT NULL,
    CONSTRAINT [PK_DI_Togsystem_2] PRIMARY KEY CLUSTERED ([PK_DI_Togsystem] ASC)
);


GO
PRINT N'Creating [edw].[DI_Firmakode]...';


GO
CREATE TABLE [edw].[DI_Firmakode] (
    [Firmakode] INT          NOT NULL,
    [Tekst]     VARCHAR (50) NULL,
    [Timestamp] DATETIME     NULL
);


GO
PRINT N'Creating [edw].[DI_Materiale]...';


GO
CREATE TABLE [edw].[DI_Materiale] (
    [PK_ID]                   INT          IDENTITY (1, 1) NOT NULL,
    [loebenr]                 INT          NOT NULL,
    [Nummer]                  VARCHAR (50) NULL,
    [Antal]                   INT          NULL,
    [Litra]                   VARCHAR (25) NOT NULL,
    [Type]                    VARCHAR (50) NULL,
    [Variant]                 VARCHAR (50) NULL,
    [Kaldenavn]               VARCHAR (50) NULL,
    [Egenavn]                 VARCHAR (50) NULL,
    [AntalVogne]              INT          NULL,
    [Hastighed]               INT          NULL,
    [FasteSiddepladser]       INT          NULL,
    [Klapsæder]               INT          NULL,
    [SiddepladserTotal]       INT          NULL,
    [Traktionssystem]         VARCHAR (50) NULL,
    [Ejerforhold]             VARCHAR (25) NULL,
    [BistroOgPantry]          VARCHAR (10) NULL,
    [Salgsautomater]          VARCHAR (10) NULL,
    [Greenspeed]              VARCHAR (10) NULL,
    [GodkendtTilTunnelkørsel] VARCHAR (10) NULL,
    [Source]                  VARCHAR (50) NULL,
    [Aktiv_fra]               DATETIME     NULL,
    [Aktiv_til]               DATETIME     NULL,
    CONSTRAINT [PK_DI_Materiale] PRIMARY KEY CLUSTERED ([PK_ID] ASC),
    CONSTRAINT [UK_DI_Materiale] UNIQUE NONCLUSTERED ([loebenr] ASC, [Litra] ASC, [Aktiv_fra] ASC, [Aktiv_til] ASC)
);


GO
PRINT N'Creating [edw].[di_omksted_ny]...';


GO
CREATE TABLE [edw].[di_omksted_ny] (
    [PK_ID]                INT          NOT NULL,
    [OmkSted]              VARCHAR (15) NOT NULL,
    [OmkStedNavn]          VARCHAR (50) NULL,
    [OmkStedAnsvarlig]     VARCHAR (50) NULL,
    [OmkStedBeskrivelse]   VARCHAR (50) NULL,
    [Profitcenter]         VARCHAR (15) NULL,
    [FK_Profitcenter_PKID] INT          NOT NULL,
    [GyldigFradato]        DATETIME     NULL,
    [GyldigTildato]        DATETIME     NULL,
    [Aktiv]                VARCHAR (10) NULL,
    [Timestamp]            DATETIME     NULL
);


GO
PRINT N'Creating [edw].[DI_Profitcenter_ny]...';


GO
CREATE TABLE [edw].[DI_Profitcenter_ny] (
    [PK_ID]                   INT          NOT NULL,
    [Profitcenter]            VARCHAR (15) NOT NULL,
    [ProfitcenterNavn]        VARCHAR (50) NULL,
    [ProfitcenterParent_FH]   VARCHAR (50) NULL,
    [ProfitcenterAnsvarlig]   VARCHAR (50) NULL,
    [ProfitcenterBeskrivelse] VARCHAR (50) NULL,
    [Enhed]                   VARCHAR (50) NULL,
    [GyldigFradato]           DATETIME     NULL,
    [GyldigTildato]           DATETIME     NULL,
    [Aktiv]                   VARCHAR (50) NULL,
    [Timestamp]               DATETIME     NULL
);


GO
PRINT N'Creating [edw].[MD_Materiale_sidepladser_default]...';


GO
CREATE TABLE [edw].[MD_Materiale_sidepladser_default] (
    [Litra]              VARCHAR (6)  NULL,
    [Antal pladser]      INT          NULL,
    [Litra_Materiale_DB] VARCHAR (25) NULL,
    [Litra_type]         VARCHAR (50) NULL
);


GO
PRINT N'Creating [edw].[CD_A_Stamdata_Profitcenter]...';


GO
CREATE TABLE [edw].[CD_A_Stamdata_Profitcenter] (
    [Profitcenter]            VARCHAR (50) NOT NULL,
    [GyldigFradato]           DATETIME     NULL,
    [GyldigTildato]           DATETIME     NULL,
    [ProfitcenterNavn]        VARCHAR (50) NULL,
    [ProfitcenterAnsvarlig]   VARCHAR (50) NULL,
    [ProfitcenterBeskrivelse] VARCHAR (50) NULL,
    [StandardHierarki]        VARCHAR (50) NULL,
    [Enhed]                   VARCHAR (50) NULL,
    [Aktiv]                   VARCHAR (50) NULL,
    [Timestamp]               DATETIME     NULL
);


GO
PRINT N'Creating [edw].[MD_A_Profitcenter_Enhed]...';


GO
CREATE TABLE [edw].[MD_A_Profitcenter_Enhed] (
    [Profitcenter] VARCHAR (50) NOT NULL,
    [Enhed]        VARCHAR (50) NULL,
    [Timestamp]    DATETIME     NULL,
    CONSTRAINT [PK_MD_A_Profitcenter_Enhed] PRIMARY KEY CLUSTERED ([Profitcenter] ASC)
);


GO
PRINT N'Creating [edw].[DI_Tidsintervaller]...';


GO
CREATE TABLE [edw].[DI_Tidsintervaller] (
    [PK_ID]     INT          NOT NULL,
    [Navn]      VARCHAR (50) NOT NULL,
    [Prioritet] INT          NOT NULL,
    CONSTRAINT [PK_DI_Tidsintervaller] PRIMARY KEY CLUSTERED ([PK_ID] ASC)
);


GO
PRINT N'Creating [edw].[GD_A_Stamdata_Profitcenter]...';


GO
CREATE TABLE [edw].[GD_A_Stamdata_Profitcenter] (
    [Profitcenter]            VARCHAR (50) NOT NULL,
    [GyldigFradato]           DATETIME     NULL,
    [GyldigTildato]           DATETIME     NULL,
    [ProfitcenterNavn]        VARCHAR (50) NULL,
    [ProfitcenterAnsvarlig]   VARCHAR (50) NULL,
    [ProfitcenterBeskrivelse] VARCHAR (50) NULL,
    [StandardHierarki]        VARCHAR (50) NULL,
    [Enhed]                   VARCHAR (50) NULL,
    [Aktiv]                   VARCHAR (50) NULL,
    [Timestamp]               DATETIME     NULL
);


GO
PRINT N'Creating [edw].[DI_Lokation]...';


GO
CREATE TABLE [edw].[DI_Lokation] (
    [Kode]         VARCHAR (10) NOT NULL,
    [Navn]         VARCHAR (30) NULL,
    [StartStation] VARCHAR (5)  NOT NULL,
    [SlutStation]  VARCHAR (5)  NOT NULL,
    [Timestamp]    DATETIME     NULL,
    CONSTRAINT [PK_DI_Lokation] PRIMARY KEY CLUSTERED ([Kode] ASC)
);


GO
PRINT N'Creating [edw].[DI_Togkategori]...';


GO
CREATE TABLE [edw].[DI_Togkategori] (
    [Togkat]            VARCHAR (15) NOT NULL,
    [TogkatBeskrivelse] VARCHAR (50) NULL,
    [TogkatEjer]        VARCHAR (50) NULL,
    [Division]          VARCHAR (50) NULL,
    [Kontraktoperatoer] VARCHAR (50) NULL,
    [Tekniskoperatoer]  VARCHAR (50) NULL
);


GO
PRINT N'Creating [edw].[DI_Operatoer]...';


GO
CREATE TABLE [edw].[DI_Operatoer] (
    [PK_ID]     INT          IDENTITY (1, 1) NOT NULL,
    [Operatoer] VARCHAR (50) NOT NULL,
    CONSTRAINT [PK_DI_Operatoer] PRIMARY KEY CLUSTERED ([PK_ID] ASC),
    CONSTRAINT [UK_DI_Operatoer] UNIQUE NONCLUSTERED ([Operatoer] ASC)
);


GO
PRINT N'Creating [edw].[DI_Tid_Maaned]...';


GO
CREATE TABLE [edw].[DI_Tid_Maaned] (
    [PK_ID]    VARCHAR (6)  NOT NULL,
    [Navn]     VARCHAR (30) NOT NULL,
    [Kvarter]  VARCHAR (10) NOT NULL,
    [Aar]      VARCHAR (6)  NOT NULL,
    [KortNavn] VARCHAR (6)  NULL,
    CONSTRAINT [PK_DI_Tid_Maaned] PRIMARY KEY CLUSTERED ([PK_ID] ASC)
);


GO
PRINT N'Creating [edw].[DI_Tognummer]...';


GO
CREATE TABLE [edw].[DI_Tognummer] (
    [Tognr]         INT          NOT NULL,
    [TognrInterval] VARCHAR (50) NULL,
    [Timestamp]     DATETIME     NULL,
    CONSTRAINT [PK_DI_Tognummer] PRIMARY KEY CLUSTERED ([Tognr] ASC)
);


GO
PRINT N'Creating [edw].[DI_Elementkode_ltf]...';


GO
CREATE TABLE [edw].[DI_Elementkode_ltf] (
    [Elementkode] VARCHAR (10) NOT NULL,
    [Navn]        VARCHAR (50) NULL,
    [Gruppe]      VARCHAR (10) NULL,
    [GruppeNavn]  VARCHAR (50) NULL,
    [Type]        VARCHAR (10) NULL,
    [TypeNavn]    VARCHAR (50) NULL,
    [Timestamp]   DATETIME     NULL,
    CONSTRAINT [PK_DI_Elementkode_ltf] PRIMARY KEY CLUSTERED ([Elementkode] ASC)
);


GO
PRINT N'Creating [edw].[FT_Togproduktion_Tog]...';


GO
CREATE TABLE [edw].[FT_Togproduktion_Tog] (
    [FK_DI_Tid]                  VARCHAR (50)    NOT NULL,
    [FK_DI_Togsystem]            INT             NOT NULL,
    [Togkategori]                VARCHAR (50)    NULL,
    [Togkategoribeskrivelse]     VARCHAR (50)    NULL,
    [Togkategoriejer]            VARCHAR (50)    NULL,
    [Tognr]                      INT             NULL,
    [TognrInterval]              VARCHAR (50)    NULL,
    [Fratidspunkt]               VARCHAR (50)    NULL,
    [Tiltidspunkt]               VARCHAR (50)    NULL,
    [Frastation]                 VARCHAR (50)    NULL,
    [Tilstation]                 VARCHAR (50)    NULL,
    [Traekkraft]                 VARCHAR (50)    NULL,
    [Antaltraekkrafter]          INT             NULL,
    [AntalVogne]                 INT             NULL,
    [Loebestrk]                  VARCHAR (100)   NULL,
    [RetningsbestemtStrk]        VARCHAR (100)   NULL,
    [IkkeRetningsbestemtStrk]    VARCHAR (100)   NULL,
    [Omraade]                    VARCHAR (50)    NULL,
    [Omraadeland]                VARCHAR (50)    NULL,
    [Division]                   VARCHAR (50)    NULL,
    [Kontraktoperatoer]          VARCHAR (50)    NULL,
    [Tekniskoperatoer]           VARCHAR (50)    NULL,
    [erSaertog]                  BIT             NULL,
    [erOmlagt]                   BIT             NULL,
    [erMaterielkoersel]          BIT             NULL,
    [erTomkoersel]               BIT             NULL,
    [erEkstraproduktion]         BIT             NULL,
    [erTogdublering]             BIT             NULL,
    [erAflyst]                   BIT             NULL,
    [Togkm]                      DECIMAL (24, 6) NULL,
    [Togminutter]                DECIMAL (24, 6) NULL,
    [Status]                     VARCHAR (50)    NULL,
    [Timestamp]                  DATETIME        NULL,
    [FraTime]                    INT             NULL,
    [TilTime]                    INT             NULL,
    [FK_DI_Tidsintervaller]      INT             NULL,
    [erTrafikkontraktProduktion] BIT             NULL
);


GO
PRINT N'Creating [edw].[TD_Togprod_Straeknings_Prioritet_Litra]...';


GO
CREATE TABLE [edw].[TD_Togprod_Straeknings_Prioritet_Litra] (
    [FK_DI_Tid]       VARCHAR (50) NOT NULL,
    [Tognr]           INT          NULL,
    [Priority]        INT          NULL,
    [FK_DI_Togsystem] INT          NULL,
    [Loebenr]         INT          NULL
);


GO
PRINT N'Creating [edw].[MD_Tid_Konverter_Interval_Definitioner]...';


GO
CREATE TABLE [edw].[MD_Tid_Konverter_Interval_Definitioner] (
    [Interval_header_id] INT          NOT NULL,
    [Dagugen]            VARCHAR (3)  NULL,
    [Dagugen_num]        INT          NULL,
    [Dagstype]           CHAR (1)     NULL,
    [Dagugen_tekst]      VARCHAR (20) NULL,
    [Time]               INT          NULL,
    [Tidsinterval]       CHAR (1)     NULL,
    [Tidsinterval_tekst] VARCHAR (10) NULL,
    [Prioritet]          INT          NULL
);


GO
PRINT N'Creating [edw].[MD_Store_Stationer]...';


GO
CREATE TABLE [edw].[MD_Store_Stationer] (
    [Station] VARCHAR (10) NULL,
    [Navn]    VARCHAR (50) NULL
);


GO
PRINT N'Creating [edw].[CD_FT-FTE]...';


GO
CREATE TABLE [edw].[CD_FT-FTE] (
    [DI_Medarbejde] INT             NOT NULL,
    [DI_Tid_Maaned] VARCHAR (6)     NOT NULL,
    [DI_Firmakode]  VARCHAR (15)    NOT NULL,
    [DI_Omksted]    INT             NULL,
    [Profitcenter]  VARCHAR (15)    NOT NULL,
    [Loanart]       VARCHAR (15)    NOT NULL,
    [FTE]           DECIMAL (10, 3) NULL
);


GO
PRINT N'Creating [edw].[FT_FTE]...';


GO
CREATE TABLE [edw].[FT_FTE] (
    [DI_Medarbejde] INT             NOT NULL,
    [DI_Tid_Maaned] VARCHAR (6)     NOT NULL,
    [DI_Firmakode]  VARCHAR (15)    NOT NULL,
    [DI_Omksted]    INT             NULL,
    [Omksted]       VARCHAR (15)    NULL,
    [Profitcenter]  VARCHAR (15)    NOT NULL,
    [Loanart]       VARCHAR (15)    NOT NULL,
    [FTE]           DECIMAL (10, 3) NULL
);


GO
PRINT N'Creating [edw].[DI_Medarbejde]...';


GO
CREATE TABLE [edw].[DI_Medarbejde] (
    [PK_ID]            INT          IDENTITY (-1, 1) NOT NULL,
    [MedarbejdeId]     INT          NOT NULL,
    [Cpr]              VARCHAR (12) NULL,
    [Navn]             VARCHAR (50) NULL,
    [Medarbejde_Tekst] VARCHAR (60) NULL,
    [Email]            VARCHAR (50) NULL,
    [NetId]            VARCHAR (50) NULL,
    [GyldigFradato]    DATETIME     NULL,
    [GyldigTildato]    DATETIME     NULL,
    [Aktiv]            VARCHAR (10) NULL,
    [Timestamp]        DATETIME     NULL,
    CONSTRAINT [PK_DI_Medarbejde] PRIMARY KEY CLUSTERED ([MedarbejdeId] ASC),
    CONSTRAINT [UK_DI_Medarbejde] UNIQUE NONCLUSTERED ([PK_ID] ASC)
);


GO
PRINT N'Creating [edw].[FT_Togproduktion_Litra]...';


GO
CREATE TABLE [edw].[FT_Togproduktion_Litra] (
    [FK_DI_Tid]                  VARCHAR (50)    NOT NULL,
    [FK_DI_Togsystem]            INT             NOT NULL,
    [Tognr]                      INT             NULL,
    [Loebenr]                    INT             NULL,
    [TognrInterval]              VARCHAR (50)    NULL,
    [Fratidspunkt]               VARCHAR (50)    NULL,
    [Tiltidspunkt]               VARCHAR (50)    NULL,
    [Litra]                      VARCHAR (50)    NULL,
    [Ejer]                       VARCHAR (50)    NULL,
    [Jernbane]                   VARCHAR (50)    NULL,
    [Frastation]                 VARCHAR (50)    NULL,
    [Tilstation]                 VARCHAR (50)    NULL,
    [Materieltype]               VARCHAR (50)    NULL,
    [RetningsbestemtStrk]        VARCHAR (100)   NULL,
    [IkkeRetningsbestemtStrk]    VARCHAR (100)   NULL,
    [Loebestrk]                  VARCHAR (100)   NULL,
    [Omraade]                    VARCHAR (50)    NULL,
    [Omraadeland]                VARCHAR (50)    NULL,
    [Division]                   VARCHAR (50)    NULL,
    [Produkt]                    VARCHAR (50)    NULL,
    [Togkategori]                VARCHAR (50)    NULL,
    [Togkategoribeskrivelse]     VARCHAR (50)    NULL,
    [Togkategoriejer]            VARCHAR (50)    NULL,
    [Kontraktoperatoer]          VARCHAR (50)    NULL,
    [Tekniskoperatoer]           VARCHAR (50)    NULL,
    [erEkstraproduktion]         BIT             NULL,
    [erGennemgaaendeVogn]        BIT             NULL,
    [erPlaceringskoersel]        BIT             NULL,
    [erAflaast]                  BIT             NULL,
    [erAflyst]                   BIT             NULL,
    [erForstaerkning]            BIT             NULL,
    [erMaterielkoersel]          BIT             NULL,
    [erTomkoersel]               BIT             NULL,
    [Litrakm]                    DECIMAL (24, 6) NULL,
    [Litraminutter]              DECIMAL (24, 6) NULL,
    [Status]                     VARCHAR (50)    NULL,
    [Timestamp]                  DATETIME        NULL,
    [FraTime]                    INT             NULL,
    [TilTime]                    INT             NULL,
    [FK_DI_Tidsintervaller]      INT             NULL,
    [PladsKm]                    DECIMAL (24, 6) NULL,
    [erTrafikkontraktProduktion] BIT             NULL
);


GO
PRINT N'Creating [edw].[DI_Straekning]...';


GO
CREATE TABLE [edw].[DI_Straekning] (
    [PK_ID]                           INT           IDENTITY (1, 1) NOT NULL,
    [Straekningskode]                 VARCHAR (10)  NOT NULL,
    [Frastation]                      VARCHAR (50)  NOT NULL,
    [Frastation_Tekst]                VARCHAR (100) NOT NULL,
    [Tilstation]                      VARCHAR (50)  NOT NULL,
    [Tilstation_Tekst]                VARCHAR (100) NOT NULL,
    [Retningsbestemt_Straekning]      VARCHAR (100) NOT NULL,
    [Ikke_retningsbestemt_Straekning] VARCHAR (100) NOT NULL,
    CONSTRAINT [PK_DI_Straekning] PRIMARY KEY CLUSTERED ([PK_ID] ASC),
    CONSTRAINT [UK_DI_Straekning_Kode] UNIQUE NONCLUSTERED ([Straekningskode] ASC)
);


GO
PRINT N'Creating [edw].[FT_Lokopersonale]...';


GO
CREATE TABLE [edw].[FT_Lokopersonale] (
    [DI_Omksted]     INT          NOT NULL,
    [DI_Turdepot]    VARCHAR (5)  NOT NULL,
    [DI_Elementkode] VARCHAR (10) NOT NULL,
    [DI_Togsystem]   INT          NOT NULL,
    [DI_Lokation]    VARCHAR (10) NOT NULL,
    [DI_Litra]       VARCHAR (12) NULL,
    [Tognummer]      VARCHAR (6)  NULL,
    [Turtimer]       FLOAT (53)   NULL,
    [Turdag]         VARCHAR (15) NULL,
    [Praktik]        VARCHAR (3)  NULL,
    [Antaltur]       INT          NULL,
    [Turnummer]      VARCHAR (15) NULL,
    [DI_Tid_Maaned]  VARCHAR (6)  NOT NULL
);


GO
PRINT N'Creating [edw].[DI_S_Doegn_Inddeling]...';


GO
CREATE TABLE [edw].[DI_S_Doegn_Inddeling] (
    [PK_ID]           INT          IDENTITY (1, 1) NOT NULL,
    [Doegn_Inddeling] VARCHAR (5)  NOT NULL,
    [Navn]            VARCHAR (50) NOT NULL,
    CONSTRAINT [PK_DI_S_Doegn_Inddeling] PRIMARY KEY CLUSTERED ([PK_ID] ASC),
    CONSTRAINT [UK_DI_S_Doegn_Inddeling] UNIQUE NONCLUSTERED ([Doegn_Inddeling] ASC)
);


GO
PRINT N'Creating [edw].[FT_Togproduktion_S_Tog]...';


GO
CREATE TABLE [edw].[FT_Togproduktion_S_Tog] (
    [DI_Tid]                  VARCHAR (50)    NOT NULL,
    [DI_S_Station_Straekning] INT             NOT NULL,
    [DI_S_Materiel]           INT             NOT NULL,
    [DI_S_Straekning]         INT             NOT NULL,
    [DI_S_Doegn_Inddeling]    INT             NOT NULL,
    [Afgang]                  DATETIME        NOT NULL,
    [Ankomst]                 DATETIME        NOT NULL,
    [Tognr]                   INT             NOT NULL,
    [Togkm]                   DECIMAL (24, 6) NOT NULL,
    [Pladskm]                 DECIMAL (24, 6) NOT NULL,
    [DI_Tidsintervaller]      INT             NOT NULL
);


GO
PRINT N'Creating [edw].[FT_Togproduktion_S_Tog_Litra]...';


GO
CREATE TABLE [edw].[FT_Togproduktion_S_Tog_Litra] (
    [DI_Tid]                  VARCHAR (50)    NOT NULL,
    [DI_S_Station_Straekning] INT             NOT NULL,
    [DI_S_Materiel]           INT             NOT NULL,
    [DI_S_Materiel_Litra]     INT             NOT NULL,
    [DI_S_Straekning]         INT             NOT NULL,
    [DI_S_Doegn_Inddeling]    INT             NOT NULL,
    [Afgang]                  DATETIME        NOT NULL,
    [Ankomst]                 DATETIME        NOT NULL,
    [Tognr]                   INT             NOT NULL,
    [litra_løbenr]            INT             NOT NULL,
    [Litrakm]                 DECIMAL (24, 6) NOT NULL,
    [Pladskm]                 DECIMAL (24, 6) NOT NULL,
    [DI_Tidsintervaller]      INT             NOT NULL
);


GO
PRINT N'Creating [edw].[FT_Lokopersonale_S_tog]...';


GO
CREATE TABLE [edw].[FT_Lokopersonale_S_tog] (
    [DI_Tid]                 VARCHAR (50)    NOT NULL,
    [DI_S_Straekning]        INT             NOT NULL,
    [DI_Tidsinterval]        INT             NOT NULL,
    [DI_Medarbejder]         INT             NOT NULL,
    [DI_S_Opgave_Lokofører]  INT             NOT NULL,
    [DI_Depot]               INT             NOT NULL,
    [DI_S_Opgave_Straekning] INT             NOT NULL,
    [Tognr]                  INT             NOT NULL,
    [Opgave_Varighed_Timer]  DECIMAL (24, 6) NOT NULL,
    [DI_S_Doegn_Inddeling]   INT             NOT NULL
);


GO
PRINT N'Creating [edw].[DI_S_Opgave_Straekning]...';


GO
CREATE TABLE [edw].[DI_S_Opgave_Straekning] (
    [PK_ID]                           INT           IDENTITY (1, 1) NOT NULL,
    [Straekningskode]                 VARCHAR (10)  NOT NULL,
    [Frastation]                      VARCHAR (50)  NOT NULL,
    [Frastation_Tekst]                VARCHAR (100) NOT NULL,
    [Tilstation]                      VARCHAR (50)  NOT NULL,
    [Tilstation_Tekst]                VARCHAR (100) NOT NULL,
    [Retningsbestemt_Straekning]      VARCHAR (100) NOT NULL,
    [Ikke_retningsbestemt_Straekning] VARCHAR (100) NOT NULL,
    CONSTRAINT [PK_DI_S_Opgave_Straekning] PRIMARY KEY CLUSTERED ([PK_ID] ASC),
    CONSTRAINT [UK_DI_S_Opgave_Straekning] UNIQUE NONCLUSTERED ([Straekningskode] ASC)
);


GO
PRINT N'Creating [edw].[DI_S_Opgave_Lokofører]...';


GO
CREATE TABLE [edw].[DI_S_Opgave_Lokofører] (
    [PK_ID]            INT          IDENTITY (1, 1) NOT NULL,
    [Elementkode]      VARCHAR (50) NOT NULL,
    [Elementkode_Navn] VARCHAR (50) NOT NULL,
    [Gruppe]           VARCHAR (50) NOT NULL,
    [Gruppe_Navn]      VARCHAR (50) NOT NULL,
    [Type]             VARCHAR (50) NOT NULL,
    [Type_Navn]        VARCHAR (50) NOT NULL,
    CONSTRAINT [PK_DI_S_Opgave_Lokofører] PRIMARY KEY CLUSTERED ([PK_ID] ASC)
);


GO
PRINT N'Creating [edw].[DI_Depot]...';


GO
CREATE TABLE [edw].[DI_Depot] (
    [PK_ID]           INT          IDENTITY (1, 1) NOT NULL,
    [Depot]           VARCHAR (50) NOT NULL,
    [Station]         VARCHAR (50) NOT NULL,
    [Stations_Nummer] VARCHAR (50) NOT NULL,
    [Stations_Navn]   VARCHAR (50) NOT NULL,
    CONSTRAINT [PK_DI_Depot] PRIMARY KEY CLUSTERED ([PK_ID] ASC),
    CONSTRAINT [UK_DI_Depot] UNIQUE NONCLUSTERED ([Depot] ASC)
);


GO
PRINT N'Creating [etl].[Ods_LoaderLog]...';


GO
CREATE TABLE [etl].[Ods_LoaderLog] (
    [LoaderLogID]  INT             IDENTITY (1, 1) NOT NULL,
    [PackageLogID] INT             NOT NULL,
    [SourceSystem] VARCHAR (12)    NOT NULL,
    [TableName]    VARCHAR (100)   NOT NULL,
    [StartTime]    DATETIME        NOT NULL,
    [EndTime]      DATETIME        NULL,
    [Success]      BIT             NOT NULL,
    [MaxPeriod]    VARCHAR (50)    NULL,
    [NumRows]      INT             NULL,
    [CtlColName_1] VARCHAR (50)    NULL,
    [CtlColTot_1]  DECIMAL (24, 6) NULL,
    [CtlColName_2] VARCHAR (50)    NULL,
    [CtlColTot_2]  DECIMAL (24, 6) NULL,
    [CtlColName_3] VARCHAR (50)    NULL,
    [CtlColTot_3]  DECIMAL (24, 6) NULL,
    [CtlColName_4] VARCHAR (50)    NULL,
    [CtlColTot_4]  DECIMAL (24, 6) NULL,
    CONSTRAINT [PK_LoaderLogID] PRIMARY KEY CLUSTERED ([LoaderLogID] ASC)
);


GO
PRINT N'Creating [etl].[Grl_PackageLog]...';


GO
CREATE TABLE [etl].[Grl_PackageLog] (
    [PackageLogID] INT            IDENTITY (1, 1) NOT NULL,
    [PackageName]  NVARCHAR (100) NOT NULL,
    [StartTime]    DATETIME       NOT NULL,
    [EndTime]      DATETIME       NULL,
    [Success]      BIT            NULL,
    CONSTRAINT [PK_PackageLog] PRIMARY KEY CLUSTERED ([PackageLogID] ASC)
);


GO
PRINT N'Creating [etl].[Grl_DataLoadCheck]...';


GO
CREATE TABLE [etl].[Grl_DataLoadCheck] (
    [Id]                INT             IDENTITY (1, 1) NOT NULL,
    [Source_System]     VARCHAR (50)    NOT NULL,
    [Source_Gruppe]     VARCHAR (50)    NOT NULL,
    [Beskrivelse]       VARCHAR (256)   NOT NULL,
    [Tilladt_Afvigelse] DECIMAL (24, 6) NOT NULL,
    [Aktiv]             VARCHAR (3)     NOT NULL,
    CONSTRAINT [PK_Grl_DataLoadCheck_Hoved] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [etl].[Grl_DataLoadCheck_Element]...';


GO
CREATE TABLE [etl].[Grl_DataLoadCheck_Element] (
    [Id]               INT           IDENTITY (1, 1) NOT NULL,
    [DataLoadCheck_Id] INT           NOT NULL,
    [Load_Instans]     VARCHAR (50)  NOT NULL,
    [Load_Tabel]       VARCHAR (60)  NOT NULL,
    [Attribute]        VARCHAR (50)  NOT NULL,
    [Vaerdi_type]      VARCHAR (25)  NOT NULL,
    [Beskrivelse]      VARCHAR (256) NOT NULL,
    [Check_Element]    VARCHAR (35)  NULL,
    CONSTRAINT [PK_etl.DataLoadCheck] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [etl].[Grl_DataLoadCheck_Vaerdi]...';


GO
CREATE TABLE [etl].[Grl_DataLoadCheck_Vaerdi] (
    [Id]              INT             IDENTITY (1, 1) NOT NULL,
    [CheckElement_Id] INT             NOT NULL,
    [Period]          INT             NULL,
    [Vaerdi]          DECIMAL (24, 6) NULL,
    [Tidsstempel]     DATETIME        NULL,
    CONSTRAINT [PK_Grl_DataLoadCheck_Vaerdi] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [etl].[Edw_TabRefLog]...';


GO
CREATE TABLE [etl].[Edw_TabRefLog] (
    [TabRefLogID]   INT             IDENTITY (1, 1) NOT NULL,
    [PackageLogID]  INT             NOT NULL,
    [TableName]     VARCHAR (50)    NOT NULL,
    [TypeRefresh]   VARCHAR (20)    NOT NULL,
    [Period]        VARCHAR (12)    NULL,
    [NumRowsDel]    INT             NULL,
    [NameCtlColDel] VARCHAR (30)    NULL,
    [TotCtlColDel]  DECIMAL (18, 2) NULL,
    [NumRows]       INT             NULL,
    [RefColName_1]  VARCHAR (30)    NULL,
    [RefColTot_1]   DECIMAL (18, 2) NULL,
    [RefColName_2]  VARCHAR (30)    NULL,
    [RefColTot_2]   DECIMAL (18, 2) NULL,
    [RefColName_3]  VARCHAR (30)    NULL,
    [RefColTot_3]   DECIMAL (18, 2) NULL,
    [RefColName_4]  VARCHAR (30)    NULL,
    [RefColTot_4]   DECIMAL (18, 2) NULL,
    [RefColName_5]  VARCHAR (30)    NULL,
    [RefColTot_5]   DECIMAL (18, 2) NULL,
    [StartTime]     DATETIME        NOT NULL,
    [EndTime]       DATETIME        NULL,
    [Success]       BIT             NOT NULL,
    CONSTRAINT [PK_TabRefLogID] PRIMARY KEY CLUSTERED ([TabRefLogID] ASC)
);


GO
PRINT N'Creating [etl].[TD_S_materiale_til_Litra_mapping]...';


GO
CREATE TABLE [etl].[TD_S_materiale_til_Litra_mapping] (
    [litra_type]       VARCHAR (50) NULL,
    [litra_sekvens]    INT          NULL,
    [Pladser]          INT          NULL,
    [Materielkategori] VARCHAR (50) NULL
);


GO
PRINT N'Creating [ods].[MD_G_STAM_Depoter]...';


GO
CREATE TABLE [ods].[MD_G_STAM_Depoter] (
    [Stationsnr]   VARCHAR (50) NULL,
    [Station]      VARCHAR (50) NULL,
    [Stationsnavn] VARCHAR (50) NULL,
    [Depot]        VARCHAR (50) NULL
);


GO
PRINT N'Creating [ods].[TD_Togsystem_mapning]...';


GO
CREATE TABLE [ods].[TD_Togsystem_mapning] (
    [Dato]         DATETIME     NULL,
    [Tognummer]    INT          NULL,
    [Frastation]   VARCHAR (50) NULL,
    [Tilstation]   VARCHAR (50) NULL,
    [Fratidspunkt] DATETIME     NULL,
    [Tiltidspunkt] DATETIME     NULL,
    [Togsystem]    INT          NULL,
    [Kilde]        VARCHAR (50) NULL
);


GO
PRINT N'Creating [ods].[CTL_Dataload]...';


GO
CREATE TABLE [ods].[CTL_Dataload] (
    [Kilde_System]     VARCHAR (12)  NOT NULL,
    [Variable]         VARCHAR (50)  NOT NULL,
    [Value]            VARCHAR (100) NULL,
    [Updated]          DATETIME      NULL,
    [Updated_username] [sysname]     NULL,
    CONSTRAINT [PK_kilde_system_variabel] PRIMARY KEY CLUSTERED ([Kilde_System] ASC, [Variable] ASC)
);


GO
PRINT N'Creating [ods].[CD_Togstandsninger]...';


GO
CREATE TABLE [ods].[CD_Togstandsninger] (
    [Beskrivelse]         VARCHAR (50) NULL,
    [Maaned]              VARCHAR (50) NULL,
    [Togsystemnummer]     VARCHAR (50) NULL,
    [Togsystemnavn]       VARCHAR (50) NULL,
    [Togkategori]         VARCHAR (50) NULL,
    [Stationsnavn]        VARCHAR (50) NULL,
    [Stationsforkortelse] VARCHAR (50) NULL,
    [AntalTog]            INT          NULL,
    [Timestamp]           DATETIME     NULL
);


GO
PRINT N'Creating [ods].[RDH_Togstandsninger]...';


GO
CREATE TABLE [ods].[RDH_Togstandsninger] (
    [Maaned]              VARCHAR (50) NULL,
    [Togsystemnummer]     VARCHAR (50) NULL,
    [Togsystemnavn]       VARCHAR (50) NULL,
    [Togkategori]         VARCHAR (50) NULL,
    [Stationsnavn]        VARCHAR (50) NULL,
    [Stationsforkortelse] VARCHAR (50) NULL,
    [AntalTog]            INT          NULL,
    [Timestamp]           DATETIME     NULL
);


GO
PRINT N'Creating [ods].[RD_Togstandsninger]...';


GO
CREATE TABLE [ods].[RD_Togstandsninger] (
    [Maaned]              VARCHAR (50) NULL,
    [Togsystemnummer]     VARCHAR (50) NULL,
    [Togsystemnavn]       VARCHAR (50) NULL,
    [Togkategori]         VARCHAR (50) NULL,
    [Stationsnavn]        VARCHAR (50) NULL,
    [Stationsforkortelse] VARCHAR (50) NULL,
    [AntalTog]            INT          NULL,
    [Timestamp]           DATETIME     NULL
);


GO
PRINT N'Creating [ods].[RDP_Togstandsninger]...';


GO
CREATE TABLE [ods].[RDP_Togstandsninger] (
    [Maaned]              VARCHAR (50) NULL,
    [Togsystemnummer]     VARCHAR (50) NULL,
    [Togsystemnavn]       VARCHAR (50) NULL,
    [Togkategori]         VARCHAR (50) NULL,
    [Stationsnavn]        VARCHAR (50) NULL,
    [Stationsforkortelse] VARCHAR (50) NULL,
    [AntalTog]            INT          NULL,
    [Timestamp]           DATETIME     NULL
);


GO
PRINT N'Creating [ods].[MD_Stog_litra_typer]...';


GO
CREATE TABLE [ods].[MD_Stog_litra_typer] (
    [Siddepladser]        INT NOT NULL,
    [Antal_litra_type_SA] INT NOT NULL,
    [Antal_litra_type_SE] INT NOT NULL,
    [Antal_vogne]         INT NULL
);


GO
PRINT N'Creating [ods].[MD_G_STAM_Timer_Grp_Togførertid]...';


GO
CREATE TABLE [ods].[MD_G_STAM_Timer_Grp_Togførertid] (
    [Kilde]            VARCHAR (50)  NULL,
    [Elementkode]      VARCHAR (50)  NULL,
    [ElementkodeNavn]  VARCHAR (50)  NULL,
    [Beskrivelse]      VARCHAR (300) NULL,
    [Gruppe]           VARCHAR (50)  NULL,
    [GruppeNavn]       VARCHAR (50)  NULL,
    [Type]             VARCHAR (50)  NULL,
    [TypeNavn]         VARCHAR (50)  NULL,
    [indlæstTidspunkt] DATETIME      NULL,
    [indlæstAf]        [sysname]     NULL
);


GO
PRINT N'Creating [ods].[MD_G_STAM_Timer_Grp_Lokoførertid_STog]...';


GO
CREATE TABLE [ods].[MD_G_STAM_Timer_Grp_Lokoførertid_STog] (
    [Kilde]            VARCHAR (50)  NULL,
    [Elementkode]      VARCHAR (50)  NULL,
    [ElementkodeNavn]  VARCHAR (50)  NULL,
    [Beskrivelse]      VARCHAR (300) NULL,
    [Gruppe]           VARCHAR (50)  NULL,
    [GruppeNavn]       VARCHAR (50)  NULL,
    [Type]             VARCHAR (50)  NULL,
    [TypeNavn]         VARCHAR (50)  NULL,
    [indlæstTidspunkt] DATETIME      NULL,
    [indlæstAf]        [sysname]     NULL
);


GO
PRINT N'Creating [ods].[MD_G_STAM_Timer_Grp_Lokoførertid]...';


GO
CREATE TABLE [ods].[MD_G_STAM_Timer_Grp_Lokoførertid] (
    [Kilde]            VARCHAR (50)  NULL,
    [Elementkode]      VARCHAR (50)  NULL,
    [ElementkodeNavn]  VARCHAR (50)  NULL,
    [Beskrivelse]      VARCHAR (300) NULL,
    [Gruppe]           VARCHAR (50)  NULL,
    [GruppeNavn]       VARCHAR (50)  NULL,
    [Type]             VARCHAR (50)  NULL,
    [TypeNavn]         VARCHAR (50)  NULL,
    [indlæstTidspunkt] DATETIME      NULL,
    [indlæstAf]        [sysname]     NULL
);


GO
PRINT N'Creating [ods].[MD_G_STAM_Stationer]...';


GO
CREATE TABLE [ods].[MD_G_STAM_Stationer] (
    [Stationsnr]           VARCHAR (50) NULL,
    [UIC_nr]               VARCHAR (50) NULL,
    [Stationsfork]         VARCHAR (50) NULL,
    [Stationsnavn]         VARCHAR (50) NULL,
    [BGV_nr]               VARCHAR (50) NULL,
    [Standsningsted]       VARCHAR (50) NULL,
    [Udbudt]               VARCHAR (50) NULL,
    [Landsdel]             VARCHAR (50) NULL,
    [Operatør]             VARCHAR (50) NULL,
    [Linie]                VARCHAR (50) NULL,
    [Type]                 VARCHAR (50) NULL,
    [Stationstype]         VARCHAR (50) NULL,
    [Sekretariat_Operatør] VARCHAR (50) NULL,
    [UIC_opslag]           VARCHAR (50) NULL,
    [Stationsfork_PDS]     VARCHAR (50) NULL,
    [Stationsfork_LTD]     VARCHAR (50) NULL
);


GO
PRINT N'Creating [ods].[rd_stog_Straekninger]...';


GO
CREATE TABLE [ods].[rd_stog_Straekninger] (
    [ID]                          INT           NULL,
    [NAVN]                        VARCHAR (255) NULL,
    [SEKVENS_NR]                  INT           NULL,
    [FRA_STAT_NR]                 FLOAT (53)    NULL,
    [TIL_STAT_NR]                 FLOAT (53)    NULL,
    [KM]                          FLOAT (53)    NULL,
    [PublikumsBetjentMindsteSnit] VARCHAR (255) NULL
);


GO
PRINT N'Creating [ods].[MD_G_STAM_Litra]...';


GO
CREATE TABLE [ods].[MD_G_STAM_Litra] (
    [PORTAL_Reference] VARCHAR (50) NULL,
    [LitraID]          VARCHAR (50) NULL,
    [LitraNavn]        VARCHAR (50) NULL,
    [SAPLitraRef]      VARCHAR (50) NULL
);


GO
PRINT N'Creating [ods].[md_stog_stationer]...';


GO
CREATE TABLE [ods].[md_stog_stationer] (
    [STAT_NAVN] VARCHAR (255) NULL,
    [STAT_FORK] VARCHAR (255) NULL,
    [STAT_NR]   INT           NULL
);


GO
PRINT N'Creating [ods].[MD_G_STAM_Ejendomme_udlejningsenheder]...';


GO
CREATE TABLE [ods].[MD_G_STAM_Ejendomme_udlejningsenheder] (
    [Firmakode]           VARCHAR (50) NULL,
    [Ejendom]             VARCHAR (50) NULL,
    [Bygning]             VARCHAR (50) NULL,
    [Grundstykke]         VARCHAR (50) NULL,
    [Betegnelse_på_BG]    VARCHAR (50) NULL,
    [Status]              VARCHAR (50) NULL,
    [Udlejningsobjekt]    VARCHAR (50) NULL,
    [Tekst]               VARCHAR (50) NULL,
    [Gade_vej]            VARCHAR (50) NULL,
    [Husnummer]           VARCHAR (50) NULL,
    [Postnummer]          VARCHAR (50) NULL,
    [By]                  VARCHAR (50) NULL,
    [Benyttelsesart_UE]   VARCHAR (50) NULL,
    [BBR_Nr]              VARCHAR (50) NULL,
    [Tekst1]              VARCHAR (50) NULL,
    [Aftale]              VARCHAR (50) NULL,
    [Gammel_aftale]       VARCHAR (50) NULL,
    [System_status]       VARCHAR (50) NULL,
    [Branche]             VARCHAR (50) NULL,
    [Navn]                VARCHAR (50) NULL,
    [Navn_2]              VARCHAR (50) NULL,
    [Postboks]            VARCHAR (50) NULL,
    [Gade_vej1]           VARCHAR (50) NULL,
    [Postnummer1]         VARCHAR (50) NULL,
    [By1]                 VARCHAR (50) NULL,
    [Omkostningssted]     VARCHAR (50) NULL,
    [Bet_Aftaleart]       VARCHAR (50) NULL,
    [Primærarieal_UE]     FLOAT (53)   NULL,
    [Sekundærareal_UE]    FLOAT (53)   NULL,
    [Kælderareal_UE]      FLOAT (53)   NULL,
    [Fællesareal_UE]      FLOAT (53)   NULL,
    [Grundareal_UE]       FLOAT (53)   NULL,
    [Totalareal_UE]       FLOAT (53)   NULL,
    [Skatter_afgifter_UE] FLOAT (53)   NULL,
    [Start_på_aftale]     VARCHAR (50) NULL,
    [Løbetidslut]         VARCHAR (50) NULL,
    [Totalareal_Aftale]   FLOAT (53)   NULL,
    [Ren_leje]            FLOAT (53)   NULL,
    [Forberingstillæg]    FLOAT (53)   NULL,
    [LA_Reduktioner]      FLOAT (53)   NULL,
    [Diverse_leje]        FLOAT (53)   NULL,
    [Skatter_Afgifter]    FLOAT (53)   NULL,
    [Fællesudgifter]      FLOAT (53)   NULL,
    [Andre_Konditioner]   FLOAT (53)   NULL,
    [Renovation]          FLOAT (53)   NULL,
    [Ren Leje_gml_aftale] FLOAT (53)   NULL,
    [Fællesleje]          FLOAT (53)   NULL
);


GO
PRINT N'Creating [ods].[MD_G_STAM_Ejendomme_M_Kategori]...';


GO
CREATE TABLE [ods].[MD_G_STAM_Ejendomme_M_Kategori] (
    [BetArkObjt]     VARCHAR (50) NULL,
    [ID_AO]          VARCHAR (50) NULL,
    [Bet_ark_objekt] VARCHAR (50) NULL,
    [Hovedkateg]     VARCHAR (50) NULL,
    [Byg_type]       VARCHAR (50) NULL,
    [Fredning]       VARCHAR (50) NULL,
    [Kategori]       VARCHAR (50) NULL,
    [Kategori_2]     VARCHAR (50) NULL
);


GO
PRINT N'Creating [ods].[RD_PDS_Absence_Togfører_FR]...';


GO
CREATE TABLE [ods].[RD_PDS_Absence_Togfører_FR] (
    [E_DAY_DATE]                 DATETIME      NULL,
    [E_DATE_TIME_REGISTERED]     DATETIME      NULL,
    [P_BRUGERID]                 NVARCHAR (50) NULL,
    [P_NICKNAME]                 NVARCHAR (30) NULL,
    [A_ABSENCE_TYPE_DESCRIPTION] NVARCHAR (30) NULL,
    [A_START_DATE_TIME]          DATETIME      NULL,
    [A_END_DATE_TIME]            DATETIME      NULL,
    [DURATION]                   INT           NULL
);


GO
PRINT N'Creating [ods].[rd_stog_korelobtider]...';


GO
CREATE TABLE [ods].[rd_stog_korelobtider] (
    [DATO]              DATETIME     NULL,
    [AFG_STAT_NR]       INT          NULL,
    [ANK_STAT_NR]       INT          NULL,
    [ANK_TID]           INT          NULL,
    [AFG_TID]           INT          NULL,
    [Ankomst]           DATETIME     NULL,
    [Afgang]            DATETIME     NULL,
    [TOG_NR]            INT          NULL,
    [Passagerkapacitet] INT          NULL,
    [Antal_vogne]       INT          NULL,
    [Fingernr]          INT          NULL,
    [Kilometer]         FLOAT (53)   NULL,
    [DoegnInddeling]    VARCHAR (10) NULL,
    [TOG_TYPE]          VARCHAR (1)  NOT NULL
);


GO
PRINT N'Creating [ods].[MD_G_STAM_Ejendomme]...';


GO
CREATE TABLE [ods].[MD_G_STAM_Ejendomme] (
    [Firmakode]           VARCHAR (50) NULL,
    [Ejendom]             VARCHAR (50) NULL,
    [Bygning]             VARCHAR (50) NULL,
    [Grundstykke]         VARCHAR (50) NULL,
    [Betegnelse_på_BG]    VARCHAR (50) NULL,
    [Status]              VARCHAR (50) NULL,
    [Udlejningsobjekt]    VARCHAR (50) NULL,
    [Tekst]               VARCHAR (50) NULL,
    [Gade_vej]            VARCHAR (50) NULL,
    [Husnummer]           VARCHAR (50) NULL,
    [Postnummer]          VARCHAR (50) NULL,
    [By]                  VARCHAR (50) NULL,
    [Benyttelsesart_UE]   VARCHAR (50) NULL,
    [BBR_Nr]              VARCHAR (50) NULL,
    [Tekst1]              VARCHAR (50) NULL,
    [Aftale]              VARCHAR (50) NULL,
    [Gammel_aftale]       VARCHAR (50) NULL,
    [System_status]       VARCHAR (50) NULL,
    [Branche]             VARCHAR (50) NULL,
    [Navn]                VARCHAR (50) NULL,
    [Navn_2]              VARCHAR (50) NULL,
    [Postboks]            VARCHAR (50) NULL,
    [Gade_vej1]           VARCHAR (50) NULL,
    [Postnummer1]         VARCHAR (50) NULL,
    [By1]                 VARCHAR (50) NULL,
    [Omkostningssted]     VARCHAR (50) NULL,
    [Bet_Aftaleart]       VARCHAR (50) NULL,
    [Primærarieal_UE]     FLOAT (53)   NULL,
    [Sekundærareal_UE]    FLOAT (53)   NULL,
    [Kælderareal_UE]      FLOAT (53)   NULL,
    [Fællesareal_UE]      FLOAT (53)   NULL,
    [Grundareal_UE]       FLOAT (53)   NULL,
    [Totalareal_UE]       FLOAT (53)   NULL,
    [Skatter_afgifter_UE] FLOAT (53)   NULL,
    [Start_på_aftale]     VARCHAR (50) NULL,
    [Løbetidslut]         VARCHAR (50) NULL,
    [Totalareal_Aftale]   FLOAT (53)   NULL,
    [Ren_leje]            FLOAT (53)   NULL,
    [Forberingstillæg]    FLOAT (53)   NULL,
    [LA_Reduktioner]      FLOAT (53)   NULL,
    [Diverse_leje]        FLOAT (53)   NULL,
    [Skatter_Afgifter]    FLOAT (53)   NULL,
    [Fællesudgifter]      FLOAT (53)   NULL,
    [Andre_Konditioner]   FLOAT (53)   NULL,
    [Renovation]          FLOAT (53)   NULL,
    [Ren Leje_gml_aftale] FLOAT (53)   NULL,
    [Fællesleje]          FLOAT (53)   NULL,
    [BGV_NR_Drift]        VARCHAR (50) NULL,
    [BGV_NR_Anlæg]        VARCHAR (50) NULL,
    [GRUND_NR_Drift]      VARCHAR (50) NULL,
    [GRUND_NR_Anlæg]      VARCHAR (50) NULL,
    [Kategori]            VARCHAR (50) NULL,
    [Stationstype]        VARCHAR (50) NULL,
    [Stationsnr]          VARCHAR (50) NULL,
    [Station]             VARCHAR (50) NULL,
    [Hovedkategori]       VARCHAR (50) NULL,
    [Fredning]            VARCHAR (50) NULL,
    [Alternativ]          VARCHAR (50) NULL,
    [Nøglefast_Ejendom]   VARCHAR (50) NULL,
    [BGV]                 VARCHAR (50) NULL
);


GO
PRINT N'Creating [ods].[RD_PDS_Workdone_Togfører_FR]...';


GO
CREATE TABLE [ods].[RD_PDS_Workdone_Togfører_FR] (
    [E_DAY_DATE]                  DATETIME      NULL,
    [E_DATE_TIME_REGISTERED]      DATETIME      NULL,
    [P_DAY_TYPE_DESCRIPTION]      NVARCHAR (30) NULL,
    [P_DATE_TIME_REGISTERED]      DATETIME      NULL,
    [P_BRUGERID]                  NVARCHAR (50) NULL,
    [P_NICKNAME]                  NVARCHAR (30) NULL,
    [P_PERSON_PB_DESCRIPTION]     NVARCHAR (30) NULL,
    [P_ROSTER_COMPANY_ID]         NVARCHAR (30) NULL,
    [P_ROSTER_WEEK]               NUMERIC (5)   NULL,
    [P_ROSTER_PB_DESCRIPTION]     NVARCHAR (30) NULL,
    [D_DURATION]                  NUMERIC (10)  NULL,
    [D_DUTY_PB_DESCRIPTION]       NVARCHAR (30) NULL,
    [D_START_DATE_TIME]           DATETIME      NULL,
    [D_END_DATE_TIME]             DATETIME      NULL,
    [D_START_STATION_DESCRIPTION] NVARCHAR (30) NULL,
    [D_END_STATION_DESCRIPTION]   NVARCHAR (30) NULL,
    [D_FIXED_START_DATE_TIME]     DATETIME      NULL,
    [D_FIXED_END_DATE_TIME]       DATETIME      NULL,
    [T_TASK_TYPE_DESCRIPTION]     NVARCHAR (30) NULL,
    [T_START_DATE_TIME]           DATETIME      NULL,
    [T_END_DATE_TIME]             DATETIME      NULL,
    [T_SERIAL_NUMBER]             NUMERIC (10)  NULL,
    [T_START_STATION_DESCRIPTION] NVARCHAR (30) NULL,
    [T_END_STATION_DESCRIPTION]   NVARCHAR (30) NULL,
    [T_DURATION]                  NUMERIC (10)  NULL,
    [T_ACTIVITY_DESCRIPTION]      NVARCHAR (60) NULL
);


GO
PRINT N'Creating [ods].[RD_PDS_Workdone]...';


GO
CREATE TABLE [ods].[RD_PDS_Workdone] (
    [PersonId]               VARCHAR (50) NULL,
    [ArbejdsKode]            VARCHAR (50) NULL,
    [ArbejdsDato]            VARCHAR (50) NULL,
    [Tjeneste_nr]            VARCHAR (50) NULL,
    [TjenesteVarighed]       VARCHAR (50) NULL,
    [TjenesteMoadestedDepot] VARCHAR (50) NULL,
    [OpgaveDatoTid]          VARCHAR (50) NULL,
    [OpgaveKode]             VARCHAR (50) NULL,
    [OpgaveVarighed]         VARCHAR (50) NULL,
    [OpgaveStartSt]          VARCHAR (50) NULL,
    [OpgaveSlutSt]           VARCHAR (50) NULL,
    [OpgaveTogNr]            VARCHAR (50) NULL,
    [TimeStamp]              DATETIME     NULL
);


GO
PRINT N'Creating [ods].[CD_Strkafgifter]...';


GO
CREATE TABLE [ods].[CD_Strkafgifter] (
    [Beskrivelse]         VARCHAR (50) NULL,
    [Maaned]              VARCHAR (50) NULL,
    [Afgiftsstraekning]   VARCHAR (50) NULL,
    [Togsystemnummer]     VARCHAR (50) NULL,
    [ICStraekning]        VARCHAR (50) NULL,
    [Togkategori]         VARCHAR (50) NULL,
    [Toggruppe]           VARCHAR (50) NULL,
    [AntalTog_MedAfgift]  INT          NULL,
    [AntalTog_UdenAfgift] INT          NULL,
    [Timestamp]           DATETIME     NULL
);


GO
PRINT N'Creating [ods].[td_pds_togsystem]...';


GO
CREATE TABLE [ods].[td_pds_togsystem] (
    [PersonId]                 VARCHAR (50) NULL,
    [ArbejdsKode]              VARCHAR (50) NULL,
    [ArbejdsDato]              DATETIME     NULL,
    [TjenesteVarighed]         VARCHAR (50) NULL,
    [TjenesteMoadestedDepot]   VARCHAR (50) NULL,
    [OpgaveDatoTid]            DATETIME     NULL,
    [OpgaveKode]               VARCHAR (50) NULL,
    [OpgaveVarighed]           VARCHAR (50) NULL,
    [OpgaveStartSt]            VARCHAR (50) NULL,
    [OpgaveSlutSt]             VARCHAR (50) NULL,
    [OpgaveTogNr]              VARCHAR (50) NULL,
    [TimeStamp]                DATETIME     NULL,
    [togFra_frastation]        VARCHAR (50) NULL,
    [togTilstation_tilstation] VARCHAR (50) NULL,
    [togFra_fratidspunkt]      DATETIME     NULL,
    [togtil_tiltidspunkt]      DATETIME     NULL,
    [kilde]                    VARCHAR (50) NULL,
    [fratidspunkt]             DATETIME     NULL,
    [tiltidspunkt]             DATETIME     NULL,
    [frastation]               VARCHAR (50) NULL,
    [tilstation]               VARCHAR (50) NULL,
    [togsystem]                INT          NULL,
    [sekunder]                 INT          NULL,
    [tog_status]               VARCHAR (14) NOT NULL
);


GO
PRINT N'Creating [ods].[RDP_Strkafgifter]...';


GO
CREATE TABLE [ods].[RDP_Strkafgifter] (
    [Maaned]              VARCHAR (50) NULL,
    [Maaned_datasaet]     VARCHAR (50) NULL,
    [Afgiftsstraekning]   VARCHAR (50) NULL,
    [Togsystemnummer]     VARCHAR (50) NULL,
    [ICStraekning]        VARCHAR (50) NULL,
    [Togkategori]         VARCHAR (50) NULL,
    [Toggruppe]           VARCHAR (50) NULL,
    [AntalTog_MedAfgift]  INT          NULL,
    [AntalTog_UdenAfgift] INT          NULL,
    [Timestamp]           DATETIME     NULL,
    [Status]              VARCHAR (50) NULL
);


GO
PRINT N'Creating [ods].[RDH_Strkafgifter]...';


GO
CREATE TABLE [ods].[RDH_Strkafgifter] (
    [Maaned]              VARCHAR (50) NULL,
    [Maaned_datasaet]     VARCHAR (50) NULL,
    [Afgiftsstraekning]   VARCHAR (50) NULL,
    [Togsystemnummer]     VARCHAR (50) NULL,
    [ICStraekning]        VARCHAR (50) NULL,
    [Togkategori]         VARCHAR (50) NULL,
    [Toggruppe]           VARCHAR (50) NULL,
    [AntalTog_MedAfgift]  INT          NULL,
    [AntalTog_UdenAfgift] INT          NULL,
    [Timestamp]           DATETIME     NULL,
    [Status]              VARCHAR (50) NULL
);


GO
PRINT N'Creating [ods].[RD_Strkafgifter]...';


GO
CREATE TABLE [ods].[RD_Strkafgifter] (
    [Maaned]              VARCHAR (50) NULL,
    [Afgiftsstraekning]   VARCHAR (50) NULL,
    [Togsystemnummer]     VARCHAR (50) NULL,
    [ICStraekning]        VARCHAR (50) NULL,
    [Togkategori]         VARCHAR (50) NULL,
    [Toggruppe]           VARCHAR (50) NULL,
    [AntalTog_MedAfgift]  INT          NULL,
    [AntalTog_UdenAfgift] INT          NULL,
    [Timestamp]           DATETIME     NULL,
    [Status]              VARCHAR (50) NULL
);


GO
PRINT N'Creating [ods].[CD_Broafgifter]...';


GO
CREATE TABLE [ods].[CD_Broafgifter] (
    [Beskrivelse]     VARCHAR (50) NULL,
    [Maaned]          VARCHAR (50) NULL,
    [Togsystemnummer] VARCHAR (50) NULL,
    [Straekning]      VARCHAR (50) NULL,
    [Togkategori]     VARCHAR (50) NULL,
    [Bro]             VARCHAR (50) NULL,
    [AntalTog]        INT          NULL,
    [Timestamp]       DATETIME     NULL
);


GO
PRINT N'Creating [ods].[RDH_Broafgifter]...';


GO
CREATE TABLE [ods].[RDH_Broafgifter] (
    [Maaned]          VARCHAR (50) NULL,
    [Togsystemnummer] VARCHAR (50) NULL,
    [Straekning]      VARCHAR (50) NULL,
    [Togkategori]     VARCHAR (50) NULL,
    [Bro]             VARCHAR (50) NULL,
    [AntalTog]        INT          NULL,
    [Timestamp]       DATETIME     NULL
);


GO
PRINT N'Creating [ods].[RD_Broafgifter]...';


GO
CREATE TABLE [ods].[RD_Broafgifter] (
    [Maaned]          VARCHAR (50) NULL,
    [Togsystemnummer] VARCHAR (50) NULL,
    [Straekning]      VARCHAR (50) NULL,
    [Togkategori]     VARCHAR (50) NULL,
    [Bro]             VARCHAR (50) NULL,
    [AntalTog]        INT          NULL,
    [Timestamp]       DATETIME     NULL
);


GO
PRINT N'Creating [ods].[RDP_Broafgifter]...';


GO
CREATE TABLE [ods].[RDP_Broafgifter] (
    [Maaned]          VARCHAR (50) NULL,
    [Togsystemnummer] VARCHAR (50) NULL,
    [Straekning]      VARCHAR (50) NULL,
    [Togkategori]     VARCHAR (50) NULL,
    [Bro]             VARCHAR (50) NULL,
    [AntalTog]        INT          NULL,
    [Timestamp]       DATETIME     NULL
);


GO
PRINT N'Creating [ods].[RDP_Baneafgifter]...';


GO
CREATE TABLE [ods].[RDP_Baneafgifter] (
    [Maaned]          VARCHAR (50) NULL,
    [Togsystemnummer] VARCHAR (50) NULL,
    [Straekning]      VARCHAR (50) NULL,
    [ICStraekning]    VARCHAR (50) NULL,
    [Togkategori]     VARCHAR (50) NULL,
    [Banegruppe]      VARCHAR (50) NULL,
    [Togkm]           BIGINT       NULL,
    [Togtimer]        BIGINT       NULL,
    [Timestamp]       DATETIME     NULL
);


GO
PRINT N'Creating [ods].[RDH_Baneafgifter]...';


GO
CREATE TABLE [ods].[RDH_Baneafgifter] (
    [Maaned]          VARCHAR (50) NULL,
    [Togsystemnummer] VARCHAR (50) NULL,
    [Straekning]      VARCHAR (50) NULL,
    [ICStraekning]    VARCHAR (50) NULL,
    [Togkategori]     VARCHAR (50) NULL,
    [Banegruppe]      VARCHAR (50) NULL,
    [Togkm]           BIGINT       NULL,
    [Togtimer]        BIGINT       NULL,
    [Timestamp]       DATETIME     NULL
);


GO
PRINT N'Creating [ods].[MD_Stog_finger_straekninger]...';


GO
CREATE TABLE [ods].[MD_Stog_finger_straekninger] (
    [Finger_ID]     INT          NOT NULL,
    [Straekning_ID] VARCHAR (5)  NOT NULL,
    [Navn]          VARCHAR (50) NOT NULL,
    CONSTRAINT [PK_MD_Stog_finger_straekninger] PRIMARY KEY CLUSTERED ([Finger_ID] ASC)
);


GO
PRINT N'Creating [ods].[RD_Baneafgifter]...';


GO
CREATE TABLE [ods].[RD_Baneafgifter] (
    [Maaned]          VARCHAR (50) NULL,
    [Togsystemnummer] VARCHAR (50) NULL,
    [Straekning]      VARCHAR (50) NULL,
    [ICStraekning]    VARCHAR (50) NULL,
    [Togkategori]     VARCHAR (50) NULL,
    [Banegruppe]      VARCHAR (50) NULL,
    [Togkm]           BIGINT       NULL,
    [Togtimer]        BIGINT       NULL,
    [Timestamp]       DATETIME     NULL
);


GO
PRINT N'Creating [ods].[MD_G_STAM_Togsystem]...';


GO
CREATE TABLE [ods].[MD_G_STAM_Togsystem] (
    [Togsystemnummer]    INT          NULL,
    [StogTogsystem]      VARCHAR (50) NULL,
    [Togsystemnavn]      VARCHAR (50) NULL,
    [Togsystemnavn_Kort] VARCHAR (50) NULL,
    [Kontraktoperatør]   VARCHAR (50) NULL,
    [Produkt]            VARCHAR (50) NULL,
    [Costobjekt]         VARCHAR (50) NULL,
    [Beskrivelse]        VARCHAR (50) NULL
);


GO
PRINT N'Creating [ods].[RD_SAP_ProfitcenterStam]...';


GO
CREATE TABLE [ods].[RD_SAP_ProfitcenterStam] (
    [Profitcenter]            VARCHAR (50) NOT NULL,
    [GyldigFradato]           VARCHAR (50) NULL,
    [GyldigTildato]           VARCHAR (50) NULL,
    [ProfitcenterNavn]        VARCHAR (50) NULL,
    [ProfitcenterAnsvarlig]   VARCHAR (50) NULL,
    [ProfitcenterBeskrivelse] VARCHAR (50) NULL,
    [StandardHierarki]        VARCHAR (50) NULL,
    [Enhed]                   VARCHAR (50) NULL,
    [Aktiv]                   VARCHAR (50) NULL
);


GO
PRINT N'Creating [ods].[RD_SAP_OmkStedStam]...';


GO
CREATE TABLE [ods].[RD_SAP_OmkStedStam] (
    [Dummy]              VARCHAR (50) NULL,
    [OmkSted]            VARCHAR (50) NULL,
    [OmkStedNavn]        VARCHAR (50) NULL,
    [OmkStedAnsvarlig]   VARCHAR (50) NULL,
    [OmkStedBeskrivelse] VARCHAR (50) NULL,
    [StandardHierarki]   VARCHAR (50) NULL,
    [Profitcenter]       VARCHAR (50) NULL,
    [GyldigFradato]      VARCHAR (50) NULL,
    [GyldigTildato]      VARCHAR (50) NULL,
    [Timestamp]          DATETIME     NULL
);


GO
PRINT N'Creating [ods].[MD_A_Costobjects]...';


GO
CREATE TABLE [ods].[MD_A_Costobjects] (
    [Omraade]         VARCHAR (50)  NULL,
    [Reference]       VARCHAR (50)  NULL,
    [Produkt]         VARCHAR (50)  NULL,
    [HFO]             VARCHAR (50)  NULL,
    [FO]              VARCHAR (50)  NULL,
    [Name]            VARCHAR (50)  NULL,
    [Momsbelastning]  FLOAT (53)    NULL,
    [Type]            VARCHAR (50)  NULL,
    [ParentReference] VARCHAR (50)  NULL,
    [Togsystem]       VARCHAR (50)  NULL,
    [Kode]            VARCHAR (50)  NULL,
    [Beskrivelse]     VARCHAR (255) NULL,
    [Udbudt]          VARCHAR (50)  NULL,
    [Kommentar]       VARCHAR (255) NULL,
    [Aktiv]           VARCHAR (50)  NULL,
    [Markedsprisdok]  VARCHAR (50)  NULL,
    [Niveau]          VARCHAR (4)   NULL
);


GO
PRINT N'Creating [ods].[CD_Baneafgifter]...';


GO
CREATE TABLE [ods].[CD_Baneafgifter] (
    [Beskrivelse]     VARCHAR (50) NULL,
    [Maaned]          VARCHAR (50) NULL,
    [Togsystemnummer] VARCHAR (50) NULL,
    [Straekning]      VARCHAR (50) NULL,
    [ICStraekning]    VARCHAR (50) NULL,
    [Togkategori]     VARCHAR (50) NULL,
    [Banegruppe]      VARCHAR (50) NULL,
    [Togkm]           BIGINT       NULL,
    [Togtimer]        BIGINT       NULL,
    [Timestamp]       DATETIME     NULL
);


GO
PRINT N'Creating [ods].[RD_Costobjects]...';


GO
CREATE TABLE [ods].[RD_Costobjects] (
    [Omraade]         VARCHAR (50)   NULL,
    [Reference]       VARCHAR (50)   NOT NULL,
    [Produkt]         VARCHAR (50)   NULL,
    [HFO]             VARCHAR (50)   NULL,
    [FO]              VARCHAR (50)   NULL,
    [Name]            VARCHAR (50)   NULL,
    [Momsbelastning]  FLOAT (53)     NULL,
    [Type]            VARCHAR (50)   NULL,
    [ParentReference] VARCHAR (50)   NULL,
    [Togsystem]       INT            NULL,
    [Kode]            VARCHAR (50)   NULL,
    [Beskrivelse]     VARCHAR (1000) NULL,
    [Udbudt]          VARCHAR (50)   NULL,
    [Kommentar]       VARCHAR (200)  NULL,
    [Aktiv]           VARCHAR (50)   NULL,
    [Markedsprisdok]  VARCHAR (50)   NULL,
    [Timestamp]       DATETIME       NULL,
    [Period]          VARCHAR (50)   NULL,
    CONSTRAINT [IX_RD_Costobjects_1] UNIQUE NONCLUSTERED ([Reference] ASC, [Aktiv] ASC)
);


GO
PRINT N'Creating [ods].[CD_Togproduktion_Litra]...';


GO
CREATE TABLE [ods].[CD_Togproduktion_Litra] (
    [CD_Beskrivelse]          VARCHAR (50)    NULL,
    [Dato]                    DATETIME        NULL,
    [Tognr]                   INT             NULL,
    [Loebenr]                 INT             NULL,
    [TognrInterval]           VARCHAR (50)    NULL,
    [Fratidspunkt]            VARCHAR (50)    NULL,
    [Tiltidspunkt]            VARCHAR (50)    NULL,
    [Litra]                   VARCHAR (50)    NULL,
    [Ejer]                    VARCHAR (50)    NULL,
    [Jernbane]                VARCHAR (50)    NULL,
    [Frastation]              VARCHAR (50)    NULL,
    [Tilstation]              VARCHAR (50)    NULL,
    [Materieltype]            VARCHAR (50)    NULL,
    [RetningsbestemtStrk]     VARCHAR (100)   NULL,
    [IkkeRetningsbestemtStrk] VARCHAR (100)   NULL,
    [Loebestrk]               VARCHAR (100)   NULL,
    [Omraade]                 VARCHAR (50)    NULL,
    [Omraadeland]             VARCHAR (50)    NULL,
    [Division]                VARCHAR (50)    NULL,
    [Produkt]                 VARCHAR (50)    NULL,
    [Togkategori]             VARCHAR (50)    NULL,
    [Togkategoribeskrivelse]  VARCHAR (50)    NULL,
    [Togkategoriejer]         VARCHAR (50)    NULL,
    [Togsysnr]                VARCHAR (50)    NULL,
    [Togsysnavn]              VARCHAR (50)    NULL,
    [Togsysforkortelse]       VARCHAR (50)    NULL,
    [ICStraekning]            VARCHAR (50)    NULL,
    [Kontraktoperatoer]       VARCHAR (50)    NULL,
    [Tekniskoperatoer]        VARCHAR (50)    NULL,
    [erEkstraproduktion]      BIT             NULL,
    [erGennemgaaendeVogn]     BIT             NULL,
    [erPlaceringskoersel]     BIT             NULL,
    [erAflaast]               BIT             NULL,
    [erAflyst]                BIT             NULL,
    [erForstaerkning]         BIT             NULL,
    [erMaterielkoersel]       BIT             NULL,
    [erTomkoersel]            BIT             NULL,
    [Litrakm]                 DECIMAL (24, 6) NULL,
    [Litraminutter]           DECIMAL (24, 6) NULL,
    [Status]                  VARCHAR (50)    NULL,
    [Timestamp]               DATETIME        NULL
);


GO
PRINT N'Creating [ods].[CD_FPC_FTE]...';


GO
CREATE TABLE [ods].[CD_FPC_FTE] (
    [MedarbejderId] VARCHAR (50) NULL,
    [Navn]          VARCHAR (50) NULL,
    [BrugerId]      VARCHAR (50) NULL,
    [Firmakode]     VARCHAR (50) NULL,
    [Profitcenter]  VARCHAR (50) NULL,
    [OmkSted]       VARCHAR (50) NULL,
    [RegnPeriode]   VARCHAR (50) NULL,
    [LoanArt]       VARCHAR (50) NULL,
    [FTE]           VARCHAR (50) NULL,
    [Kommentar]     VARCHAR (50) NULL,
    [Timestamp]     DATETIME     NULL
);


GO
PRINT N'Creating [ods].[RD_FPC_FTE]...';


GO
CREATE TABLE [ods].[RD_FPC_FTE] (
    [MedarbejderId] VARCHAR (50) NULL,
    [Navn]          VARCHAR (50) NULL,
    [BrugerId]      VARCHAR (50) NULL,
    [Firmakode]     VARCHAR (50) NULL,
    [Profitcenter]  VARCHAR (50) NULL,
    [OmkSted]       VARCHAR (50) NULL,
    [RegnPeriode]   VARCHAR (50) NULL,
    [LoanArt]       VARCHAR (50) NULL,
    [FTE]           VARCHAR (50) NULL,
    [Timestamp]     DATETIME     NULL
);


GO
PRINT N'Creating [ods].[MD_Materiale_databasen]...';


GO
CREATE TABLE [ods].[MD_Materiale_databasen] (
    [Nummer]                    VARCHAR (20) NULL,
    [Antal]                     INT          NULL,
    [Litra]                     VARCHAR (6)  NULL,
    [Type]                      VARCHAR (10) NULL,
    [Variant]                   VARCHAR (26) NULL,
    [Kaldenavn]                 VARCHAR (19) NULL,
    [Egenavn]                   VARCHAR (22) NULL,
    [Antal vogne]               INT          NULL,
    [Hastig-hed]                INT          NULL,
    [Faste siddepladser]        INT          NULL,
    [Klapsæder]                 INT          NULL,
    [Traktionssystem]           VARCHAR (15) NULL,
    [Ejerforhold]               VARCHAR (14) NULL,
    [Bistro og Pantry]          VARCHAR (3)  NULL,
    [Salgs-automater]           VARCHAR (3)  NULL,
    [Green-speed]               VARCHAR (3)  NULL,
    [Godkendt til tunnelkørsel] VARCHAR (3)  NULL
);


GO
PRINT N'Creating [ods].[RD_Materiale_databasen]...';


GO
CREATE TABLE [ods].[RD_Materiale_databasen] (
    [Nummer]                    VARCHAR (20) NULL,
    [Antal]                     INT          NULL,
    [Litra]                     VARCHAR (6)  NULL,
    [Type]                      VARCHAR (10) NULL,
    [Variant]                   VARCHAR (26) NULL,
    [Kaldenavn]                 VARCHAR (19) NULL,
    [Egenavn]                   VARCHAR (22) NULL,
    [Antal vogne]               INT          NULL,
    [Hastig-hed]                INT          NULL,
    [Faste siddepladser]        VARCHAR (7)  NULL,
    [Klapsæder]                 INT          NULL,
    [Traktionssystem]           VARCHAR (15) NULL,
    [Ejerforhold]               VARCHAR (14) NULL,
    [Bistro og Pantry]          VARCHAR (3)  NULL,
    [Salgs-automater]           VARCHAR (3)  NULL,
    [Green-speed]               VARCHAR (3)  NULL,
    [Godkendt til tunnelkørsel] VARCHAR (3)  NULL
);


GO
PRINT N'Creating [ods].[Key_Dim_Omkostningssted]...';


GO
CREATE TABLE [ods].[Key_Dim_Omkostningssted] (
    [Pk_Key]               INT           IDENTITY (1, 1) NOT NULL,
    [Omkostningssted]      VARCHAR (256) NULL,
    [Gyldigfra]            DATETIME      NULL,
    [Gyldigtil]            DATETIME      NULL,
    [Created]              DATETIME      NULL,
    [Updated]              DATETIME      NULL,
    [Gyldigtil_tilrettet]  BIT           NULL,
    [omkostningssted_kort] VARCHAR (50)  NULL
);


GO
PRINT N'Creating [ods].[RD_Togproduktion_Litra]...';


GO
CREATE TABLE [ods].[RD_Togproduktion_Litra] (
    [Dato]                    DATETIME        NULL,
    [Tognr]                   INT             NULL,
    [Loebenr]                 INT             NULL,
    [TognrInterval]           VARCHAR (50)    NULL,
    [Fratidspunkt]            VARCHAR (50)    NULL,
    [Tiltidspunkt]            VARCHAR (50)    NULL,
    [Litra]                   VARCHAR (50)    NULL,
    [Ejer]                    VARCHAR (50)    NULL,
    [Jernbane]                VARCHAR (50)    NULL,
    [Frastation]              VARCHAR (50)    NULL,
    [Tilstation]              VARCHAR (50)    NULL,
    [Materieltype]            VARCHAR (50)    NULL,
    [RetningsbestemtStrk]     VARCHAR (100)   NULL,
    [IkkeRetningsbestemtStrk] VARCHAR (100)   NULL,
    [Loebestrk]               VARCHAR (100)   NULL,
    [Omraade]                 VARCHAR (50)    NULL,
    [Omraadeland]             VARCHAR (50)    NULL,
    [Division]                VARCHAR (50)    NULL,
    [Produkt]                 VARCHAR (50)    NULL,
    [Togkategori]             VARCHAR (50)    NULL,
    [Togkategoribeskrivelse]  VARCHAR (50)    NULL,
    [Togkategoriejer]         VARCHAR (50)    NULL,
    [Togsysnr]                VARCHAR (50)    NULL,
    [Togsysnavn]              VARCHAR (50)    NULL,
    [Togsysforkortelse]       VARCHAR (50)    NULL,
    [ICStraekning]            VARCHAR (50)    NULL,
    [Kontraktoperatoer]       VARCHAR (50)    NULL,
    [Tekniskoperatoer]        VARCHAR (50)    NULL,
    [erEkstraproduktion]      BIT             NULL,
    [erGennemgaaendeVogn]     BIT             NULL,
    [erPlaceringskoersel]     BIT             NULL,
    [erAflaast]               BIT             NULL,
    [erAflyst]                BIT             NULL,
    [erForstaerkning]         BIT             NULL,
    [erMaterielkoersel]       BIT             NULL,
    [erTomkoersel]            BIT             NULL,
    [Litrakm]                 DECIMAL (24, 6) NULL,
    [Litraminutter]           DECIMAL (24, 6) NULL,
    [Status]                  VARCHAR (50)    NULL,
    [Timestamp]               DATETIME        NULL
);


GO
PRINT N'Creating [ods].[RDT_Togproduktion_Litra]...';


GO
CREATE TABLE [ods].[RDT_Togproduktion_Litra] (
    [Dato]                    DATETIME        NULL,
    [Tognr]                   INT             NULL,
    [Loebenr]                 INT             NULL,
    [TognrInterval]           VARCHAR (50)    NULL,
    [Fratidspunkt]            VARCHAR (50)    NULL,
    [Tiltidspunkt]            VARCHAR (50)    NULL,
    [Litra]                   VARCHAR (50)    NULL,
    [Ejer]                    VARCHAR (50)    NULL,
    [Jernbane]                VARCHAR (50)    NULL,
    [Frastation]              VARCHAR (50)    NULL,
    [Tilstation]              VARCHAR (50)    NULL,
    [Materieltype]            VARCHAR (50)    NULL,
    [RetningsbestemtStrk]     VARCHAR (100)   NULL,
    [IkkeRetningsbestemtStrk] VARCHAR (100)   NULL,
    [Loebestrk]               VARCHAR (100)   NULL,
    [Omraade]                 VARCHAR (50)    NULL,
    [Omraadeland]             VARCHAR (50)    NULL,
    [Division]                VARCHAR (50)    NULL,
    [Produkt]                 VARCHAR (50)    NULL,
    [Togkategori]             VARCHAR (50)    NULL,
    [Togkategoribeskrivelse]  VARCHAR (50)    NULL,
    [Togkategoriejer]         VARCHAR (50)    NULL,
    [Togsysnr]                VARCHAR (50)    NULL,
    [Togsysnavn]              VARCHAR (50)    NULL,
    [Togsysforkortelse]       VARCHAR (50)    NULL,
    [ICStraekning]            VARCHAR (50)    NULL,
    [Kontraktoperatoer]       VARCHAR (50)    NULL,
    [Tekniskoperatoer]        VARCHAR (50)    NULL,
    [erEkstraproduktion]      BIT             NULL,
    [erGennemgaaendeVogn]     BIT             NULL,
    [erPlaceringskoersel]     BIT             NULL,
    [erAflaast]               BIT             NULL,
    [erAflyst]                BIT             NULL,
    [erForstaerkning]         BIT             NULL,
    [erMaterielkoersel]       BIT             NULL,
    [erTomkoersel]            BIT             NULL,
    [Litrakm]                 DECIMAL (24, 6) NULL,
    [Litraminutter]           DECIMAL (24, 6) NULL,
    [Status]                  VARCHAR (50)    NULL,
    [Timestamp]               DATETIME        NULL
);


GO
PRINT N'Creating [ods].[Key_Dim_Profitcenter]...';


GO
CREATE TABLE [ods].[Key_Dim_Profitcenter] (
    [Pk_Key]              INT           IDENTITY (1, 1) NOT NULL,
    [Profitcenter]        VARCHAR (256) NULL,
    [Gyldigfra]           DATETIME      NULL,
    [Gyldigtil]           DATETIME      NULL,
    [Created]             DATETIME      NULL,
    [Updated]             DATETIME      NULL,
    [Gyldigtil_tilrettet] BIT           NULL
);


GO
PRINT N'Creating [ods].[RDP_Togproduktion_Litra]...';


GO
CREATE TABLE [ods].[RDP_Togproduktion_Litra] (
    [Dato]                    DATETIME        NULL,
    [Tognr]                   INT             NULL,
    [Loebenr]                 INT             NULL,
    [TognrInterval]           VARCHAR (50)    NULL,
    [Fratidspunkt]            VARCHAR (50)    NULL,
    [Tiltidspunkt]            VARCHAR (50)    NULL,
    [Litra]                   VARCHAR (50)    NULL,
    [Ejer]                    VARCHAR (50)    NULL,
    [Jernbane]                VARCHAR (50)    NULL,
    [Frastation]              VARCHAR (50)    NULL,
    [Tilstation]              VARCHAR (50)    NULL,
    [Materieltype]            VARCHAR (50)    NULL,
    [RetningsbestemtStrk]     VARCHAR (100)   NULL,
    [IkkeRetningsbestemtStrk] VARCHAR (100)   NULL,
    [Loebestrk]               VARCHAR (100)   NULL,
    [Omraade]                 VARCHAR (50)    NULL,
    [Omraadeland]             VARCHAR (50)    NULL,
    [Division]                VARCHAR (50)    NULL,
    [Produkt]                 VARCHAR (50)    NULL,
    [Togkategori]             VARCHAR (50)    NULL,
    [Togkategoribeskrivelse]  VARCHAR (50)    NULL,
    [Togkategoriejer]         VARCHAR (50)    NULL,
    [Togsysnr]                VARCHAR (50)    NULL,
    [Togsysnavn]              VARCHAR (50)    NULL,
    [Togsysforkortelse]       VARCHAR (50)    NULL,
    [ICStraekning]            VARCHAR (50)    NULL,
    [Kontraktoperatoer]       VARCHAR (50)    NULL,
    [Tekniskoperatoer]        VARCHAR (50)    NULL,
    [erEkstraproduktion]      BIT             NULL,
    [erGennemgaaendeVogn]     BIT             NULL,
    [erPlaceringskoersel]     BIT             NULL,
    [erAflaast]               BIT             NULL,
    [erAflyst]                BIT             NULL,
    [erForstaerkning]         BIT             NULL,
    [erMaterielkoersel]       BIT             NULL,
    [erTomkoersel]            BIT             NULL,
    [Litrakm]                 DECIMAL (24, 6) NULL,
    [Litraminutter]           DECIMAL (24, 6) NULL,
    [Status]                  VARCHAR (50)    NULL,
    [Timestamp]               DATETIME        NULL
);


GO
PRINT N'Creating [ods].[RDP_Togproduktion_Tog]...';


GO
CREATE TABLE [ods].[RDP_Togproduktion_Tog] (
    [Dato]                    DATETIME        NULL,
    [AarMaaned]               VARCHAR (50)    NULL,
    [Togsysnr]                VARCHAR (50)    NULL,
    [Togsysnavn]              VARCHAR (50)    NULL,
    [Togsysforkortelse]       VARCHAR (50)    NULL,
    [ICStraekning]            VARCHAR (50)    NULL,
    [Togkategori]             VARCHAR (50)    NULL,
    [Togkategoribeskrivelse]  VARCHAR (50)    NULL,
    [Togkategoriejer]         VARCHAR (50)    NULL,
    [Tognr]                   INT             NULL,
    [TognrInterval]           VARCHAR (50)    NULL,
    [Fratidspunkt]            VARCHAR (50)    NULL,
    [Tiltidspunkt]            VARCHAR (50)    NULL,
    [Frastation]              VARCHAR (50)    NULL,
    [Tilstation]              VARCHAR (50)    NULL,
    [Traekkraft]              VARCHAR (50)    NULL,
    [Antaltraekkrafter]       INT             NULL,
    [AntalVogne]              INT             NULL,
    [Loebestrk]               VARCHAR (100)   NULL,
    [RetningsbestemtStrk]     VARCHAR (100)   NULL,
    [IkkeRetningsbestemtStrk] VARCHAR (100)   NULL,
    [Omraade]                 VARCHAR (50)    NULL,
    [Omraadeland]             VARCHAR (50)    NULL,
    [Division]                VARCHAR (50)    NULL,
    [Produkt]                 VARCHAR (50)    NULL,
    [Kontraktoperatoer]       VARCHAR (50)    NULL,
    [Tekniskoperatoer]        VARCHAR (50)    NULL,
    [erSaertog]               BIT             NULL,
    [erOmlagt]                BIT             NULL,
    [erMaterielkoersel]       BIT             NULL,
    [erTomkoersel]            BIT             NULL,
    [erEkstraproduktion]      BIT             NULL,
    [erTogdublering]          BIT             NULL,
    [erAflyst]                BIT             NULL,
    [Togkm]                   DECIMAL (24, 6) NULL,
    [Togminutter]             BIGINT          NULL,
    [Status]                  VARCHAR (50)    NULL,
    [Timestamp]               DATETIME        NULL
);


GO
PRINT N'Creating [ods].[RDH_Togproduktion_Litra]...';


GO
CREATE TABLE [ods].[RDH_Togproduktion_Litra] (
    [Dato]                    DATETIME        NULL,
    [Tognr]                   INT             NULL,
    [Loebenr]                 INT             NULL,
    [TognrInterval]           VARCHAR (50)    NULL,
    [Fratidspunkt]            VARCHAR (50)    NULL,
    [Tiltidspunkt]            VARCHAR (50)    NULL,
    [Litra]                   VARCHAR (50)    NULL,
    [Ejer]                    VARCHAR (50)    NULL,
    [Jernbane]                VARCHAR (50)    NULL,
    [Frastation]              VARCHAR (50)    NULL,
    [Tilstation]              VARCHAR (50)    NULL,
    [Materieltype]            VARCHAR (50)    NULL,
    [RetningsbestemtStrk]     VARCHAR (100)   NULL,
    [IkkeRetningsbestemtStrk] VARCHAR (100)   NULL,
    [Loebestrk]               VARCHAR (100)   NULL,
    [Omraade]                 VARCHAR (50)    NULL,
    [Omraadeland]             VARCHAR (50)    NULL,
    [Division]                VARCHAR (50)    NULL,
    [Produkt]                 VARCHAR (50)    NULL,
    [Togkategori]             VARCHAR (50)    NULL,
    [Togkategoribeskrivelse]  VARCHAR (50)    NULL,
    [Togkategoriejer]         VARCHAR (50)    NULL,
    [Togsysnr]                VARCHAR (50)    NULL,
    [Togsysnavn]              VARCHAR (50)    NULL,
    [Togsysforkortelse]       VARCHAR (50)    NULL,
    [ICStraekning]            VARCHAR (50)    NULL,
    [Kontraktoperatoer]       VARCHAR (50)    NULL,
    [Tekniskoperatoer]        VARCHAR (50)    NULL,
    [erEkstraproduktion]      BIT             NULL,
    [erGennemgaaendeVogn]     BIT             NULL,
    [erPlaceringskoersel]     BIT             NULL,
    [erAflaast]               BIT             NULL,
    [erAflyst]                BIT             NULL,
    [erForstaerkning]         BIT             NULL,
    [erMaterielkoersel]       BIT             NULL,
    [erTomkoersel]            BIT             NULL,
    [Litrakm]                 DECIMAL (24, 6) NULL,
    [Litraminutter]           DECIMAL (24, 6) NULL,
    [Status]                  VARCHAR (50)    NULL,
    [Timestamp]               DATETIME        NULL
);


GO
PRINT N'Creating [ods].[MD_Tidsintervaller]...';


GO
CREATE TABLE [ods].[MD_Tidsintervaller] (
    [Interval_Id] INT          NOT NULL,
    [Navn]        VARCHAR (50) NOT NULL,
    [Prioritet]   INT          NOT NULL
);


GO
PRINT N'Creating [ods].[CD_Togproduktion_Tog]...';


GO
CREATE TABLE [ods].[CD_Togproduktion_Tog] (
    [CD_Beskrivelse]          VARCHAR (50)    NULL,
    [Dato]                    DATETIME        NULL,
    [AarMaaned]               VARCHAR (50)    NULL,
    [Togsysnr]                VARCHAR (50)    NULL,
    [Togsysnavn]              VARCHAR (50)    NULL,
    [Togsysforkortelse]       VARCHAR (50)    NULL,
    [ICStraekning]            VARCHAR (50)    NULL,
    [Togkategori]             VARCHAR (50)    NULL,
    [Togkategoribeskrivelse]  VARCHAR (50)    NULL,
    [Togkategoriejer]         VARCHAR (50)    NULL,
    [Tognr]                   INT             NULL,
    [TognrInterval]           VARCHAR (50)    NULL,
    [Fratidspunkt]            VARCHAR (50)    NULL,
    [Tiltidspunkt]            VARCHAR (50)    NULL,
    [Frastation]              VARCHAR (50)    NULL,
    [Tilstation]              VARCHAR (50)    NULL,
    [Traekkraft]              VARCHAR (50)    NULL,
    [Antaltraekkrafter]       INT             NULL,
    [AntalVogne]              INT             NULL,
    [Loebestrk]               VARCHAR (100)   NULL,
    [RetningsbestemtStrk]     VARCHAR (100)   NULL,
    [IkkeRetningsbestemtStrk] VARCHAR (100)   NULL,
    [Omraade]                 VARCHAR (50)    NULL,
    [Omraadeland]             VARCHAR (50)    NULL,
    [Division]                VARCHAR (50)    NULL,
    [Produkt]                 VARCHAR (50)    NULL,
    [Kontraktoperatoer]       VARCHAR (50)    NULL,
    [Tekniskoperatoer]        VARCHAR (50)    NULL,
    [erSaertog]               BIT             NULL,
    [erOmlagt]                BIT             NULL,
    [erMaterielkoersel]       BIT             NULL,
    [erTomkoersel]            BIT             NULL,
    [erEkstraproduktion]      BIT             NULL,
    [erTogdublering]          BIT             NULL,
    [erAflyst]                BIT             NULL,
    [Togkm]                   DECIMAL (24, 6) NULL,
    [Togminutter]             BIGINT          NULL,
    [Status]                  VARCHAR (50)    NULL,
    [Timestamp]               DATETIME        NULL
);


GO
PRINT N'Creating [ods].[RDH_Togproduktion_Tog]...';


GO
CREATE TABLE [ods].[RDH_Togproduktion_Tog] (
    [Dato]                    DATETIME        NULL,
    [AarMaaned]               VARCHAR (50)    NULL,
    [Togsysnr]                VARCHAR (50)    NULL,
    [Togsysnavn]              VARCHAR (50)    NULL,
    [Togsysforkortelse]       VARCHAR (50)    NULL,
    [ICStraekning]            VARCHAR (50)    NULL,
    [Togkategori]             VARCHAR (50)    NULL,
    [Togkategoribeskrivelse]  VARCHAR (50)    NULL,
    [Togkategoriejer]         VARCHAR (50)    NULL,
    [Tognr]                   INT             NULL,
    [TognrInterval]           VARCHAR (50)    NULL,
    [Fratidspunkt]            VARCHAR (50)    NULL,
    [Tiltidspunkt]            VARCHAR (50)    NULL,
    [Frastation]              VARCHAR (50)    NULL,
    [Tilstation]              VARCHAR (50)    NULL,
    [Traekkraft]              VARCHAR (50)    NULL,
    [Antaltraekkrafter]       INT             NULL,
    [AntalVogne]              INT             NULL,
    [Loebestrk]               VARCHAR (100)   NULL,
    [RetningsbestemtStrk]     VARCHAR (100)   NULL,
    [IkkeRetningsbestemtStrk] VARCHAR (100)   NULL,
    [Omraade]                 VARCHAR (50)    NULL,
    [Omraadeland]             VARCHAR (50)    NULL,
    [Division]                VARCHAR (50)    NULL,
    [Produkt]                 VARCHAR (50)    NULL,
    [Kontraktoperatoer]       VARCHAR (50)    NULL,
    [Tekniskoperatoer]        VARCHAR (50)    NULL,
    [erSaertog]               BIT             NULL,
    [erOmlagt]                BIT             NULL,
    [erMaterielkoersel]       BIT             NULL,
    [erTomkoersel]            BIT             NULL,
    [erEkstraproduktion]      BIT             NULL,
    [erTogdublering]          BIT             NULL,
    [erAflyst]                BIT             NULL,
    [Togkm]                   DECIMAL (24, 6) NULL,
    [Togminutter]             BIGINT          NULL,
    [Status]                  VARCHAR (50)    NULL,
    [Timestamp]               DATETIME        NULL
);


GO
PRINT N'Creating [ods].[RD_Togproduktion_Tog]...';


GO
CREATE TABLE [ods].[RD_Togproduktion_Tog] (
    [Dato]                    DATETIME        NULL,
    [AarMaaned]               VARCHAR (50)    NULL,
    [Togsysnr]                VARCHAR (50)    NULL,
    [Togsysnavn]              VARCHAR (50)    NULL,
    [Togsysforkortelse]       VARCHAR (50)    NULL,
    [ICStraekning]            VARCHAR (50)    NULL,
    [Togkategori]             VARCHAR (50)    NULL,
    [Togkategoribeskrivelse]  VARCHAR (50)    NULL,
    [Togkategoriejer]         VARCHAR (50)    NULL,
    [Tognr]                   INT             NULL,
    [TognrInterval]           VARCHAR (50)    NULL,
    [Fratidspunkt]            VARCHAR (50)    NULL,
    [Tiltidspunkt]            VARCHAR (50)    NULL,
    [Frastation]              VARCHAR (50)    NULL,
    [Tilstation]              VARCHAR (50)    NULL,
    [Traekkraft]              VARCHAR (50)    NULL,
    [Antaltraekkrafter]       INT             NULL,
    [AntalVogne]              INT             NULL,
    [Loebestrk]               VARCHAR (100)   NULL,
    [RetningsbestemtStrk]     VARCHAR (100)   NULL,
    [IkkeRetningsbestemtStrk] VARCHAR (100)   NULL,
    [Omraade]                 VARCHAR (50)    NULL,
    [Omraadeland]             VARCHAR (50)    NULL,
    [Division]                VARCHAR (50)    NULL,
    [Produkt]                 VARCHAR (50)    NULL,
    [Kontraktoperatoer]       VARCHAR (50)    NULL,
    [Tekniskoperatoer]        VARCHAR (50)    NULL,
    [erSaertog]               BIT             NULL,
    [erOmlagt]                BIT             NULL,
    [erMaterielkoersel]       BIT             NULL,
    [erTomkoersel]            BIT             NULL,
    [erEkstraproduktion]      BIT             NULL,
    [erTogdublering]          BIT             NULL,
    [erAflyst]                BIT             NULL,
    [Togkm]                   DECIMAL (24, 6) NULL,
    [Togminutter]             BIGINT          NULL,
    [Status]                  VARCHAR (50)    NULL,
    [Timestamp]               DATETIME        NULL
);


GO
PRINT N'Creating [ods].[CD_LTD2_Lokofravaer]...';


GO
CREATE TABLE [ods].[CD_LTD2_Lokofravaer] (
    [CprNr]        VARCHAR (50)    NULL,
    [Pernr]        VARCHAR (50)    NULL,
    [Tjenestested] VARCHAR (50)    NULL,
    [Elementkode]  VARCHAR (50)    NULL,
    [Turnr]        VARCHAR (50)    NULL,
    [Turdag]       VARCHAR (50)    NULL,
    [AntalMin]     DECIMAL (24, 6) NULL,
    [Periode]      VARCHAR (50)    NULL,
    [DsbId]        VARCHAR (50)    NULL
);


GO
PRINT N'Creating [ods].[TD_RDP_Togproduktion_Tog]...';


GO
CREATE TABLE [ods].[TD_RDP_Togproduktion_Tog] (
    [Tognr]                   INT             NULL,
    [Dato]                    DATETIME        NULL,
    [Fratidspunkt]            VARCHAR (50)    NULL,
    [Tiltidspunkt]            VARCHAR (50)    NULL,
    [Frastation]              VARCHAR (50)    NULL,
    [Tilstation]              VARCHAR (50)    NULL,
    [Togkm]                   NUMERIC (24, 6) NULL,
    [PlanSaertog]             VARCHAR (50)    NULL,
    [Trækkraft]               VARCHAR (50)    NULL,
    [Togminutter]             NUMERIC (24, 6) NULL,
    [Omlagt]                  BIT             NULL,
    [Materielkørsel]          BIT             NULL,
    [Tomkørsel]               BIT             NULL,
    [AntalTraekkraefter]      INT             NULL,
    [Togsysnr]                INT             NULL,
    [Togdublering]            BIT             NULL,
    [AntalVogne]              INT             NULL,
    [RetningsbestemtStrk]     VARCHAR (100)   NULL,
    [IkkeRetningsbestemtStrk] VARCHAR (100)   NULL,
    [Omraade]                 VARCHAR (50)    NULL,
    [Omraadeland]             VARCHAR (50)    NULL,
    [TognrInterval]           VARCHAR (50)    NULL,
    [Division]                VARCHAR (50)    NULL,
    [Produkt]                 VARCHAR (50)    NULL,
    [Togkategoribeskrivelse]  VARCHAR (50)    NULL,
    [Togkategoriejer]         VARCHAR (50)    NULL,
    [Togsysnavn]              VARCHAR (50)    NULL,
    [Togsysforkortelse]       VARCHAR (50)    NULL,
    [Loebestrk]               VARCHAR (100)   NULL,
    [Aflyst]                  VARCHAR (50)    NULL,
    [ICStraekning]            VARCHAR (50)    NULL,
    [Togkategori]             VARCHAR (50)    NULL,
    [Ugedag]                  VARCHAR (50)    NULL,
    [Kontraktoperator]        VARCHAR (50)    NULL,
    [Tekniskoperator]         VARCHAR (50)    NULL,
    [Ekstraproduktion]        BIT             NULL,
    [Column 39]               VARCHAR (255)   NULL,
    [erSaertog]               BIT             NULL,
    [erAflyst]                BIT             NULL
);


GO
PRINT N'Creating [ods].[RD_LTD2_Lokofravaer]...';


GO
CREATE TABLE [ods].[RD_LTD2_Lokofravaer] (
    [CprNr]        VARCHAR (50)    NULL,
    [Pernr]        VARCHAR (50)    NULL,
    [Tjenestested] VARCHAR (50)    NULL,
    [Elementkode]  VARCHAR (50)    NULL,
    [Turnr]        VARCHAR (50)    NULL,
    [Turdag]       VARCHAR (50)    NULL,
    [AntalMin]     DECIMAL (24, 6) NULL,
    [Periode]      VARCHAR (50)    NULL,
    [DsbId]        VARCHAR (50)    NULL,
    [Timestamp]    DATETIME        NULL
);


GO
PRINT N'Creating [ods].[CD_LTD2_Lokopersonale]...';


GO
CREATE TABLE [ods].[CD_LTD2_Lokopersonale] (
    [CprNr]            VARCHAR (50)    NULL,
    [Pernr]            VARCHAR (50)    NULL,
    [Tjenestested]     VARCHAR (50)    NULL,
    [Elementkode]      VARCHAR (50)    NULL,
    [Elementkodetekst] VARCHAR (50)    NULL,
    [Afgangsstation]   VARCHAR (50)    NULL,
    [Ankomststation]   VARCHAR (50)    NULL,
    [Turnr]            VARCHAR (50)    NULL,
    [Turdag]           VARCHAR (50)    NULL,
    [Praktik]          VARCHAR (50)    NULL,
    [Togsystem]        VARCHAR (50)    NULL,
    [Tognr]            VARCHAR (50)    NULL,
    [Litra]            VARCHAR (50)    NULL,
    [AntalMin]         DECIMAL (24, 6) NULL,
    [Antalture]        SMALLINT        NULL,
    [Kilde]            VARCHAR (50)    NULL,
    [Periode]          DATETIME        NULL,
    [Timestamp]        DATETIME        NULL,
    [DsbId]            VARCHAR (50)    NULL
);


GO
PRINT N'Creating [ods].[RD_LTD2_Lokopersonale]...';


GO
CREATE TABLE [ods].[RD_LTD2_Lokopersonale] (
    [CprNr]            VARCHAR (50)    NULL,
    [Pernr]            VARCHAR (50)    NULL,
    [Tjenestested]     VARCHAR (50)    NULL,
    [Elementkode]      VARCHAR (50)    NULL,
    [Elementkodetekst] VARCHAR (50)    NULL,
    [Afgangsstation]   VARCHAR (50)    NULL,
    [Ankomststation]   VARCHAR (50)    NULL,
    [Turnr]            VARCHAR (50)    NULL,
    [Turdag]           VARCHAR (50)    NULL,
    [Praktik]          VARCHAR (50)    NULL,
    [Togsystem]        VARCHAR (50)    NULL,
    [Tognr]            VARCHAR (50)    NULL,
    [Litra]            VARCHAR (50)    NULL,
    [AntalMin]         DECIMAL (24, 6) NULL,
    [Antalture]        SMALLINT        NULL,
    [Kilde]            VARCHAR (50)    NULL,
    [Periode]          VARCHAR (50)    NULL,
    [Timestamp]        DATETIME        NULL,
    [Status]           VARCHAR (50)    NULL,
    [DsbId]            VARCHAR (50)    NULL,
    [Fravaer]          CHAR (1)        NULL
);


GO
PRINT N'Creating [ods].[MD_Stog_DoegnInddeling]...';


GO
CREATE TABLE [ods].[MD_Stog_DoegnInddeling] (
    [Doegn_Inddeling] VARCHAR (5)  NOT NULL,
    [Navn]            VARCHAR (50) NOT NULL
);


GO
PRINT N'Creating [ods].[TD_Strækning_S_Lokofører_Opgaver]...';


GO
CREATE TABLE [ods].[TD_Strækning_S_Lokofører_Opgaver] (
    [DI_Tid]                 VARCHAR (20) NULL,
    [DI_S_Straekning]        INT          NULL,
    [DI_Tidsintervaller]     INT          NULL,
    [DSB_Brugerid]           VARCHAR (50) NULL,
    [DI_S_turdepot]          VARCHAR (30) NULL,
    [ElementCode]            VARCHAR (30) NULL,
    [Opgave_tidspunkt_start] DATETIME     NULL,
    [Opgave_tidspunkt_slut]  DATETIME     NULL,
    [Opgave_Station_start]   VARCHAR (30) NULL,
    [Opgave_Station_Slut]    VARCHAR (30) NULL,
    [Opgave_varighed]        NUMERIC (10) NULL,
    [Stræknings_varighed]    INT          NULL,
    [Strækning_Frastation]   VARCHAR (10) NULL,
    [Strækning_Tilstation]   VARCHAR (10) NULL,
    [Strækning_Afgang]       DATETIME     NULL,
    [Strækning_Ankomst]      DATETIME     NULL,
    [Tognr]                  INT          NULL,
    [PDS_Strækningsvarighed] FLOAT (53)   NULL,
    [Aflyst]                 VARCHAR (20) NULL,
    [DI_S_Doegn_Inddeling]   INT          NULL
);


GO
PRINT N'Creating [ods].[TD_Strækning_Mapping]...';


GO
CREATE TABLE [ods].[TD_Strækning_Mapping] (
    [DI_Tid]               VARCHAR (50) NOT NULL,
    [DI_S_Straekning]      INT          NOT NULL,
    [DI_Tidsintervaller]   INT          NOT NULL,
    [Afgang]               DATETIME     NOT NULL,
    [Ankomst]              DATETIME     NOT NULL,
    [Tognr]                INT          NOT NULL,
    [Frastation]           VARCHAR (10) NULL,
    [Tilstation]           VARCHAR (10) NULL,
    [Kilde]                VARCHAR (50) NULL,
    [Aflyst]               VARCHAR (20) NULL,
    [DI_S_Doegn_Inddeling] INT          NULL
);


GO
PRINT N'Creating [ods].[RD_PDS_Lokofører_STOG]...';


GO
CREATE TABLE [ods].[RD_PDS_Lokofører_STOG] (
    [E_EXPORT_CODE]               NUMERIC (10)  NULL,
    [E_DAY_DATE]                  DATETIME      NULL,
    [E_DATE_TIME_REGISTERED]      DATETIME      NULL,
    [P_DAY_TYPE_DESCRIPTION]      NVARCHAR (30) NULL,
    [P_DATE_TIME_REGISTERED]      DATETIME      NULL,
    [P_BRUGERID]                  VARCHAR (50)  NULL,
    [P_NICKNAME]                  NVARCHAR (30) NULL,
    [P_PERSON_PB_DESCRIPTION]     NVARCHAR (30) NULL,
    [P_ROSTER_COMPANY_ID]         NVARCHAR (30) NULL,
    [P_ROSTER_WEEK]               NUMERIC (5)   NULL,
    [P_ROSTER_PB_DESCRIPTION]     NVARCHAR (30) NULL,
    [D_DUTY_SERVER_ID]            NUMERIC (10)  NULL,
    [D_VERSION_SET_ID]            NUMERIC (10)  NULL,
    [D_DUTY_COMPANY_ID]           NVARCHAR (30) NULL,
    [D_DURATION]                  NUMERIC (10)  NULL,
    [D_DUTY_PB_DESCRIPTION]       NVARCHAR (30) NULL,
    [D_START_DATE_TIME]           DATETIME      NULL,
    [D_END_DATE_TIME]             DATETIME      NULL,
    [D_START_STATION_DESCRIPTION] NVARCHAR (30) NULL,
    [D_END_STATION_DESCRIPTION]   NVARCHAR (30) NULL,
    [D_FIXED_START_DATE_TIME]     DATETIME      NULL,
    [D_FIXED_END_DATE_TIME]       DATETIME      NULL,
    [T_TASK_TYPE_DESCRIPTION]     NVARCHAR (30) NULL,
    [T_START_DATE_TIME]           DATETIME      NULL,
    [T_END_DATE_TIME]             DATETIME      NULL,
    [T_SERIAL_NUMBER]             NUMERIC (10)  NULL,
    [T_START_STATION_DESCRIPTION] NVARCHAR (30) NULL,
    [T_END_STATION_DESCRIPTION]   NVARCHAR (30) NULL,
    [T_DURATION]                  NUMERIC (10)  NULL,
    [T_ACTIVITY_DESCRIPTION]      NVARCHAR (60) NULL
);


GO
PRINT N'Creating [ods].[RD_RIM_Rejseindtaegter_togsystemer]...';


GO
CREATE TABLE [ods].[RD_RIM_Rejseindtaegter_togsystemer] (
    [CostObjekt] VARCHAR (50) NULL,
    [Enhed]      VARCHAR (50) NULL,
    [År]         INT          NULL,
    [Værdi]      FLOAT (53)   NULL
);


GO
PRINT N'Creating [ods].[RD_RIM_Rejseindtaegter]...';


GO
CREATE TABLE [ods].[RD_RIM_Rejseindtaegter] (
    [PeriodeIndlæst]   VARCHAR (50) NULL,
    [Stationsnr]       VARCHAR (50) NULL,
    [Stationsnavn]     VARCHAR (50) NULL,
    [Stationstype]     VARCHAR (50) NULL,
    [Landsdel]         VARCHAR (50) NULL,
    [Togsystem]        VARCHAR (50) NULL,
    [TogsystemNavn]    VARCHAR (50) NULL,
    [CostObjekt]       VARCHAR (50) NULL,
    [Produkt]          VARCHAR (50) NULL,
    [TidsintervalNavn] VARCHAR (50) NULL,
    [Enhed]            VARCHAR (50) NULL,
    [Værdi]            FLOAT (53)   NULL
);


GO
PRINT N'Creating [ods].[RD_FPC_Lønsum]...';


GO
CREATE TABLE [ods].[RD_FPC_Lønsum] (
    [Profitcenter]     VARCHAR (50) NULL,
    [ProfitcenterNavn] VARCHAR (50) NULL,
    [Art]              VARCHAR (50) NULL,
    [ArtNavn]          VARCHAR (50) NULL,
    [Medarb_Grp]       VARCHAR (50) NULL,
    [Medarb_GrpNavn]   VARCHAR (50) NULL,
    [PeriodeIndlæst]   VARCHAR (50) NULL,
    [Lønsum]           VARCHAR (50) NULL,
    [FTE]              VARCHAR (50) NULL
);


GO
PRINT N'Creating [ods].[RD_Stog_Rejsedata_Tmp]...';


GO
CREATE TABLE [ods].[RD_Stog_Rejsedata_Tmp] (
    [Periode]       DATETIME   NULL,
    [Rejsetal]      FLOAT (53) NULL,
    [City]          FLOAT (53) NULL,
    [Køge]          FLOAT (53) NULL,
    [Høje Taastrup] FLOAT (53) NULL,
    [Frederikssund] FLOAT (53) NULL,
    [Farum]         FLOAT (53) NULL,
    [Hillerød]      FLOAT (53) NULL,
    [Klampenborg]   FLOAT (53) NULL,
    [Ringbanen]     FLOAT (53) NULL
);


GO
PRINT N'Creating [ods].[RD_Stog_Rejsedata]...';


GO
CREATE TABLE [ods].[RD_Stog_Rejsedata] (
    [PeriodeIndlæst] INT          NULL,
    [Togsystem]      VARCHAR (50) NULL,
    [Enhed]          VARCHAR (50) NULL,
    [Værdi]          FLOAT (53)   NULL
);


GO
PRINT N'Creating [dbo].[GD_R_Baneafgifter_FR]...';


GO
CREATE TABLE [dbo].[GD_R_Baneafgifter_FR] (
    [PeriodeIndlæst] VARCHAR (50) NULL,
    [Afgift]         VARCHAR (50) NULL,
    [Passage]        VARCHAR (50) NULL,
    [Produkt]        VARCHAR (50) NULL,
    [Togsystem]      VARCHAR (50) NULL,
    [TogsystemNavn]  VARCHAR (50) NULL,
    [Costobjekt]     VARCHAR (50) NULL,
    [Enhed]          VARCHAR (50) NULL,
    [Værdi]          FLOAT (53)   NULL
);


GO
PRINT N'Creating [dbo].[GD_R_Lokoførertid_FR]...';


GO
CREATE TABLE [dbo].[GD_R_Lokoførertid_FR] (
    [PeriodeIndlæst]   VARCHAR (50) NULL,
    [Turdepot]         VARCHAR (50) NULL,
    [TurdepotNavn]     VARCHAR (50) NULL,
    [OpgaveType]       VARCHAR (50) NULL,
    [OpgaveGruppe]     VARCHAR (50) NULL,
    [OpgaveGruppeNavn] VARCHAR (50) NULL,
    [ElementKode]      VARCHAR (50) NULL,
    [ElementKodeNavn]  VARCHAR (50) NULL,
    [Produkt]          VARCHAR (50) NULL,
    [Togsystem]        VARCHAR (50) NULL,
    [TogsystemNavn]    VARCHAR (50) NULL,
    [Timer]            FLOAT (53)   NULL,
    [Costobjekt]       VARCHAR (50) NULL,
    [TidsintervalNavn] VARCHAR (50) NULL
);


GO
PRINT N'Creating [dbo].[GD_R_Lokoførertid_FR_Fix]...';


GO
CREATE TABLE [dbo].[GD_R_Lokoførertid_FR_Fix] (
    [PeriodeIndlæst]   VARCHAR (50) NULL,
    [Turdepot]         VARCHAR (50) NULL,
    [TurdepotNavn]     VARCHAR (50) NULL,
    [OpgaveType]       VARCHAR (50) NULL,
    [OpgaveGruppe]     VARCHAR (50) NULL,
    [OpgaveGruppeNavn] VARCHAR (50) NULL,
    [ElementKode]      VARCHAR (50) NULL,
    [ElementKodeNavn]  VARCHAR (50) NULL,
    [Produkt]          VARCHAR (50) NULL,
    [Togsystem]        VARCHAR (50) NULL,
    [TogsystemNavn]    VARCHAR (50) NULL,
    [Timer]            FLOAT (53)   NULL,
    [Costobjekt]       VARCHAR (50) NULL,
    [TidsintervalNavn] VARCHAR (50) NULL
);


GO
PRINT N'Creating [dbo].[GD_R_Lokoførertid_STog]...';


GO
CREATE TABLE [dbo].[GD_R_Lokoførertid_STog] (
    [periodeIndlæst]   VARCHAR (6)  NULL,
    [Turdepot]         VARCHAR (50) NULL,
    [TurdepotNavn]     VARCHAR (50) NULL,
    [OpgaveType]       VARCHAR (50) NULL,
    [OpgaveGruppe]     VARCHAR (50) NULL,
    [OpgaveGruppeNavn] VARCHAR (50) NULL,
    [Togsystem]        VARCHAR (50) NULL,
    [TogsystemNavn]    VARCHAR (50) NULL,
    [Costobjekt]       VARCHAR (50) NULL,
    [TidsintervalNavn] VARCHAR (50) NULL,
    [Timer]            FLOAT (53)   NULL
);


GO
PRINT N'Creating [dbo].[GD_R_LønsumAnsættelsetype]...';


GO
CREATE TABLE [dbo].[GD_R_LønsumAnsættelsetype] (
    [Profitcenter]     VARCHAR (50) NULL,
    [ProfitcenterNavn] VARCHAR (50) NULL,
    [Art]              VARCHAR (50) NULL,
    [ArtNavn]          VARCHAR (50) NULL,
    [Medarb_Grp]       VARCHAR (50) NULL,
    [Medarb_GrpNavn]   VARCHAR (50) NULL,
    [PeriodeIndlæst]   VARCHAR (50) NULL,
    [Lønsum]           FLOAT (53)   NULL
);


GO
PRINT N'Creating [dbo].[GD_R_Personaledata]...';


GO
CREATE TABLE [dbo].[GD_R_Personaledata] (
    [PeriodeIndlæst]     VARCHAR (50) NULL,
    [Profitcenter]       VARCHAR (50) NULL,
    [ProfitcenterNavn]   VARCHAR (50) NULL,
    [OmkStedKont]        VARCHAR (50) NULL,
    [OmkStedNavn]        VARCHAR (50) NULL,
    [Fuldtidsstillinger] FLOAT (53)   NULL
);


GO
PRINT N'Creating [dbo].[GD_R_RejseIndtægter_Togsystem_FR]...';


GO
CREATE TABLE [dbo].[GD_R_RejseIndtægter_Togsystem_FR] (
    [PeriodeIndlæst]     VARCHAR (50) NULL,
    [togsystemnummer]    VARCHAR (50) NULL,
    [Togsystemnavn_Kort] VARCHAR (50) NULL,
    [costObjekt]         VARCHAR (50) NULL,
    [Enhed]              VARCHAR (50) NULL,
    [værdi]              FLOAT (53)   NULL
);


GO
PRINT N'Creating [dbo].[GD_R_RejserIndtægter_FR]...';


GO
CREATE TABLE [dbo].[GD_R_RejserIndtægter_FR] (
    [PeriodeIndlæst]   VARCHAR (50) NULL,
    [Stationsnr]       VARCHAR (50) NULL,
    [Stationsnavn]     VARCHAR (50) NULL,
    [Stationstype]     VARCHAR (50) NULL,
    [Landsdel]         VARCHAR (50) NULL,
    [Togsystem]        VARCHAR (50) NULL,
    [TogsystemNavn]    VARCHAR (50) NULL,
    [CostObjekt]       VARCHAR (50) NULL,
    [Produkt]          VARCHAR (50) NULL,
    [TidsintervalNavn] VARCHAR (50) NULL,
    [Enhed]            VARCHAR (50) NULL,
    [Værdi]            FLOAT (53)   NULL
);


GO
PRINT N'Creating [dbo].[GD_R_RejserIndtægter_Stog]...';


GO
CREATE TABLE [dbo].[GD_R_RejserIndtægter_Stog] (
    [PeriodeIndlæst] VARCHAR (50) NULL,
    [Togsystem]      VARCHAR (50) NULL,
    [TogsystemNavn]  VARCHAR (50) NULL,
    [Costobjekt]     VARCHAR (50) NULL,
    [Enhed]          VARCHAR (50) NULL,
    [Værdi]          FLOAT (53)   NULL
);


GO
PRINT N'Creating [dbo].[GD_R_Togførertid_FR]...';


GO
CREATE TABLE [dbo].[GD_R_Togførertid_FR] (
    [PeriodeIndlæst]   VARCHAR (50) NULL,
    [Turdepot]         VARCHAR (5)  NOT NULL,
    [TurdepotNavn]     VARCHAR (50) NULL,
    [OpgaveType]       VARCHAR (50) NULL,
    [OpgaveGruppe]     VARCHAR (50) NULL,
    [OpgaveGruppeNavn] VARCHAR (50) NULL,
    [ElementKode]      VARCHAR (50) NULL,
    [ElementKodeNavn]  VARCHAR (50) NULL,
    [Produkt]          VARCHAR (50) NULL,
    [Togsystem]        INT          NULL,
    [TogsystemNavn]    VARCHAR (50) NULL,
    [Timer]            FLOAT (53)   NULL,
    [Costobjekt]       VARCHAR (50) NULL,
    [TidsintervalNavn] VARCHAR (50) NULL
);


GO
PRINT N'Creating [dbo].[GD_R_Togproduktion_FR]...';


GO
CREATE TABLE [dbo].[GD_R_Togproduktion_FR] (
    [PeriodeIndlæst]   VARCHAR (50) NULL,
    [Materielkørsel]   VARCHAR (50) NULL,
    [LitraTypeID]      VARCHAR (50) NULL,
    [LitraTypeNavn]    VARCHAR (50) NULL,
    [Togsystem]        VARCHAR (50) NULL,
    [TogsystemNavn]    VARCHAR (50) NULL,
    [TidsintervalNavn] VARCHAR (50) NULL,
    [CostObjekt]       VARCHAR (50) NULL,
    [Enhed]            VARCHAR (50) NULL,
    [Værdi]            FLOAT (53)   NULL
);


GO
PRINT N'Creating [dbo].[GD_R_Togproduktion_STog]...';


GO
CREATE TABLE [dbo].[GD_R_Togproduktion_STog] (
    [PeriodeIndlæst]   VARCHAR (50) NULL,
    [Litratype]        VARCHAR (50) NULL,
    [Togsystem]        VARCHAR (50) NULL,
    [TogsystemNavn]    VARCHAR (50) NULL,
    [Costobjekt]       VARCHAR (50) NULL,
    [Enhed]            VARCHAR (50) NULL,
    [Værdi]            FLOAT (53)   NULL,
    [TidsintervalNavn] VARCHAR (50) NULL
);


GO
PRINT N'Creating [dbo].[GD_R_Økonomi_Anlæg]...';


GO
CREATE TABLE [dbo].[GD_R_Økonomi_Anlæg] (
    [HovednrUnr]            VARCHAR (50) NULL,
    [Firmakode]             VARCHAR (50) NULL,
    [AktiverDato]           DATETIME     NULL,
    [BetegnelseAnlaegAktiv] VARCHAR (50) NULL,
    [Balkonto]              VARCHAR (50) NULL,
    [AnlKlasse]             VARCHAR (50) NULL,
    [AkkAfskrPrimo]         FLOAT (53)   NULL,
    [AkkAfskrUltimo]        FLOAT (53)   NULL,
    [Afskrivning]           FLOAT (53)   NULL,
    [BogfoertVaerdiPrimo]   FLOAT (53)   NULL,
    [BogfoertVaerdiUltimo]  FLOAT (53)   NULL,
    [OmkStedUltimo]         VARCHAR (50) NULL,
    [OmkStedNavnUltimo]     VARCHAR (50) NULL,
    [Sats]                  FLOAT (53)   NULL,
    [AnskVaerdi]            FLOAT (53)   NULL,
    [Profitcenter]          VARCHAR (50) NULL,
    [AfskrivningerAM]       FLOAT (53)   NULL,
    [Afvigelse]             FLOAT (53)   NULL,
    [Forrentningsgrundlag]  FLOAT (53)   NULL,
    [Forrentning]           FLOAT (53)   NULL,
    [Timestamp]             DATETIME     NULL,
    [Delområde]             VARCHAR (50) NULL,
    [Beskrivelse]           VARCHAR (50) NULL,
    [Periode]               VARCHAR (50) NULL,
    [KildeArk]              VARCHAR (50) NULL
);


GO
PRINT N'Creating [dbo].[GD_R_Økonomi_Drift]...';


GO
CREATE TABLE [dbo].[GD_R_Økonomi_Drift] (
    [Profitcenter]                 VARCHAR (50)   NULL,
    [Profitcenternavn_dont_use]    VARCHAR (50)   NULL,
    [Omkostningssted]              VARCHAR (50)   NULL,
    [Omkostningsstednavn_dont_use] VARCHAR (50)   NULL,
    [Omkostningsart]               VARCHAR (50)   NULL,
    [Omkostningsartnavn_dont_use]  VARCHAR (50)   NULL,
    [PSP-element]                  VARCHAR (50)   NULL,
    [PSP-elementNavn_dont_use]     VARCHAR (50)   NULL,
    [Ordre]                        VARCHAR (50)   NULL,
    [Ordrenavn_dont_use]           VARCHAR (50)   NULL,
    [Litratype]                    VARCHAR (50)   NULL,
    [Litratypenavn_dont_use]       VARCHAR (50)   NULL,
    [Delområde]                    VARCHAR (50)   NULL,
    [DelområdeNavn]                VARCHAR (50)   NULL,
    [StationsNr]                   VARCHAR (50)   NULL,
    [StationsNavn]                 VARCHAR (50)   NULL,
    [StationsType]                 VARCHAR (50)   NULL,
    [StationsTypeNavn]             VARCHAR (50)   NULL,
    [NøgleFastEjendom]             VARCHAR (50)   NULL,
    [Beskrivelse]                  VARCHAR (200)  NULL,
    [FaktiskBeløb]                 FLOAT (53)     NULL,
    [indlæstTidspunktRådata]       DATETIME       NULL,
    [indlæstAfRådata]              NVARCHAR (128) NULL,
    [Momsstatus]                   FLOAT (53)     NULL,
    [CeArtGrp]                     VARCHAR (50)   NULL,
    [CeArtGrpNavn]                 VARCHAR (50)   NULL,
    [ArtGrp]                       VARCHAR (50)   NULL,
    [ArtGrpNavn]                   VARCHAR (50)   NULL,
    [Variabilitet]                 VARCHAR (50)   NULL,
    [VariabilitetNavn]             VARCHAR (50)   NULL,
    [Reversibilitet]               VARCHAR (50)   NULL,
    [ReversibilitetNavn]           VARCHAR (50)   NULL,
    [indlæstTidspunktManuelledata] DATETIME       NULL,
    [indlæstAfManuelleDAta]        NVARCHAR (128) NULL,
    [indlæstTidspunkt]             DATETIME       NULL,
    [indlæstAf]                    [sysname]      NULL,
    [Periode]                      VARCHAR (50)   NULL,
    [KildeArk]                     VARCHAR (50)   NULL
);


GO
PRINT N'Creating unnamed constraint on [edw].[DI_S_Materiel]...';


GO
ALTER TABLE [edw].[DI_S_Materiel]
    ADD DEFAULT ('') FOR [Materielkategori];


GO
PRINT N'Creating [edw].[DV_DI_Medarbejder_Togfører_FR_Aktiv]...';


GO
ALTER TABLE [edw].[DI_Medarbejder_Togfører_FR]
    ADD CONSTRAINT [DV_DI_Medarbejder_Togfører_FR_Aktiv] DEFAULT ('J') FOR [Aktiv];


GO
PRINT N'Creating [edw].[DV_DI_Medarbejder_Togfører_FR]...';


GO
ALTER TABLE [edw].[DI_Medarbejder_Togfører_FR]
    ADD CONSTRAINT [DV_DI_Medarbejder_Togfører_FR] DEFAULT (getdate()) FOR [Tidsstempel];


GO
PRINT N'Creating unnamed constraint on [edw].[FT_Togproduktion_Tog]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_Tog]
    ADD DEFAULT ((0)) FOR [erTrafikkontraktProduktion];


GO
PRINT N'Creating unnamed constraint on [edw].[FT_Togproduktion_Litra]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_Litra]
    ADD DEFAULT ((0)) FOR [erTrafikkontraktProduktion];


GO
PRINT N'Creating [etl].[DF_LoaderLog_Success]...';


GO
ALTER TABLE [etl].[Ods_LoaderLog]
    ADD CONSTRAINT [DF_LoaderLog_Success] DEFAULT ((0)) FOR [Success];


GO
PRINT N'Creating [etl].[DF_PackageLog_Success]...';


GO
ALTER TABLE [etl].[Grl_PackageLog]
    ADD CONSTRAINT [DF_PackageLog_Success] DEFAULT ((0)) FOR [Success];


GO
PRINT N'Creating [etl].[DF_ExtractLog_ExtractCount]...';


GO
ALTER TABLE [etl].[Edw_TabRefLog]
    ADD CONSTRAINT [DF_ExtractLog_ExtractCount] DEFAULT ((0)) FOR [TypeRefresh];


GO
PRINT N'Creating [etl].[DF_ExtractLog_Success]...';


GO
ALTER TABLE [etl].[Edw_TabRefLog]
    ADD CONSTRAINT [DF_ExtractLog_Success] DEFAULT ((0)) FOR [Success];


GO
PRINT N'Creating unnamed constraint on [ods].[MD_G_STAM_Timer_Grp_Togførertid]...';


GO
ALTER TABLE [ods].[MD_G_STAM_Timer_Grp_Togførertid]
    ADD DEFAULT (getdate()) FOR [indlæstTidspunkt];


GO
PRINT N'Creating unnamed constraint on [ods].[MD_G_STAM_Timer_Grp_Togførertid]...';


GO
ALTER TABLE [ods].[MD_G_STAM_Timer_Grp_Togførertid]
    ADD DEFAULT (suser_sname()) FOR [indlæstAf];


GO
PRINT N'Creating unnamed constraint on [ods].[MD_G_STAM_Timer_Grp_Lokoførertid_STog]...';


GO
ALTER TABLE [ods].[MD_G_STAM_Timer_Grp_Lokoførertid_STog]
    ADD DEFAULT (getdate()) FOR [indlæstTidspunkt];


GO
PRINT N'Creating unnamed constraint on [ods].[MD_G_STAM_Timer_Grp_Lokoførertid_STog]...';


GO
ALTER TABLE [ods].[MD_G_STAM_Timer_Grp_Lokoførertid_STog]
    ADD DEFAULT (suser_sname()) FOR [indlæstAf];


GO
PRINT N'Creating unnamed constraint on [ods].[MD_G_STAM_Timer_Grp_Lokoførertid]...';


GO
ALTER TABLE [ods].[MD_G_STAM_Timer_Grp_Lokoførertid]
    ADD DEFAULT (getdate()) FOR [indlæstTidspunkt];


GO
PRINT N'Creating unnamed constraint on [ods].[MD_G_STAM_Timer_Grp_Lokoførertid]...';


GO
ALTER TABLE [ods].[MD_G_STAM_Timer_Grp_Lokoførertid]
    ADD DEFAULT (suser_sname()) FOR [indlæstAf];


GO
PRINT N'Creating unnamed constraint on [ods].[rd_stog_korelobtider]...';


GO
ALTER TABLE [ods].[rd_stog_korelobtider]
    ADD DEFAULT ('') FOR [TOG_TYPE];


GO
PRINT N'Creating unnamed constraint on [ods].[Key_Dim_Omkostningssted]...';


GO
ALTER TABLE [ods].[Key_Dim_Omkostningssted]
    ADD DEFAULT (getdate()) FOR [Created];


GO
PRINT N'Creating unnamed constraint on [ods].[Key_Dim_Profitcenter]...';


GO
ALTER TABLE [ods].[Key_Dim_Profitcenter]
    ADD DEFAULT (getdate()) FOR [Created];


GO
PRINT N'Creating [edw].[FK_FT_Arbejdstimer_DI_Medarbejde]...';


GO
ALTER TABLE [edw].[FT_Arbejdstimer]
    ADD CONSTRAINT [FK_FT_Arbejdstimer_DI_Medarbejde] FOREIGN KEY ([DI_Medarbejde]) REFERENCES [edw].[DI_Medarbejde] ([MedarbejdeId]);


GO
PRINT N'Creating [edw].[FK_FT_Arbejdstimer_DI_Omksted]...';


GO
ALTER TABLE [edw].[FT_Arbejdstimer]
    ADD CONSTRAINT [FK_FT_Arbejdstimer_DI_Omksted] FOREIGN KEY ([DI_Omksted]) REFERENCES [edw].[DI_Omksted] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Arbejdstimer_DI_Tid_Maaned]...';


GO
ALTER TABLE [edw].[FT_Arbejdstimer]
    ADD CONSTRAINT [FK_FT_Arbejdstimer_DI_Tid_Maaned] FOREIGN KEY ([DI_Tid_Maaned]) REFERENCES [edw].[DI_Tid_Maaned] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Arbejdstimer_DI_Tjenestested]...';


GO
ALTER TABLE [edw].[FT_Arbejdstimer]
    ADD CONSTRAINT [FK_FT_Arbejdstimer_DI_Tjenestested] FOREIGN KEY ([DI_Tjenestested]) REFERENCES [edw].[DI_Tjenestested] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_Togstandsninger_DI_Tid]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_Togstandsninger]
    ADD CONSTRAINT [FK_FT_Togproduktion_Togstandsninger_DI_Tid] FOREIGN KEY ([FK_DI_Tid]) REFERENCES [edw].[DI_Tid] ([Reference]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_Togstandsninger_DI_Togsystem]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_Togstandsninger]
    ADD CONSTRAINT [FK_FT_Togproduktion_Togstandsninger_DI_Togsystem] FOREIGN KEY ([FK_DI_Togsystem]) REFERENCES [edw].[DI_Togsystem] ([PK_DI_Togsystem]);


GO
PRINT N'Creating [edw].[FK_FT_Lokofravaer_DI_Fravaerkode]...';


GO
ALTER TABLE [edw].[FT_Lokofravaer]
    ADD CONSTRAINT [FK_FT_Lokofravaer_DI_Fravaerkode] FOREIGN KEY ([DI_Fravaerkode]) REFERENCES [edw].[DI_Fravaerkode] ([Kode]);


GO
PRINT N'Creating [edw].[FK_FT_Lokofravaer_DI_Omksted]...';


GO
ALTER TABLE [edw].[FT_Lokofravaer]
    ADD CONSTRAINT [FK_FT_Lokofravaer_DI_Omksted] FOREIGN KEY ([DI_Omksted]) REFERENCES [edw].[DI_Omksted] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Lokofravaer_DI_Tid_Maaned]...';


GO
ALTER TABLE [edw].[FT_Lokofravaer]
    ADD CONSTRAINT [FK_FT_Lokofravaer_DI_Tid_Maaned] FOREIGN KEY ([DI_Tid_Maaned]) REFERENCES [edw].[DI_Tid_Maaned] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Lokofravaer_DI_Turdepot]...';


GO
ALTER TABLE [edw].[FT_Lokofravaer]
    ADD CONSTRAINT [FK_FT_Lokofravaer_DI_Turdepot] FOREIGN KEY ([DI_Turdepot]) REFERENCES [edw].[DI_Turdepot] ([Turdepot]);


GO
PRINT N'Creating [edw].[FK_FT_OBSFravaer_DI_Fravaerkode]...';


GO
ALTER TABLE [edw].[FT_OBSFravaer]
    ADD CONSTRAINT [FK_FT_OBSFravaer_DI_Fravaerkode] FOREIGN KEY ([DI_Fravaerkode]) REFERENCES [edw].[DI_Fravaerkode] ([Kode]);


GO
PRINT N'Creating [edw].[FK_FT_OBSFravaer_DI_Medarbejder_Togfører_FR]...';


GO
ALTER TABLE [edw].[FT_OBSFravaer]
    ADD CONSTRAINT [FK_FT_OBSFravaer_DI_Medarbejder_Togfører_FR] FOREIGN KEY ([DI_Medarbejder_Togfører_FR]) REFERENCES [edw].[DI_Medarbejder_Togfører_FR] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_OBSFravaer_DI_Tid]...';


GO
ALTER TABLE [edw].[FT_OBSFravaer]
    ADD CONSTRAINT [FK_FT_OBSFravaer_DI_Tid] FOREIGN KEY ([DI_Tid]) REFERENCES [edw].[DI_Tid] ([Reference]);


GO
PRINT N'Creating [edw].[FK_DI_Medarbejder_Togfører_FR]...';


GO
ALTER TABLE [edw].[FT_OBSArbejder]
    ADD CONSTRAINT [FK_DI_Medarbejder_Togfører_FR] FOREIGN KEY ([DI_Medarbejder_Togfører_FR]) REFERENCES [edw].[DI_Medarbejder_Togfører_FR] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_OMSArbejder_DI_Arbejdskode]...';


GO
ALTER TABLE [edw].[FT_OBSArbejder]
    ADD CONSTRAINT [FK_FT_OMSArbejder_DI_Arbejdskode] FOREIGN KEY ([DI_Arbejdskode]) REFERENCES [edw].[DI_Arbejdskode] ([Kode]);


GO
PRINT N'Creating [edw].[FK_FT_OMSArbejder_DI_Tid]...';


GO
ALTER TABLE [edw].[FT_OBSArbejder]
    ADD CONSTRAINT [FK_FT_OMSArbejder_DI_Tid] FOREIGN KEY ([DI_Tid]) REFERENCES [edw].[DI_Tid] ([Reference]);


GO
PRINT N'Creating [edw].[FK_FT_OBSOpgaver_DI_Lokation]...';


GO
ALTER TABLE [edw].[FT_OBSOpgaver]
    ADD CONSTRAINT [FK_FT_OBSOpgaver_DI_Lokation] FOREIGN KEY ([DI_Lokation]) REFERENCES [edw].[DI_Lokation] ([Kode]);


GO
PRINT N'Creating [edw].[FK_FT_OBSOpgaver_DI_Medarbejder_Togfører_FR]...';


GO
ALTER TABLE [edw].[FT_OBSOpgaver]
    ADD CONSTRAINT [FK_FT_OBSOpgaver_DI_Medarbejder_Togfører_FR] FOREIGN KEY ([DI_Medarbejder_Togfører_FR]) REFERENCES [edw].[DI_Medarbejder_Togfører_FR] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_OBSOpgaver_DI_Opgave]...';


GO
ALTER TABLE [edw].[FT_OBSOpgaver]
    ADD CONSTRAINT [FK_FT_OBSOpgaver_DI_Opgave] FOREIGN KEY ([DI_Opgave]) REFERENCES [edw].[DI_Opgave] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_OBSOpgaver_DI_Station_fra]...';


GO
ALTER TABLE [edw].[FT_OBSOpgaver]
    ADD CONSTRAINT [FK_FT_OBSOpgaver_DI_Station_fra] FOREIGN KEY ([DI_Station_fra]) REFERENCES [edw].[DI_Station] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_OBSOpgaver_DI_Station_til]...';


GO
ALTER TABLE [edw].[FT_OBSOpgaver]
    ADD CONSTRAINT [FK_FT_OBSOpgaver_DI_Station_til] FOREIGN KEY ([DI_Station_til]) REFERENCES [edw].[DI_Station] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_OBSOpgaver_DI_Tid]...';


GO
ALTER TABLE [edw].[FT_OBSOpgaver]
    ADD CONSTRAINT [FK_FT_OBSOpgaver_DI_Tid] FOREIGN KEY ([DI_Tid]) REFERENCES [edw].[DI_Tid] ([Reference]);


GO
PRINT N'Creating [edw].[FK_FT_OBSOpgaver_DI_Tidsinterval]...';


GO
ALTER TABLE [edw].[FT_OBSOpgaver]
    ADD CONSTRAINT [FK_FT_OBSOpgaver_DI_Tidsinterval] FOREIGN KEY ([DI_Tidsintervaller]) REFERENCES [edw].[DI_Tidsintervaller] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_OBSOpgaver_DI_TjenesteDepot]...';


GO
ALTER TABLE [edw].[FT_OBSOpgaver]
    ADD CONSTRAINT [FK_FT_OBSOpgaver_DI_TjenesteDepot] FOREIGN KEY ([DI_TjenesteDepot]) REFERENCES [edw].[DI_Turdepot] ([Turdepot]);


GO
PRINT N'Creating [edw].[FK_FT_OBSOpgaver_DI_Togsystem]...';


GO
ALTER TABLE [edw].[FT_OBSOpgaver]
    ADD CONSTRAINT [FK_FT_OBSOpgaver_DI_Togsystem] FOREIGN KEY ([DI_Togsystem]) REFERENCES [edw].[DI_Togsystem] ([PK_DI_Togsystem]);


GO
PRINT N'Creating [edw].[FK_DI_Omksted_DI_Profitcenter]...';


GO
ALTER TABLE [edw].[DI_Omksted]
    ADD CONSTRAINT [FK_DI_Omksted_DI_Profitcenter] FOREIGN KEY ([FK_Profitcenter_PKID]) REFERENCES [edw].[DI_Profitcenter] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_PDS_DI_Medarbejder_Togfører_FR]...';


GO
ALTER TABLE [edw].[FT_PDS]
    ADD CONSTRAINT [FK_FT_PDS_DI_Medarbejder_Togfører_FR] FOREIGN KEY ([DI_Medarbejder_Togfører_FR]) REFERENCES [edw].[DI_Medarbejder_Togfører_FR] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_PDS_DI_Opgave]...';


GO
ALTER TABLE [edw].[FT_PDS]
    ADD CONSTRAINT [FK_FT_PDS_DI_Opgave] FOREIGN KEY ([DI_Opgave]) REFERENCES [edw].[DI_Opgave] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_PDS_DI_Straekning]...';


GO
ALTER TABLE [edw].[FT_PDS]
    ADD CONSTRAINT [FK_FT_PDS_DI_Straekning] FOREIGN KEY ([DI_Straekning]) REFERENCES [edw].[DI_Straekning] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_PDS_DI_Tid]...';


GO
ALTER TABLE [edw].[FT_PDS]
    ADD CONSTRAINT [FK_FT_PDS_DI_Tid] FOREIGN KEY ([DI_Tid]) REFERENCES [edw].[DI_Tid] ([Reference]);


GO
PRINT N'Creating [edw].[FK_FT_PDS_DI_Tidsintervaller]...';


GO
ALTER TABLE [edw].[FT_PDS]
    ADD CONSTRAINT [FK_FT_PDS_DI_Tidsintervaller] FOREIGN KEY ([DI_Tidsintervaller]) REFERENCES [edw].[DI_Tidsintervaller] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_PDS_DI_Togsystem]...';


GO
ALTER TABLE [edw].[FT_PDS]
    ADD CONSTRAINT [FK_FT_PDS_DI_Togsystem] FOREIGN KEY ([DI_Togsystem]) REFERENCES [edw].[DI_Togsystem] ([PK_DI_Togsystem]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_Afgifter_DI_Tid]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_Afgifter]
    ADD CONSTRAINT [FK_FT_Togproduktion_Afgifter_DI_Tid] FOREIGN KEY ([FK_DI_Tid]) REFERENCES [edw].[DI_Tid] ([Reference]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_Afgifter_DI_Togsystem]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_Afgifter]
    ADD CONSTRAINT [FK_FT_Togproduktion_Afgifter_DI_Togsystem] FOREIGN KEY ([FK_DI_Togsystem]) REFERENCES [edw].[DI_Togsystem] ([PK_DI_Togsystem]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_Tog_DI_Tid]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_Tog]
    ADD CONSTRAINT [FK_FT_Togproduktion_Tog_DI_Tid] FOREIGN KEY ([FK_DI_Tid]) REFERENCES [edw].[DI_Tid] ([Reference]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_Tog_DI_Tidsintervaller]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_Tog]
    ADD CONSTRAINT [FK_FT_Togproduktion_Tog_DI_Tidsintervaller] FOREIGN KEY ([FK_DI_Tidsintervaller]) REFERENCES [edw].[DI_Tidsintervaller] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_Tog_DI_Togsystem]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_Tog]
    ADD CONSTRAINT [FK_FT_Togproduktion_Tog_DI_Togsystem] FOREIGN KEY ([FK_DI_Togsystem]) REFERENCES [edw].[DI_Togsystem] ([PK_DI_Togsystem]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_Litra_DI_Tid]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_Litra]
    ADD CONSTRAINT [FK_FT_Togproduktion_Litra_DI_Tid] FOREIGN KEY ([FK_DI_Tid]) REFERENCES [edw].[DI_Tid] ([Reference]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_Litra_DI_Tidsintervaller]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_Litra]
    ADD CONSTRAINT [FK_FT_Togproduktion_Litra_DI_Tidsintervaller] FOREIGN KEY ([FK_DI_Tidsintervaller]) REFERENCES [edw].[DI_Tidsintervaller] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_Litra_DI_Togsystem]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_Litra]
    ADD CONSTRAINT [FK_FT_Togproduktion_Litra_DI_Togsystem] FOREIGN KEY ([FK_DI_Togsystem]) REFERENCES [edw].[DI_Togsystem] ([PK_DI_Togsystem]);


GO
PRINT N'Creating [edw].[FK_FT_Lokopersonale_DI_Elementkode_ltf]...';


GO
ALTER TABLE [edw].[FT_Lokopersonale]
    ADD CONSTRAINT [FK_FT_Lokopersonale_DI_Elementkode_ltf] FOREIGN KEY ([DI_Elementkode]) REFERENCES [edw].[DI_Elementkode_ltf] ([Elementkode]);


GO
PRINT N'Creating [edw].[FK_FT_Lokopersonale_DI_Litra]...';


GO
ALTER TABLE [edw].[FT_Lokopersonale]
    ADD CONSTRAINT [FK_FT_Lokopersonale_DI_Litra] FOREIGN KEY ([DI_Litra]) REFERENCES [edw].[DI_Litra] ([Kode]);


GO
PRINT N'Creating [edw].[FK_FT_Lokopersonale_DI_Lokation]...';


GO
ALTER TABLE [edw].[FT_Lokopersonale]
    ADD CONSTRAINT [FK_FT_Lokopersonale_DI_Lokation] FOREIGN KEY ([DI_Lokation]) REFERENCES [edw].[DI_Lokation] ([Kode]);


GO
PRINT N'Creating [edw].[FK_FT_Lokopersonale_DI_Omksted]...';


GO
ALTER TABLE [edw].[FT_Lokopersonale]
    ADD CONSTRAINT [FK_FT_Lokopersonale_DI_Omksted] FOREIGN KEY ([DI_Omksted]) REFERENCES [edw].[DI_Omksted] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Lokopersonale_DI_Tid_Maaned]...';


GO
ALTER TABLE [edw].[FT_Lokopersonale]
    ADD CONSTRAINT [FK_FT_Lokopersonale_DI_Tid_Maaned] FOREIGN KEY ([DI_Tid_Maaned]) REFERENCES [edw].[DI_Tid_Maaned] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Lokopersonale_DI_Togsystem]...';


GO
ALTER TABLE [edw].[FT_Lokopersonale]
    ADD CONSTRAINT [FK_FT_Lokopersonale_DI_Togsystem] FOREIGN KEY ([DI_Togsystem]) REFERENCES [edw].[DI_Togsystem] ([PK_DI_Togsystem]);


GO
PRINT N'Creating [edw].[FK_FT_Lokopersonale_DI_Turdepot]...';


GO
ALTER TABLE [edw].[FT_Lokopersonale]
    ADD CONSTRAINT [FK_FT_Lokopersonale_DI_Turdepot] FOREIGN KEY ([DI_Turdepot]) REFERENCES [edw].[DI_Turdepot] ([Turdepot]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_S_Tog_DI_S_Doegn_Inddeling]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_S_Tog]
    ADD CONSTRAINT [FK_FT_Togproduktion_S_Tog_DI_S_Doegn_Inddeling] FOREIGN KEY ([DI_S_Doegn_Inddeling]) REFERENCES [edw].[DI_S_Doegn_Inddeling] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_S_Tog_DI_S_Materiel]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_S_Tog]
    ADD CONSTRAINT [FK_FT_Togproduktion_S_Tog_DI_S_Materiel] FOREIGN KEY ([DI_S_Materiel]) REFERENCES [edw].[DI_S_Materiel] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_S_Tog_DI_S_Station_Straekning]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_S_Tog]
    ADD CONSTRAINT [FK_FT_Togproduktion_S_Tog_DI_S_Station_Straekning] FOREIGN KEY ([DI_S_Station_Straekning]) REFERENCES [edw].[DI_S_Station_Straekning] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_S_Tog_DI_S_Straekning]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_S_Tog]
    ADD CONSTRAINT [FK_FT_Togproduktion_S_Tog_DI_S_Straekning] FOREIGN KEY ([DI_S_Straekning]) REFERENCES [edw].[DI_S_Straekning] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_S_Tog_DI_Tid]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_S_Tog]
    ADD CONSTRAINT [FK_FT_Togproduktion_S_Tog_DI_Tid] FOREIGN KEY ([DI_Tid]) REFERENCES [edw].[DI_Tid] ([Reference]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_S_Tog_DI_Tidsinterval]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_S_Tog]
    ADD CONSTRAINT [FK_FT_Togproduktion_S_Tog_DI_Tidsinterval] FOREIGN KEY ([DI_Tidsintervaller]) REFERENCES [edw].[DI_Tidsintervaller] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_S_Tog_Litra_DI_S_Doegn_Inddeling]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_S_Tog_Litra]
    ADD CONSTRAINT [FK_FT_Togproduktion_S_Tog_Litra_DI_S_Doegn_Inddeling] FOREIGN KEY ([DI_S_Doegn_Inddeling]) REFERENCES [edw].[DI_S_Doegn_Inddeling] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_S_Tog_Litra_DI_S_Materiel]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_S_Tog_Litra]
    ADD CONSTRAINT [FK_FT_Togproduktion_S_Tog_Litra_DI_S_Materiel] FOREIGN KEY ([DI_S_Materiel]) REFERENCES [edw].[DI_S_Materiel] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_S_Tog_Litra_DI_S_Materiel_litra]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_S_Tog_Litra]
    ADD CONSTRAINT [FK_FT_Togproduktion_S_Tog_Litra_DI_S_Materiel_litra] FOREIGN KEY ([DI_S_Materiel_Litra]) REFERENCES [edw].[DI_S_Materiel] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_S_Tog_Litra_DI_S_Station_Straekning]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_S_Tog_Litra]
    ADD CONSTRAINT [FK_FT_Togproduktion_S_Tog_Litra_DI_S_Station_Straekning] FOREIGN KEY ([DI_S_Station_Straekning]) REFERENCES [edw].[DI_S_Station_Straekning] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_S_Tog_Litra_DI_S_Straekning]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_S_Tog_Litra]
    ADD CONSTRAINT [FK_FT_Togproduktion_S_Tog_Litra_DI_S_Straekning] FOREIGN KEY ([DI_S_Straekning]) REFERENCES [edw].[DI_S_Straekning] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_S_Tog_Litra_DI_Tid]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_S_Tog_Litra]
    ADD CONSTRAINT [FK_FT_Togproduktion_S_Tog_Litra_DI_Tid] FOREIGN KEY ([DI_Tid]) REFERENCES [edw].[DI_Tid] ([Reference]);


GO
PRINT N'Creating [edw].[FK_FT_Togproduktion_S_Tog_Litra_DI_Tidsinterval]...';


GO
ALTER TABLE [edw].[FT_Togproduktion_S_Tog_Litra]
    ADD CONSTRAINT [FK_FT_Togproduktion_S_Tog_Litra_DI_Tidsinterval] FOREIGN KEY ([DI_Tidsintervaller]) REFERENCES [edw].[DI_Tidsintervaller] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Lokopersonale_S_tog_DI_Depot]...';


GO
ALTER TABLE [edw].[FT_Lokopersonale_S_tog]
    ADD CONSTRAINT [FK_FT_Lokopersonale_S_tog_DI_Depot] FOREIGN KEY ([DI_Depot]) REFERENCES [edw].[DI_Depot] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Lokopersonale_S_tog_DI_Medarbejde]...';


GO
ALTER TABLE [edw].[FT_Lokopersonale_S_tog]
    ADD CONSTRAINT [FK_FT_Lokopersonale_S_tog_DI_Medarbejde] FOREIGN KEY ([DI_Medarbejder]) REFERENCES [edw].[DI_Medarbejde] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Lokopersonale_S_tog_DI_S_Doegn_Inddeling]...';


GO
ALTER TABLE [edw].[FT_Lokopersonale_S_tog]
    ADD CONSTRAINT [FK_FT_Lokopersonale_S_tog_DI_S_Doegn_Inddeling] FOREIGN KEY ([DI_S_Doegn_Inddeling]) REFERENCES [edw].[DI_S_Doegn_Inddeling] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Lokopersonale_S_tog_DI_S_Opgave_Lokofører]...';


GO
ALTER TABLE [edw].[FT_Lokopersonale_S_tog]
    ADD CONSTRAINT [FK_FT_Lokopersonale_S_tog_DI_S_Opgave_Lokofører] FOREIGN KEY ([DI_S_Opgave_Lokofører]) REFERENCES [edw].[DI_S_Opgave_Lokofører] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Lokopersonale_S_tog_DI_S_Opgave_Straekning]...';


GO
ALTER TABLE [edw].[FT_Lokopersonale_S_tog]
    ADD CONSTRAINT [FK_FT_Lokopersonale_S_tog_DI_S_Opgave_Straekning] FOREIGN KEY ([DI_S_Opgave_Straekning]) REFERENCES [edw].[DI_S_Opgave_Straekning] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Lokopersonale_S_tog_DI_S_Straekning]...';


GO
ALTER TABLE [edw].[FT_Lokopersonale_S_tog]
    ADD CONSTRAINT [FK_FT_Lokopersonale_S_tog_DI_S_Straekning] FOREIGN KEY ([DI_S_Straekning]) REFERENCES [edw].[DI_S_Straekning] ([PK_ID]);


GO
PRINT N'Creating [edw].[FK_FT_Lokopersonale_S_tog_DI_Tid]...';


GO
ALTER TABLE [edw].[FT_Lokopersonale_S_tog]
    ADD CONSTRAINT [FK_FT_Lokopersonale_S_tog_DI_Tid] FOREIGN KEY ([DI_Tid]) REFERENCES [edw].[DI_Tid] ([Reference]);


GO
PRINT N'Creating [etl].[FK_Grl_DataLoadCheck_Element_Grl_DataLoadCheck_Hoved1]...';


GO
ALTER TABLE [etl].[Grl_DataLoadCheck_Element]
    ADD CONSTRAINT [FK_Grl_DataLoadCheck_Element_Grl_DataLoadCheck_Hoved1] FOREIGN KEY ([DataLoadCheck_Id]) REFERENCES [etl].[Grl_DataLoadCheck] ([Id]);


GO
PRINT N'Creating [etl].[FK_Grl_DataLoadCheck_Vaerdi_Grl_DataLoadCheck_Element]...';


GO
ALTER TABLE [etl].[Grl_DataLoadCheck_Vaerdi]
    ADD CONSTRAINT [FK_Grl_DataLoadCheck_Vaerdi_Grl_DataLoadCheck_Element] FOREIGN KEY ([CheckElement_Id]) REFERENCES [etl].[Grl_DataLoadCheck_Element] ([Id]);


GO
PRINT N'Creating [dbo].[charDatoMedBindestreger2datetime]...';


GO

CREATE function [dbo].[charDatoMedBindestreger2datetime]
(
	@cd			varchar(10)
)
returns		datetime
as
begin
	
	declare	 @DATETIMEDATE	datetime
	if len(@cd) = 10 
	begin
		-- yyyy-mm-dd:	
		if	isnumeric(substring(@cd,1,4))=1 and substring(@cd,5,1) = '-' and isnumeric(substring(@cd,6,2))=1 and substring(@cd,8,1) = '-' and isnumeric(substring(@cd,9,2))=1
				SELECT  @DATETIMEDATE = CONVERT(DATETIME, @cd)
		else if
		-- mm-dd-yyyy:	
			isnumeric(substring(@cd,1,2))=1 and substring(@cd,3,1) = '-' and isnumeric(substring(@cd,4,2))=1 and substring(@cd,6,1) = '-' and isnumeric(substring(@cd,7,4))=1	
				SELECT  @DATETIMEDATE = CONVERT(DATETIME, substring(@cd,7,4)+'-'+substring(@cd,4,2)+'-'+substring(@cd,1,2))
	end
	return @DATETIMEDATE

end
GO
PRINT N'Creating [dbo].[datetime2yyyymm]...';


GO

create function [dbo].[datetime2yyyymm]
(
	@DATE			datetime
)
returns		varchar(6)
as
begin

	return convert(varchar(6), @date, 112)

end
GO
PRINT N'Creating [dbo].[FjernForanstilledeNuller]...';


GO

CREATE function [dbo].[FjernForanstilledeNuller] (@tekst varchar(255))
returns varchar(8)
begin
--return reverse(@tekst)+'00000000'
	declare @result varchar(8)
	if isnumeric(@tekst) = 1 set @result = convert(varchar(255),convert(bigint,@tekst))
	else begin
		while left(@tekst,1) = '0' 
			begin 
				set @tekst = right(@tekst, len(@tekst)-1)
			end
			set @result = @tekst
		end
	
	return @result
end
GO
PRINT N'Creating [dbo].[FormatHhMm]...';


GO

CREATE function [dbo].[FormatHhMm] (@tidspunkt varchar(max))
returns varchar(5)
as 
begin
	declare @resultat varchar(5)
	--@tidspunkt skal være formateret som h:mm eller hh:mm eller h:m eller hh:m eller hhmm eller hmm eller mm eller m 
	--Der returneres hh:mm
	if len(@tidspunkt)> 2 
		begin
			if substring(@tidspunkt,len(@tidspunkt)-1,1) = ':' --h:m eller hh:m
			and isnumeric(substring(@tidspunkt,len(@tidspunkt),1))=1 --tjek m
				set @tidspunkt = substring(@tidspunkt,1,len(@tidspunkt)-1) +'0'+substring(@tidspunkt,len(@tidspunkt),1)
		end	
	if	len(@tidspunkt) in (4,5)
		and isnumeric(substring(@tidspunkt,len(@tidspunkt)-1,2))=1 --tjek mm
		and substring(@tidspunkt,len(@tidspunkt)-2,1) = ':' -- tjek :
		and isnumeric(substring(@tidspunkt,1,len(@tidspunkt)-3))=1 --tjek h eller hh
		set @resultat = case when len(@tidspunkt) = 4 then '0'+ @tidspunkt else @tidspunkt end--set resultat = h eller hh
	else
	if len (@tidspunkt) = 3 and isnumeric(@tidspunkt) = 1
		set @resultat = '0'+substring(@tidspunkt, 1, 1)+':'+substring(@tidspunkt, 2,2)
	else	
	if len (@tidspunkt) = 4 and isnumeric(@tidspunkt) = 1
		set @resultat = substring(@tidspunkt, 1, 2)+':'+substring(@tidspunkt, 3,2)
	else	
	if len (@tidspunkt) = 2 and isnumeric(@tidspunkt) = 1
		set @resultat = '00'+':'+@tidspunkt
	else
	if len (@tidspunkt) = 1 and isnumeric(@tidspunkt) = 1
		set @resultat = '00:0'+@tidspunkt
	else 
		set @resultat = null
	return @resultat
end
GO
PRINT N'Creating [dbo].[getEasterDate]...';


GO

create function [dbo].[getEasterDate] (@eYear int) 
returns datetime
as
begin
/* Fischer Lexikon Astronomie, p. 50:     Algorithm of C.F. Gauá (1777-1855),     for 1583 <= eyear <= 2299  */  
declare @m int, @n int, @p int, @q int, @r int, @x int  
declare @y int, @a int, @b int, @c int, @d int, @e int  
declare @eDay int, @eMonth int
/* Kan tilføjes hvis MsSQL senere understøtter flere år  if[/b] (@eYear <= 1699) select @m=22, @n=2 else*/ 
 if (@eYear <= 1799) select @m=23, @n=3 else   if (@eYear <= 1899) select @m=23, @n=4 else   if (@eYear <= 2099) select @m=24, @n=5 else   if (@eYear <= 2199) select @m=24, @n=6 else   if (@eYear <= 2299) select @m=25, @n=0   select @a =  @eYear % 19, @b = @eYear % 4, @c = @eYear % 7  select @d = ( (19*@a)+@m ) % 30  select @e = ( (2*@b)+(4*@c)+(6*@d)+@n ) % 7  select @eDay = 22 + @d + @e  select @eMonth = 4  if @eDay <=31 set @eMonth=3 else  if ( (@d=28) and (@e=6) and (@a>10) ) set @eDay=18 else  if ( (@d=29) and (@e=6) ) set @eday = 19 else     select @eday = @d + @e - 9  
return convert(    datetime,    cast(@eYear as varchar)+'/'+    cast(@eMonth as varchar)+'/'+    cast(@eDay as varchar),    111)
end
GO
PRINT N'Creating [dbo].[getIsDanishHolyDay]...';


GO

create function [dbo].[getIsDanishHolyDay] (@date datetime) 
returns tinyint
as 
begin  
declare @d int, @m int, @y int, @r int, @e 
datetime  select @d=day(@date), @m=month(@date), @y=year(@date), @r=0  
-- faste helligdage  
if (@d= 1 and @m= 1) or	-- Nytårsdag     
(@d= 5 and @m= 6) or	-- Grundlovsdag    
(@d=24 and @m=12) or	-- Juleaftensdag     
(@d=25 and @m=12) or	-- 1. juledag     /* yderliger datoer kan indsættes her      */  
(@d=26 and @m=12)	--2. juledag
      set @r = 1  else begin    -- Skæve helligdage, beregnes udfra Påske   
 set @date = floor(cast(@date as float))    
set @e = dbo.getEasterDate(@y)    
if (@date=@e- 7) or -- Palmesøndag     
  (@date=@e- 3) or -- Skærtorsdag       
(@date=@e- 2) or -- Langfredag       
(@date=@e+ 0) or -- Påske       
(@date=@e+ 1) or -- 2. Påskedag       
(@date=@e+26) or -- St. Bededag       
(@date=@e+39) or -- Kristi Himmelfart       
(@date=@e+49) or -- Pinse       
(@date=@e+50)    -- 2. Pinsedag      
set @r = 1  end  
return @r
end
GO
PRINT N'Creating [dbo].[HoursOnly]...';


GO

CREATE function [dbo].[HoursOnly] (@tidspunkt varchar(max))
returns varchar(2)
as 
begin
	declare @resultat varchar(2)
	--@tidspunkt skal være formateret som h:mm eller hh:mm
	--Der returneres h eller hh
	if	len(@tidspunkt) in (4,5)
		and isnumeric(substring(@tidspunkt,len(@tidspunkt)-1,2))=1 --tjek mm
		and substring(@tidspunkt,len(@tidspunkt)-2,1) = ':' -- tjek :
		and isnumeric(substring(@tidspunkt,1,len(@tidspunkt)-3))=1 --tjek h eller hh
		set @resultat =  substring(@tidspunkt,1,len(@tidspunkt)-3) --set resultat = h eller hh
	else 
		set @resultat = null
	return @resultat
end
GO
PRINT N'Creating [dbo].[LTDDatoOgTidspunktTilDatetime]...';


GO

CREATE function [dbo].[LTDDatoOgTidspunktTilDatetime] (@dato datetime, @tidspunkt varchar(5) , @zone tinyint)
returns datetime
as 
begin
	declare @resultat datetime
	if @dato is not null and @tidspunkt is not null and @zone is not null 	
	begin	
		set @tidspunkt = dbo.formatHhMm(@tidspunkt)
		set @resultat =
			case @zone	when 2 then		dateadd(minute,	convert(int,substring(@tidspunkt, len(@tidspunkt)-1,2))		,dateadd( hh, convert(int,dbo.hoursonly(@tidspunkt)),@dato))
						when 3 then		dateadd(minute,	convert(int,substring(@tidspunkt, len(@tidspunkt)-1,2))		,dateadd( hh, convert(int,dbo.hoursonly(@tidspunkt))+24,@dato))--+':'+substring(@tidspunkt, len(@tidspunkt)-1,2)
						else null
			end
	end	
	return @resultat
end
GO
PRINT N'Creating [dbo].[UgedagNummer]...';


GO

CREATE function [dbo].[UgedagNummer](@date datetime) returns tinyint
as
begin
return case ((@@datefirst + datepart(dw, @date) - 2) % 7) when 0 then 1 when 1 then 1 when 2 then 3 when 3 then 4 when 4 then 5 when 5 then 6 when 6 then 7 else 0 end
end
GO
PRINT N'Creating [etl].[logDiff]...';


GO


CREATE function [etl].[logDiff](@Source_System varchar(50))
returns table
as
return (
	
    --Med forskelle
select d.Source_System, d.Source_Gruppe, d.Check_Element, d.Vaerdi_type, d.Attribute, d.Period, d.Load_Instans,
    d.værdi, s.gennemsnit, 
    CASE WHEN ROUND(d.værdi - s.gennemsnit,0) <> 0 THEN 'JA' ELSE 'NEJ' END AS Afvigelse, 
	d.værdi-s.gennemsnit AS AfvigelseVærdi, 
((d.værdi-s.gennemsnit)*100)/(s.gennemsnit) as AfvigelseProcent
from (
select c.id, c.Source_System, c.Source_Gruppe, e.Check_Element, e.Vaerdi_type, e.Attribute, v.Period, e.Load_Instans,
    SUM(v.Vaerdi) værdi
From etl.Grl_DataLoadCheck_Vaerdi v
join etl.Grl_DataLoadCheck_Element e on (e.id = v.CheckElement_Id)
join etl.Grl_DataLoadCheck c on (c.id = e.DataLoadCheck_Id)
group by c.id, c.Source_System, c.Source_Gruppe, e.Check_Element, e.Vaerdi_type, e.Attribute, v.Period, e.Load_Instans) d
join (
select v.id, v.Check_Element, v.Vaerdi_type, v.Attribute, v.Period, count(*) antal,
   SUM(v.samlet) samlet, SUM(v.samlet)/(count(*)) gennemsnit
from (
select c.id, e.Check_Element, e.Vaerdi_type, e.Attribute, v.Period, e.Load_Instans, 
    SUM(v.Vaerdi) samlet
From etl.Grl_DataLoadCheck_Vaerdi v
join etl.Grl_DataLoadCheck_Element e on (e.id = v.CheckElement_Id)
join etl.Grl_DataLoadCheck c on (c.id = e.DataLoadCheck_Id)
group by c.id, e.Check_Element, e.Vaerdi_type, e.Attribute, v.Period, e.Load_Instans) v
group by v.id, v.Check_Element, v.Vaerdi_type, v.Attribute, v.Period) s 
    on (d.id = s.id
    and d.Check_Element = s.Check_Element
    and d.Vaerdi_type = s.Vaerdi_type
    and d.Attribute = s.Attribute
    and d.Period = s.Period)
--where d.Period = 201212
--and d.source_gruppe = 'Litra'
where d.Source_System like @Source_System)
GO
PRINT N'Creating [edw].[ft_togproduktion_tog_IssueId42]...';


GO


CREATE view [edw].[ft_togproduktion_tog_IssueId42] as
select d.tognr, d.FK_DI_Tidsintervaller, d.division, d.erTrafikkontraktProduktion, 
  CASE WHEN d.FK_DI_Togsystem = 6 THEN 29 ELSE d.FK_DI_Togsystem END As FK_DI_Togsystem, 
  d.FK_DI_Tid, d.togkm, d.togminutter
from edw.ft_togproduktion_tog d
join edw.DI_Tid t on (t.reference = d.FK_DI_Tid)
join -- Periode
(Select SUBSTRING(value,1,4) as År, CONVERT(Int, SUBSTRING(value,5,2)) as Måned , SUBSTRING(value,1,50) as Periode
 from ods.ctl_dataload
 Where kilde_system = 'Alle'
 and variable = 'Model_Periode') p on (t.Aar = p.År
                                      and t.MaanedNum <= p.måned)
where not (fk_di_togsystem = 5 and tognrinterval in ('3700-3799', '83700-83799'))
GO
PRINT N'Creating [edw].[ft_togproduktion_litra_IssueId42]...';


GO


CREATE view [edw].[ft_togproduktion_litra_IssueId42] as
select d.tognr, d.FK_DI_Tidsintervaller, d.division, d.erTrafikkontraktProduktion, d.litra, 
  CASE WHEN d.FK_DI_Togsystem = 6 THEN 29 ELSE d.FK_DI_Togsystem END As FK_DI_Togsystem, 
  d.FK_DI_Tid, d.litrakm, d.litraminutter, d.Pladskm
from edw.ft_togproduktion_litra d
join edw.DI_Tid t on (t.reference = d.FK_DI_Tid)
join -- Periode
(Select SUBSTRING(value,1,4) as År, CONVERT(Int, SUBSTRING(value,5,2)) as Måned , SUBSTRING(value,1,50) as Periode
 from ods.ctl_dataload
 Where kilde_system = 'Alle'
 and variable = 'Model_Periode') p on (t.Aar = p.År
                                      and t.MaanedNum <= p.måned)
  where not (fk_di_togsystem = 5 and tognrinterval in ('3700-3799', '83700-83799'))
GO
PRINT N'Creating [etl].[edw_InitTabRefLog]...';


GO



CREATE PROCEDURE [etl].[edw_InitTabRefLog]
  @PackageLogID  INT
, @TableName     VARCHAR(100)
, @TypeRefresh   VARCHAR(20)
, @Period        VARCHAR(12)
, @NumRowsDel    INT
, @NameCtlColDel VARCHAR(30)
, @TotCtlColDel  DECIMAL(24,6)
 
AS
BEGIN
	--DECLARE @LastExtractDateTime	DATETIME

	SET NOCOUNT ON;
	
--	SELECT @LastExtractDateTime = ISNULL(MAX(LastExtractDateTime), '1900-01-01')
--	FROM etl.Edw_TabRefLog
--	WHERE TableName = @TableName
		

	INSERT INTO etl.Edw_TabRefLog (
	  PackageLogID
	, TableName
    , TypeRefresh
	, Period
	, NumRowsDel
    , NameCtlColDel
    , TotCtlColDel
	, StartTime
	)
	VALUES (
	  @PackageLogID
	, @TableName
    , @TypeRefresh
	, @Period
	, @NumRowsDel
    , @NameCtlColDel
    , @TotCtlColDel
	, GetDate()
	)

	SELECT 
	  CAST(Scope_Identity() AS INT) TabRefLogID
--	, CONVERT(NVARCHAR(23), @LastExtractDateTime, 121) LastExtractDateTimeString
	
	SET NOCOUNT OFF;
END
GO
PRINT N'Creating [etl].[grl_EndPackageLog]...';


GO


CREATE PROCEDURE [etl].[grl_EndPackageLog]
  @PackageLogID INT
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE etl.Grl_PackageLog SET
	  EndTime = GetDate()
	, Success = 1
	WHERE PackageLogID = @PackageLogID

	SET NOCOUNT OFF;
END
GO
PRINT N'Creating [etl].[ods_EndLoaderLog]...';


GO



CREATE PROCEDURE [etl].[ods_EndLoaderLog]
  @LoaderLogID INT
, @Period VARCHAR(50)
, @CtlColRows INT
, @CtlColName_1 VARCHAR(50)
, @CtlColTot_1 DECIMAL(24,6)
, @CtlColName_2 VARCHAR(50)
, @CtlColTot_2 DECIMAL(24,6)
, @CtlColName_3 VARCHAR(50)
, @CtlColTot_3 DECIMAL(24,6)
, @CtlColName_4 VARCHAR(50)
, @CtlColTot_4 DECIMAL(24,6)

AS
BEGIN
	SET NOCOUNT ON;
	
	UPDATE etl.ods_LoaderLog
	SET
	  EndTime = GetDate()
    , MaxPeriod = @Period
	, NumRows = @CtlColRows
	, CtlColName_1 = @CtlColName_1	
	, CtlColTot_1 = @CtlColTot_1
    , CtlColName_2 = @CtlColName_2
    , CtlColTot_2 = @CtlColTot_2
    , CtlColName_3 = @CtlColName_3
    , CtlColTot_3 = @CtlColTot_3
    , CtlColName_4 = @CtlColName_4
    , CtlColTot_4 = @CtlColTot_4
	, Success = 1
	WHERE LoaderLogID = @LoaderLogID

	SET NOCOUNT OFF;
END
GO
PRINT N'Creating [etl].[ods_InitLoaderLog]...';


GO






CREATE PROCEDURE [etl].[ods_InitLoaderLog]
  @PackageLogID INT
, @TableName NVARCHAR(50)
, @SourceSystem NVARCHAR(50)

AS
BEGIN
	SET NOCOUNT ON;
	
		
	INSERT INTO etl.ods_LoaderLog (
	  PackageLogID
	, TableName
	, StartTime
    , SourceSystem
	)
	VALUES (
	  @PackageLogID
	, @TableName
	, GetDate()
    , @SourceSystem
	)

	SELECT 
	  CAST(Scope_Identity() AS INT) ExtractLogID 
	
	SET NOCOUNT OFF;
END
GO
PRINT N'Creating [etl].[grl_InitPackageLog]...';


GO



-- Insert a record in the PackageLog table
CREATE PROCEDURE [etl].[grl_InitPackageLog]
  @PackageName NVARCHAR(100)
AS
BEGIN
	SET NOCOUNT ON;

	INSERT INTO etl.Grl_PackageLog (
	  PackageName
	, StartTime
	)
	VALUES (
	  @PackageName
	, GetDate()
	)

	SELECT CAST(Scope_Identity() AS INT) PackageLogID
END
GO
PRINT N'Creating [etl].[edw_togproduktion_set_trafikkontrakt_flag]...';


GO

/********************************************************************
Author:		Thomas
Create date: 25/9-2013
Description:	
Denne procedure skal på sigt laves som en SSIS pakke.

Flaget erTrafikkontraktProduktion sættes hvis mindst ét af følgende kriterier er opfyldt

1. Kontrakt operatør er DSB og område er indland.
2. Togkategori er BH
3. Ikke retningsbestemt strækning er "Flensborg-Padborg Grænse", område er udland og 
   produkt er InterCity

********************************************************************/
CREATE PROCEDURE [etl].[edw_togproduktion_set_trafikkontrakt_flag] 

AS
BEGIN
	SET NOCOUNT ON;

    declare @periode varchar(6)

    Select @periode = Value
    from ods.ctl_dataload
    Where kilde_system = 'protal'
    and variable = 'Load_Period'
    
    update edw.FT_Togproduktion_Litra set erTrafikkontraktProduktion = 1
    where fk_di_tid in (
      select reference from edw.di_tid
      where parentReference = @periode)
    and Kontraktoperatoer = 'DSB'
    and Omraadeland = 'Indland'

    update edw.FT_Togproduktion_Litra set erTrafikkontraktProduktion = 1
    where fk_di_tid in (
      select reference from edw.di_tid
      where parentReference = @periode)
    and togkategori = 'BH'
    
    update edw.FT_Togproduktion_Litra set erTrafikkontraktProduktion = 1
    where fk_di_tid in (
      select reference from edw.di_tid
      where parentReference = @periode)
    and FK_DI_Togsystem in (
      select PK_DI_Togsystem from edw.di_togsystem
      where Produkt = 'InterCity')
    and ikkeRetningsbestemtStrk Like 'Flensborg-Padborg Grænse'
    and Omraadeland = 'Udland'




    update edw.FT_Togproduktion_Tog set erTrafikkontraktProduktion = 1
    where fk_di_tid in (
      select reference from edw.di_tid
      where parentReference = @periode)
    and Kontraktoperatoer = 'DSB'
    and Omraadeland = 'Indland'

    update edw.FT_Togproduktion_Tog set erTrafikkontraktProduktion = 1
    where fk_di_tid in (
      select reference from edw.di_tid
      where parentReference = @periode)
    and togkategori = 'BH'
    
    update edw.FT_Togproduktion_Tog set erTrafikkontraktProduktion = 1
    where fk_di_tid in (
      select reference from edw.di_tid
      where parentReference = @periode)
    and FK_DI_Togsystem in (
      select PK_DI_Togsystem from edw.di_togsystem
      where Produkt = 'InterCity')
    and ikkeRetningsbestemtStrk Like 'Flensborg-Padborg Grænse'
    and Omraadeland = 'Udland'

    select @periode + ' Done'

END
GO
PRINT N'Creating [etl].[get_loadinfo_protal]...';


GO

CREATE proc [etl].[get_loadinfo_protal] --default svarende til forrige måned --ellers angives specifik måned - x '2012-08-01'as 
as 
	begin
	
		declare @kilde_system varchar(50)
		set @kilde_system = 'protal'

		declare @email_to varchar(8000)
		declare @loadperiodYYYYMM varchar(10)

		select @loadperiodYYYYMM = value from ods.ctl_dataload where kilde_system = @kilde_system and variable = 'Load_Period' 
		select @email_to = value from ods.ctl_dataload where kilde_system  = @kilde_system and variable = 'Email'

		select @loadperiodYYYYMM as Loadperiod, @email_to as Email_to,  getdate() as Timestamp
			
	end
GO
PRINT N'Creating [etl].[edw_togproduktion_load_dimensions]...';


GO

CREATE proc [etl].[edw_togproduktion_load_dimensions]
as
begin

/* Load edw.DI_Loebestrk */

insert into edw.DI_Loebestrk
select f.* 
from 
(select Loebestrk, Loebestrk ls
from edw.FT_Togproduktion_Tog
union
select Loebestrk, Loebestrk ls
from edw.ft_togproduktion_litra
)  f
EXCEPT
select Loebestrk, Loebestrk ls
from edw.DI_Loebestrk
group by Loebestrk, Loebestrk


/* Load edw.DI_Tognr */

declare @timestamp datetime
select @timestamp = getdate()

if object_id('tempdb..#tognr','u') is not null
drop table #tognr

if object_id('tempdb..#nyetognr','u') is not null
drop table #nyetognr

select tognr 
into #tognr 
from edw.ft_togproduktion_litra
union
select tognr 
from  edw.ft_togproduktion_tog
order by tognr

select distinct tognr 
into #nyetognr
from #tognr 
except select Tognr
from edw.DI_Tognummer

insert into edw.di_tognummer (tognr, tognrinterval, timestamp)
select distinct 
	tognr, 
	convert(varchar(10),tognr - (tognr %100))+'-'+convert(varchar(10),tognr - (tognr %100) +99), 
	@timestamp  
from #nyetognr


/* Load edw.DI_Operatoer */

declare @loadperiode varchar(6)
select @loadperiode=value from ods.ctl_dataload where kilde_system = 'protal' and variable = 'Load_Period'


insert into edw.DI_Operatoer 
(Operatoer)
select Operatoer from (
select Kontraktoperatoer as Operatoer
from 
	edw.FT_Togproduktion_Litra
where 
	substring(fk_di_tid, 1, 6) = @loadperiode
	and Kontraktoperatoer not in
	(select operatoer from edw.DI_Operatoer)
union all
select Tekniskoperatoer  as Operatoer
from 
	edw.FT_Togproduktion_Litra
where 
	substring(fk_di_tid, 1, 6) = @loadperiode
	and Tekniskoperatoer not in
	(select operatoer from edw.DI_Operatoer)) o
group by o.Operatoer


/* Load edw.DI_Togkategori */

select @loadperiode=value from ods.ctl_dataload where kilde_system = 'protal' and variable = 'Load_Period'
insert into edw.DI_Togkategori 
(Togkat, 
TogkatBeskrivelse,
TogkatEjer,
Division,
Kontraktoperatoer,
Tekniskoperatoer)
select 
	Togkategori, 
	max(Togkategoribeskrivelse),
	max(Togkategoriejer),
	max(Division),
	max(Kontraktoperatoer),
	max(Tekniskoperatoer)
from 
	edw.FT_Togproduktion_Litra
where 
	substring(fk_di_tid, 1, 6) = @loadperiode
	and togkategori not in
	(select Togkat from edw.DI_Togkategori)
group by 
	Togkategori
	
	
insert into edw.DI_Togkategori 
(Togkat, 
TogkatBeskrivelse,
TogkatEjer,
Division,
Kontraktoperatoer,
Tekniskoperatoer)
select 
	Togkategori, 
	max(Togkategoribeskrivelse),
	max(Togkategoriejer),
	max(Division),
	max(Kontraktoperatoer),
	max(Tekniskoperatoer)
from 
	edw.FT_Togproduktion_tog
where 
	substring(fk_di_tid, 1, 6) = @loadperiode
	and togkategori not in
	(select Togkat from edw.DI_Togkategori)
group by 
	Togkategori
	
	


/* Load edw.DI_Lokation */

-- Litra
insert into edw.di_lokation
select q.Frastation + '-' + q.Tilstation, q.Frastation + '-' + q.Tilstation,
q.Frastation, q.Tilstation, @timestamp
from (
select distinct Frastation, Tilstation
from edw.FT_Togproduktion_Litra
EXCEPT
select StartStation, SlutStation
from edw.DI_Lokation
) q

-- Tog
insert into edw.di_lokation
select q.Frastation + '-' + q.Tilstation, q.Frastation + '-' + q.Tilstation,
q.Frastation, q.Tilstation, @timestamp
from (
select distinct Frastation, Tilstation
from edw.FT_Togproduktion_tog
EXCEPT
select StartStation, SlutStation
from edw.DI_Lokation
) q

--opdater edw.di_straekning
	Insert into edw.di_straekning (
		Straekningskode,
		Frastation,
		Frastation_Tekst,
		Tilstation,
		Tilstation_Tekst,
		Retningsbestemt_Straekning,
		Ikke_retningsbestemt_Straekning
	)
	SELECT  distinct
		Frastation+'-'+Tilstation, ---Straekningskode
		Frastation, ---Frastation
		substring(RetningsbestemtStrk,1,charindex('-',RetningsbestemtStrk)-1), --Tekst før bindestreg  ---Frastation_Tekst
		Tilstation,   ---Tilstation
		substring(RetningsbestemtStrk,charindex('-',RetningsbestemtStrk)+1,len(RetningsbestemtStrk)), --Tekst efter bindestreg  ---Tilstation_Tekst
		RetningsbestemtStrk,   ---Retningsbestemt_Straekning
		IkkeretningsbestemtStrk   ---Ikke_retningsbestemt_Straekning
	From
		edw.ft_togproduktion_litra
	Where 
		Frastation+'-'+Tilstation not in (select straekningskode from edw.di_straekning)
	
	Insert into edw.di_straekning (
		Straekningskode,
		Frastation,
		Frastation_Tekst,
		Tilstation,
		Tilstation_Tekst,
		Retningsbestemt_Straekning,
		Ikke_retningsbestemt_Straekning
	)
	SELECT  distinct
		Frastation+'-'+Tilstation, ---Straekningskode
		Frastation, ---Frastation
		substring(RetningsbestemtStrk,1,charindex('-',RetningsbestemtStrk)-1), --Tekst før bindestreg  ---Frastation_Tekst
		Tilstation,   ---Tilstation
		substring(RetningsbestemtStrk,charindex('-',RetningsbestemtStrk)+1,len(RetningsbestemtStrk)), --Tekst efter bindestreg  ---Tilstation_Tekst
		RetningsbestemtStrk,   ---Retningsbestemt_Straekning
		IkkeretningsbestemtStrk   ---Ikke_retningsbestemt_Straekning
	From
		edw.ft_togproduktion_tog
	Where 
		Frastation+'-'+Tilstation not in (select straekningskode from edw.di_straekning)
	


/* Load edw.DI_TogOmraade */

insert into edw.DI_TogOmraade
select Distinct Omraade, Omraadeland
from edw.FT_Togproduktion_Litra
group by Omraadeland, Omraade
EXCEPT
select Omraade, Omraadeland
from edw.DI_TogOmraade

/* Load edw.DI_Litra */



insert into 
edw.DI_Litra
	(Kode,
	Navn,
	MaterielTypel,
	Data_kilde,
	Timestamp)

select q.Litra, q.Litra, null,'PROTAL', @timestamp
from (
select Distinct Litra 
from edw.FT_Togproduktion_Litra
EXCEPT
select kode
from edw.di_litra
) q


update d 
set d.materieltypel = f.materieltype 
from 
	(select litra, 
		max(materieltype) as materieltype, 
		count(distinct materieltype) as unik 
		from edw.FT_Togproduktion_Litra 
		group by litra 
		having count(distinct materieltype) = 1  --materieltype kan kun updates når værdien er unik, set i forhold til litra
	) f
inner join 
	edw.di_litra d on f.litra = d.kode
where d.materieltypel is null


--update edw.di_litra
--set data_kilde = 'LTD'

/* Load edw.DI_Litra */

/*insert into edw.DI_Litra
select litra
from edw.FT_Togproduktion_litra
group by litra
EXCEPT
select Kode
from edw.DI_Litra
group by Kode*/

-- det mangler query til at tilføje litra attributes

/* Load edw.DI_Litra */

insert into edw.di_traekkraft
select distinct Traekkraft
from edw.FT_Togproduktion_Tog
EXCEPT
select Traekkraft
from edw.di_traekkraft

/* Load edw.DI_materiale */

-- Insæt rækker i DI_MATERIALE for manglende kombinationer af litra og loebenr. 
-- Der indsættes default værdier for litra'en taget fra tabellen  [mdw].[edw].[MD_Materiale_sidepladser_default]

if object_id('tempdb..#temp') is not null drop table #temp
select distinct Litra, loebenr 
into #temp 
from edw.FT_Togproduktion_Litra 
where CONVERT(varchar, loebenr) + '-' + Litra not in 
	(SELECT CONVERT(varchar, loebenr) + '-' + Litra AS MAT_ID FROM edw.DI_Materiale)
	
declare @loadperiod varchar(10) 
select @loadperiod = value+'01' from ods.CTL_Dataload where kilde_system = 'protal' and variable = 'load_period'

Insert into edw.di_materiale (
	[loebenr],
	[Nummer],
	[Antal],
	[Litra],
	[Type],
	[Variant],
	[Kaldenavn],
	[Egenavn],
	[AntalVogne],
	[Hastighed],
	[FasteSiddepladser],
	[Klapsæder],
	[SiddepladserTotal], 
	[Traktionssystem],
	[Ejerforhold],
	[BistroOgPantry],
	[Salgsautomater],
	[Greenspeed],
	[GodkendtTilTunnelkørsel],
	[Source],
	[Aktiv_fra],
	[Aktiv_til]
)

SELECT 
	 t.Loebenr,   ---loebenr
	 '-',   ---Nummer
	 -1,   ---Antal
	 t.[Litra],   ---Litra
	 d.[Litra_type],   ---Type
	 '-',   ---Variant
	 '-',   ---Kaldenavn
	 '-',   ---Egenavn
	 -1,   ---AntalVogne
	 -1,   ---Hastighed
	 -1,   ---FasteSiddepladser
	 -1,   ---Klapsæder
	 d.[antal pladser],   ---SiddepladserTotal
	 '-',   ---Traktionssystem
	 '-',   ---Ejerforhold
	 '-',   ---BistroOgPantry
	 '-',   ---Salgsautomater
	 '-',   ---Greenspeed
	 '-',   ---GodkendtTilTunnelkørsel
	 'Default værdier',   ---Source
	 convert(datetime, @loadperiod),   ---Aktiv_fra
	 null   ---Aktiv_til
From
	 [edw].[MD_Materiale_sidepladser_default] d
		inner join 
	#temp  t on d.litra = t.litra
	




end
GO
PRINT N'Creating [etl].[load_Dim_Profitcenter_og_omkostningssted_ny]...';


GO

CREATE proc [etl].[load_Dim_Profitcenter_og_omkostningssted_ny]
as
BEGIN

insert into ods.key_dim_profitcenter
(profitcenter, gyldigfra, gyldigtil)
select 
	Profitcenter,
	[dbo].[charDatoMedBindestreger2datetime](replace(gyldigfradato,'.','-')) as GyldigfraDatetime,
	[dbo].[charDatoMedBindestreger2datetime](replace(gyldigtildato,'.','-')) as GyldigtilDatetime
from 
	ods.rd_sap_profitcenterstam where profitcenter = 'DSBDummy'
	and not exists (select 'x' from ods.key_dim_profitcenter where profitcenter = 'DSBDummy')

--DAN Surrogatnøgler for dim_profitcenter

insert into ods.key_dim_profitcenter
(profitcenter, gyldigfra)
select 
	Profitcenter,
	[dbo].[charDatoMedBindestreger2datetime](replace(gyldigfradato,'.','-')) as GyldigfraDatetime
	--[dbo].[charDatoMedBindestreger2datetime](replace(gyldigtildato,'.','-')) as GyldigtilDatetime
from 
	ods.rd_sap_profitcenterstam 
except 
	select profitcenter,
	gyldigfra
	--gyldigtil
from 
	ods.key_dim_profitcenter
order by profitcenter, GyldigfraDatetime


update k1
set k1.gyldigtil = [dbo].[charDatoMedBindestreger2datetime](replace(k2.gyldigtildato,'.','-'))
from	 ods.key_dim_profitcenter k1
			inner join
ods.rd_sap_profitcenterstam  k2 on k1.profitcenter = k2.profitcenter and k1.gyldigfra = [dbo].[charDatoMedBindestreger2datetime](replace(k2.gyldigfradato,'.','-'))
where gyldigtil is null or k1.gyldigtil <> [dbo].[charDatoMedBindestreger2datetime](replace(k2.gyldigtildato,'.','-'))


--DAN Surrogatnøgler for Dim_Omkostningssted]
insert into ods.[Key_Dim_Omkostningssted]
([Omkostningssted], gyldigfra)
select 
	Omksted,
	[dbo].[charDatoMedBindestreger2datetime](replace(gyldigfradato,'.','-')) as GyldigfraDatetime
	--[dbo].[charDatoMedBindestreger2datetime](replace(gyldigtildato,'.','-')) as GyldigtilDatetime
from 
	ods.rd_sap_omkstedstam 
except 
	select [Omkostningssted],
	gyldigfra
	--gyldigtil
from 
	ods.[Key_Dim_Omkostningssted]
order by Omksted, GyldigfraDatetime


update k1
set k1.gyldigtil = [dbo].[charDatoMedBindestreger2datetime](replace(k2.gyldigtildato,'.','-'))
from	 ods.key_dim_omkostningssted k1
			inner join
ods.rd_sap_omkstedstam  k2 on k1.omkostningssted = k2.omksted and k1.gyldigfra = [dbo].[charDatoMedBindestreger2datetime](replace(k2.gyldigfradato,'.','-'))
where gyldigtil is null or k1.gyldigtil <> [dbo].[charDatoMedBindestreger2datetime](replace(k2.gyldigtildato,'.','-'))



--Load di_profitcenter_ny
truncate table edw.di_profitcenter_ny
insert into edw.di_profitcenter_ny
	(PK_ID,
	Profitcenter,
	ProfitcenterNavn,
	ProfitcenterParent_FH,
	ProfitcenterAnsvarlig,
	ProfitcenterBeskrivelse,
	Enhed,
	GyldigFradato,
	GyldigTildato,
	Aktiv,
	Timestamp)
select 
	pck.pk_key, --PK_ID,
	pc.Profitcenter,
	pc.ProfitcenterNavn,
	pc.standardhierarki, --ProfitcenterParent_FH,
	pc.ProfitcenterAnsvarlig,
	pc.ProfitcenterBeskrivelse,
	md_pc.Enhed,
	pck.gyldigfra, --GyldigFradato,
	pck.gyldigtil, --GyldigTildato,
	case pck.gyldigtil when '9999-12-31' then 'j' else 'n' end as Aktiv,
	null
from  
	ods.rd_sap_profitcenterstam pc   
		left outer join --1562
	ods.key_dim_profitcenter pck on pc.profitcenter = pck.profitcenter and pck.gyldigfra =  [dbo].[charDatoMedBindestreger2datetime](replace(pc.gyldigfradato,'.','-'))
		left outer join
	edw.md_a_profitcenter_enhed md_pc on pc.profitcenter = md_pc.profitcenter
update edw.di_profitcenter_ny set enhed = 'K' where profitcenter = '10000'

--load di_omksted_ny

truncate table edw.di_omksted_ny
insert into edw.di_omksted_ny
(
	PK_ID,
	OmkSted,
	OmkStedNavn,
	OmkStedAnsvarlig,
	OmkStedBeskrivelse,
	Profitcenter,
	FK_Profitcenter_PKID,
	GyldigFradato,
	GyldigTildato,
	Aktiv,
	Timestamp)
--7716 rækker
select 
	ko.pk_key,--PK_ID,
	dbo.fjernforanstilledenuller(o.OmkSted) as omksted,
	o.OmkStedNavn,
	o.OmkStedAnsvarlig,
	o.OmkStedBeskrivelse,
	dbo.fjernforanstilledenuller(o.Profitcenter) as profitcenter,
	isnull(po.pk_key,-1) as FK_Profitcenter_PKID, --profitcenter pk_id
	ko.GyldigFra,
	ko.GyldigTil,
	case ko.gyldigtil when '9999-12-31' then 'j' else 'n' end as Aktiv,
	o.timestamp
from 
	ods.rd_sap_omkstedstam o
		left outer join
	ods.key_dim_omkostningssted ko on o.omksted = ko.omkostningssted and [dbo].[charDatoMedBindestreger2datetime](replace(gyldigfradato,'.','-')) = ko.gyldigfra
		left outer join
	ods.key_dim_profitcenter po  on dbo.fjernforanstilledenuller(o.profitcenter) = po.profitcenter and  [dbo].[charDatoMedBindestreger2datetime](replace(gyldigtildato,'.','-')) between po.gyldigfra and po.gyldigtil

END
GO
PRINT N'Creating [etl].[Grl_DataLoadCheck_Log]...';


GO

create procedure [etl].[Grl_DataLoadCheck_Log](
    @DataLoadCheck_Element int,
    @Period int,
    @Vaerdi decimal(24,6))
AS

BEGIN
  SET NOCOUNT ON;
  DECLARE @id int

  select @id = ISNULL(MAX(id), -1) from etl.Grl_DataLoadCheck_Vaerdi
  where period = @Period
  and CheckElement_Id = @DataLoadCheck_Element

  IF @id = -1 
   INSERT INTO etl.Grl_DataLoadCheck_Vaerdi (
      CheckElement_Id, Period, Vaerdi, Tidsstempel)
   VALUES ( 
      @DataLoadCheck_Element, @Period, @Vaerdi, GETDATE())
  ELSE
   UPDATE etl.Grl_DataLoadCheck_Vaerdi SET Vaerdi = @Vaerdi, Tidsstempel = GETDATE()
   WHERE id = @id

  SET NOCOUNT OFF;
END
GO
PRINT N'Creating [etl].[edw_EndTabRefLog]...';


GO


CREATE PROCEDURE [etl].[edw_EndTabRefLog]
  @TabRefLogID INT
, @NumRows INT
, @RefColName_1  NVARCHAR(50)
, @RefColTot_1 DECIMAL(18,2)
, @RefColName_2  NVARCHAR(50)
, @RefColTot_2 DECIMAL(18,2)
, @RefColName_3  NVARCHAR(50)
, @RefColTot_3 DECIMAL(18,2)
, @RefColName_4  NVARCHAR(50)
, @RefColTot_4 DECIMAL(18,2)
, @RefColName_5  NVARCHAR(50)
, @RefColTot_5 DECIMAL(18,2)

AS
BEGIN
	SET NOCOUNT ON;

--	DECLARE @LastExtractDateTime DATETIME, @SQL NVARCHAR(255)
--	SELECT @SQL = N'SELECT @LastExtractDateTime = ISNULL(MAX(Timestamp), ''1900-01-01'') FROM ' + TableName FROM etl.edw_TabRefLog WHERE TabRefLogID = @TabRefLogID
--	EXEC sp_executeSQL @SQL, N'@LastExtractDateTime DATETIME OUTPUT', @LastExtractDateTime OUTPUT
	
	UPDATE etl.Edw_TabRefLog
	SET
	  EndTime = GetDate()
	, NumRows = @NumRows
    , RefColName_1 = @RefColName_1
    , RefColTot_1 = @RefColTot_1
    , RefColName_2 = @RefColName_2
    , RefColTot_2 = @RefColTot_2
    , RefColName_3 = @RefColName_3
    , RefColTot_3 = @RefColTot_3
    , RefColName_4 = @RefColName_4
    , RefColTot_4 = @RefColTot_4
    , RefColName_5 = @RefColName_5
    , RefColTot_5 = @RefColTot_5
--	, LastExtractDateTime = @LastExtractDateTime
	, Success = 1
	WHERE TabRefLogID = @TabRefLogID

	SET NOCOUNT OFF;
END
GO
PRINT N'Creating [etl].[delete_togproduktion_FogR_alle_rdh_og_ft_tabeller_efter_fejl]...';


GO
create proc [etl].[delete_togproduktion_FogR_alle_rdh_og_ft_tabeller_efter_fejl] @periode varchar(6)
as 
begin

	if @periode is null or len(@periode) <> 6 return --hvis @periode er tom eller for kort vil deletes med where fk_di_tid like @periode + '%' kunne slette hele facttabellen
	declare @periodeDatetime datetime
	select @periodeDatetime = convert(datetime, @periode+'01')
	select @periode
	select @periodeDatetime

	delete from ODS.RDH_Baneafgifter where maaned = @periode
	delete from ods.RDH_Broafgifter where maaned = @periode
	delete from ods.RDH_Strkafgifter where maaned = @periode
	delete from ods.RDH_Togproduktion_Litra where year(@periodeDatetime) = year(dato) and month(@periodeDatetime) = month(dato)
	delete from ods.RDH_Togproduktion_Tog where AarMaaned = @periode
	delete from ods.RDH_Togstandsninger where maaned = @periode
	
	delete from edw.ft_togproduktion_afgifter where fk_di_tid like @periode+'%'
	delete from edw.ft_togproduktion_litra where fk_di_tid like @periode + '%'
	delete from edw.FT_Togproduktion_Tog where fk_di_tid like @periode + '%'
	delete from edw.FT_Togproduktion_Togstandsninger where fk_di_tid like @periode + '%'
	
	
end
GO
PRINT N'Creating [etl].[get_loadinfo_pds]...';


GO

CREATE proc [etl].[get_loadinfo_pds] --default svarende til forrige måned --ellers angives specifik måned - x '2012-08-01'as 
as 
	begin
	
		declare @kilde_system varchar(50)
		set @kilde_system = 'pds'

		declare @email_to varchar(8000)
		declare @loadperiodYYYYMM varchar(10)

		select @loadperiodYYYYMM = value from ods.ctl_dataload where kilde_system = @kilde_system and variable = 'Last_Period_Load' 
		select @email_to = value from ods.ctl_dataload where kilde_system  = @kilde_system and variable = 'Email_To'

		select @loadperiodYYYYMM as Loadperiod, @email_to as Email_to,  getdate() as Timestamp
			
	end
GO
PRINT N'Creating [etl].[edw_togproduktion_s_tog_set_tidsinterval]...';


GO

/********************************************************************
Author:		Thomas
Create date: 6/-2013
Description:
Denne procedure tilføjer tidsintervaller til togproduktion_s_tog	

Denne procedure skal på sigt laves som en SSIS pakke.

********************************************************************/
CREATE PROCEDURE [etl].[edw_togproduktion_s_tog_set_tidsinterval] 

AS
BEGIN
  SET NOCOUNT ON;

  -- Tidsinterval update
  update edw.FT_Togproduktion_S_Tog set DI_Tidsintervaller = Case WHEN pf.prioritet < pt.prioritet THEN pf.prioritet ElSE pt.prioritet END
  from edw.FT_Togproduktion_S_Tog s
  join [edw].[MD_Tid_Konverter_Interval_Definitioner] pf on (pf.Dagugen_num = CASE when dbo.getIsDanishHolyDay(s.afgang) = 0 THEN dbo.UgedagNummer(s.afgang) ELSE 7 END
                                                         and pf.time = datepart(hh,s.afgang))
  join [edw].[MD_Tid_Konverter_Interval_Definitioner] pt on (pt.Dagugen_num = CASE when dbo.getIsDanishHolyDay(s.ankomst) = 0 THEN dbo.UgedagNummer(s.ankomst) ELSE 7 END
                                                     and pt.time = datepart(hh,s.ankomst))
  -- Indlæst Periode kun 
  where s.di_tid in (select reference from edw.di_tid
  where parentreference in (
    Select value from ods.ctl_dataload
    Where kilde_system = 'S-tog'))
  and pf.interval_header_id = 3
  and pt.interval_header_id = 3
END
GO
PRINT N'Creating [etl].[edw_TD_S_materiale_til_Litra_mapping]...';


GO






/********************************************************************
Author:		Thomas
Create date: 6/11-2013
Description:
Denne procedure laver en mapningstabel til at opsplitte togproduktionsrækker for 
S-tog til litra rækker 

********************************************************************/
CREATE PROCEDURE [etl].[edw_TD_S_materiale_til_Litra_mapping] 

AS
BEGIN
  TRUNCATE TABLE [etl].[TD_S_materiale_til_Litra_mapping]
  
  SET NOCOUNT ON;
  -- Cursor Variables
  DECLARE @litra_type Varchar(50)
  DECLARE @antal_litra_type_SA int
  DECLARE @antal_litra_type_SE int
  DECLARE @Materielkategori Varchar(50)
  
  -- Variables
  DECLARE @Sequence int
  DECLARE @Pladser_SE int
  DECLARE @Pladser_SA int
  
  
  --Antal sæder for SE
  SELECT @Pladser_SE = Siddepladser from ods.MD_Stog_litra_typer
  WHERE Antal_litra_type_SE = 1
  AND Antal_litra_type_SA = 0
  
  --Antal sæder for SA
  SELECT @Pladser_SA = Siddepladser from ods.MD_Stog_litra_typer
  WHERE Antal_litra_type_SE = 0
  AND Antal_litra_type_SA = 1
  
  
  -- Detajle curser
  DECLARE det_cur CURSOR fast_forward FOR
  select CASE WHEN Antal_litra_type_SA > 0 THEN CONVERT(VARCHAR, Antal_litra_type_SA) + 'xSA'
       ELSE '' END + 
     CASE WHEN Antal_litra_type_SE > 0 and Antal_litra_type_SA > 0 THEN '+' + CONVERT(VARCHAR, Antal_litra_type_SE) + 'xSE'
       WHEN Antal_litra_type_SE > 0 and Antal_litra_type_SA = 0 THEN CONVERT(VARCHAR, Antal_litra_type_SE) + 'xSE'
     ELSE '' END as litra_type, antal_litra_type_SA, antal_litra_type_SE, 'Tog' Materielkategori
  from ods.MD_Stog_litra_typer;

  
  OPEN det_cur
  FETCH NEXT FROM det_cur INTO @litra_type, @antal_litra_type_SA, @antal_litra_type_SE, @Materielkategori;
    
  WHILE @@FETCH_STATUS = 0
  BEGIN
    SET @Sequence = 1
    --SELECT @litra_type, @antal_litra_type_SA, @antal_litra_type_SE, @Materielkategori;
    WHILE @antal_litra_type_SA > 0
    BEGIN
      insert into [etl].[TD_S_materiale_til_Litra_mapping] (litra_type, litra_sekvens, Pladser, Materielkategori)
      values (@litra_type, @Sequence, @Pladser_SA, @Materielkategori)
      
      SET @antal_litra_type_SA = @antal_litra_type_SA-1;
      SET @Sequence = @Sequence + 1;
      
    END
    
    WHILE @antal_litra_type_SE > 0
    BEGIN
      insert into [etl].[TD_S_materiale_til_Litra_mapping] (litra_type, litra_sekvens, Pladser, Materielkategori)
      values (@litra_type, @Sequence, @Pladser_SE, @Materielkategori)
      
      SET @antal_litra_type_SE = @antal_litra_type_SE-1;
      SET @Sequence = @Sequence + 1;
      
    END
    
    FETCH NEXT FROM det_cur INTO @litra_type, @antal_litra_type_SA, @antal_litra_type_SE, @Materielkategori;    
    
  END

  CLOSE det_cur
  DEALLOCATE det_cur
  
  --Husk Bussen
  insert into [etl].[TD_S_materiale_til_Litra_mapping] (litra_type, litra_sekvens, Pladser, Materielkategori)
  values ('Bus', 1, 0, 'Bus')
  
  -- Husk ingen
  insert into [etl].[TD_S_materiale_til_Litra_mapping] (litra_type, litra_sekvens, Pladser, Materielkategori)
  values ('Ingen', 1, 0, 'Tog')
    
END
GO
PRINT N'Creating [etl].[ods_TD_Strækning_Mapping_Standsninger]...';


GO




/********************************************************************
Author:		Thomas
Create date: 6/11-2013
Description:
Denne procedure tilføjer standsninger til togproduktion for S-tog
for den pågældende load periode 

Denne procedure skal på sigt laves som en SSIS pakke.

********************************************************************/
CREATE PROCEDURE [etl].[ods_TD_Strækning_Mapping_Standsninger] 

AS
BEGIN
  
  SET NOCOUNT ON;
  
  DELETE FROM ods.TD_Strækning_Mapping
  WHERE Kilde = 'Standsning';
  
  WITH stop_sql AS (
  select t.DI_Tid, t. tognr, t.DI_S_Straekning, t.DI_Tidsintervaller, t.DI_S_Doegn_Inddeling,
     t.Afgang, t.Ankomst, t.Frastation, t.tilstation, t.Aflyst, t.Kilde,
     ROW_NUMBER() OVER (ORDER BY t.DI_Tid, t.tognr, afgang) As rowno
  from ods.TD_Strækning_Mapping t
  where t.Kilde = 'Produktion'
  --and tognr = 23118
  )
  INSERT INTO ods.TD_Strækning_Mapping
  SELECT c.DI_Tid, c.DI_S_Straekning, c.DI_Tidsintervaller, DATEADD(ss, 1, p.Ankomst) AS Ankomst,
    DATEADD(ss, -1, c.Afgang) AS Afgang,  c.tognr, p.tilstation, c.Frastation, 'Standsning' AS Kilde, 
    Null AS Aflyst, c.DI_S_Doegn_Inddeling
  from stop_sql AS c
  LEFT OUTER JOIN stop_sql AS p ON (c.rowno-1 = p.rowno)
  WHERE p.tilstation = c.Frastation
  AND p.DI_Tid = c.DI_Tid
  and p.Tognr = c.Tognr;

    
  -- Tidsinterval update hvis ankomst og afgang har forskellig prioritet
  update ods.TD_Strækning_Mapping set DI_Tidsintervaller = Case WHEN pf.prioritet < pt.prioritet THEN pf.prioritet ElSE pt.prioritet END
  from ods.TD_Strækning_Mapping s
  join [edw].[MD_Tid_Konverter_Interval_Definitioner] pf on (pf.Dagugen_num = CASE when dbo.getIsDanishHolyDay(s.afgang) = 0 THEN dbo.UgedagNummer(s.afgang) ELSE 7 END
                                                         and pf.time = datepart(hh,s.afgang))
  join [edw].[MD_Tid_Konverter_Interval_Definitioner] pt on (pt.Dagugen_num = CASE when dbo.getIsDanishHolyDay(s.ankomst) = 0 THEN dbo.UgedagNummer(s.ankomst) ELSE 7 END
                                                     and pt.time = datepart(hh,s.ankomst))
  -- Indlæst Periode kun 
  where s.Kilde = 'Standsning'
  and pf.interval_header_id = 3
  and pt.interval_header_id = 3;

END
GO
PRINT N'Creating [etl].[get_loadinfo_pds_Stog]...';


GO

CREATE proc [etl].[get_loadinfo_pds_Stog] --default svarende til forrige måned --ellers angives specifik måned - x '2012-08-01'as 
as 
	begin
	
		declare @kilde_system varchar(50)
		set @kilde_system = 'S-tog PDS'

		declare @email_to varchar(8000)
		declare @loadperiodYYYYMM varchar(10)

		select @loadperiodYYYYMM = value from ods.ctl_dataload where kilde_system = @kilde_system and variable = 'Load_Period' 
		select @email_to = value from ods.ctl_dataload where kilde_system  = @kilde_system and variable = 'Email'

		select @loadperiodYYYYMM as Loadperiod, @email_to as Email_to,  getdate() as Timestamp
			
	end
GO
PRINT N'Creating [etl].[RD_RIM_Rejseindtaegter_togsystemer_beregn_for_loadperiode]...';


GO

CREATE proc [etl].[RD_RIM_Rejseindtaegter_togsystemer_beregn_for_loadperiode] @loadperiode varchar(6)
as 
begin
	declare @månedsnummer_loadperiode int
	declare @år_loadperiode int
	declare @seneste_periode varchar(6)
	declare @månedsnummer_senesteperiode int
	declare @år_senesteperiode int

	set @månedsnummer_loadperiode = month(convert(datetime, (@loadperiode+'01')))
	set @år_loadperiode = year(convert(datetime, (@loadperiode+'01')))
	select @seneste_periode = max(år) from ods.RD_RIM_Rejseindtaegter_togsystemer
	
	set @månedsnummer_senesteperiode = month(convert(datetime, (@seneste_periode+'01')))
	set @år_senesteperiode = year(convert(datetime, (@seneste_periode+'01')))
	
	if @loadperiode > @seneste_periode 
	
	begin 
		delete from ods.RD_RIM_Rejseindtaegter_togsystemer where år = @loadperiode
	
		insert into ods.RD_RIM_Rejseindtaegter_togsystemer
		select CostObjekt, Enhed, @loadperiode as År,  (Værdi/@månedsnummer_senesteperiode)*@månedsnummer_loadperiode  --del seneste måneds data med antal måneder og gang med månedsnummer for loadperioden at få en anslået værdi for år til dato for loadperioden
		from ods.RD_RIM_Rejseindtaegter_togsystemer
		where År = @seneste_periode
	end

end
GO
PRINT N'Creating [etl].[RD_RIM_Rejseindtaegter_beregn_for_loadperiode]...';


GO

CREATE proc [etl].[RD_RIM_Rejseindtaegter_beregn_for_loadperiode] @loadperiode varchar(6)
as 
begin
	
	declare @seneste_periode varchar(6)
	
	select @seneste_periode = max([PeriodeIndlæst]) from ods.[RD_RIM_Rejseindtaegter]
	
	if @seneste_periode < @loadperiode	
	begin 
	
		insert into [ods].[RD_RIM_Rejseindtaegter]
		SELECT @loadperiode as [PeriodeIndlæst]
		      ,[Stationsnr]
		      ,[Stationsnavn]
		      ,[Stationstype]
		      ,[Landsdel]
		      ,[Togsystem]
		      ,[TogsystemNavn]
		      ,[CostObjekt]
		      ,[Produkt]
		      ,[TidsintervalNavn]
		      ,[Enhed]
		      ,[Værdi] As Værdi
		   FROM [ods].[RD_RIM_Rejseindtaegter]
		   where PeriodeIndlæst = @seneste_periode
			
	end

end
GO
PRINT N'Creating [etl].[GD_Kopier_til_ny_periode]...';


GO

CREATE proc [etl].[GD_Kopier_til_ny_periode] @fraPeriode varchar(6), @tilPeriode varchar(6), @TilladOverskrivTilperiode bit = 0
as
set nocount on

if @TilladOverskrivTilperiode = 0
begin
	--Tjek om der i forvejen findes rækker i nogen af GD_ tabellerne for perioden der kopieres til (@tilPeriode)
	create table #temp (c1 char(1))
	insert into #temp 
		select 'x' as c1 from dbo.GD_R_Togførertid_FR Where PeriodeIndlæst = @tilPeriode
		union all select 'x' from dbo.GD_R_Personaledata Where PeriodeIndlæst = @tilPeriode
		union all select 'x' from dbo.GD_R_LønsumAnsættelsetype Where PeriodeIndlæst = @tilPeriode
		union all select 'x' from dbo.GD_R_Lokoførertid_STog Where PeriodeIndlæst = @tilPeriode
		union all select 'x' from dbo.GD_R_Baneafgifter_FR Where PeriodeIndlæst = @tilPeriode
		union all select 'x' from dbo.GD_R_Togproduktion_FR Where PeriodeIndlæst = @tilPeriode
		union all select 'x' from dbo.GD_R_Lokoførertid_FR Where PeriodeIndlæst = @tilPeriode
		union all select 'x' from dbo.GD_R_Lokoførertid_FR_Fix Where PeriodeIndlæst = @tilPeriode
		union all select 'x' from dbo.GD_R_RejserIndtægter_Stog Where PeriodeIndlæst = @tilPeriode
		union all select 'x' from dbo.GD_R_RejserIndtægter_FR Where PeriodeIndlæst = @tilPeriode
		union all select 'x' from dbo.GD_R_Økonomi_Anlæg Where Periode = @tilPeriode
		union all select 'x' from dbo.GD_R_Økonomi_Drift Where Periode = @tilPeriode
		union all select 'x' from dbo.GD_R_RejseIndtægter_Togsystem_FR Where PeriodeIndlæst = @tilPeriode
		union all select 'x' from dbo.GD_R_Togproduktion_STog Where PeriodeIndlæst = @tilPeriode
		
	if @@rowcount > 0 
	begin 
			declare @fejlbesked varchar(200)
			set @fejlbesked = 'Der eksisterer rækker for tilPerioden i forvejen. Sæt @TilladOverskrivTilPeriode til 1 hvis en eksisterende periode skal overskrives. '+'Eksempel: exec etl.GD_Kopier_til_ny_periode '+quotename(@fraPeriode,'''')+', '+quotename(@tilPeriode,'''')+', 1'
			raiserror(@fejlbesked,1,1)
			return -1
	end
end


--set nocount on

/* dbo.GD_R_Togførertid_FR*/

Delete from dbo.GD_R_Togførertid_FR where PeriodeIndlæst = @tilPeriode
 
Insert into dbo.GD_R_Togførertid_FR (
   [PeriodeIndlæst],
   [Turdepot],
   [TurdepotNavn],
   [OpgaveType],
   [OpgaveGruppe],
   [OpgaveGruppeNavn],
   [ElementKode],
   [ElementKodeNavn],
   [Produkt],
   [Togsystem],
   [TogsystemNavn],
   [Timer],
   [Costobjekt],
   [TidsintervalNavn]
)
Select 
   @tilPeriode,   ---PeriodeIndlæst
   [Turdepot],   ---Turdepot
   [TurdepotNavn],   ---TurdepotNavn
   [OpgaveType],   ---OpgaveType
   [OpgaveGruppe],   ---OpgaveGruppe
   [OpgaveGruppeNavn],   ---OpgaveGruppeNavn
   [ElementKode],   ---ElementKode
   [ElementKodeNavn],   ---ElementKodeNavn
   [Produkt],   ---Produkt
   [Togsystem],   ---Togsystem
   [TogsystemNavn],   ---TogsystemNavn
   [Timer],   ---Timer
   [Costobjekt],   ---Costobjekt
   [TidsintervalNavn]   ---TidsintervalNavn
From
   dbo.GD_R_Togførertid_FR
Where
   PeriodeIndlæst = @fraPeriode
 
 
/* dbo.GD_R_Personaledata*/
Delete from dbo.GD_R_Personaledata where PeriodeIndlæst = @tilPeriode
 
Insert into dbo.GD_R_Personaledata (
   [PeriodeIndlæst],
   [Profitcenter],
   [ProfitcenterNavn],
   [OmkStedKont],
   [OmkStedNavn],
   [Fuldtidsstillinger]
)
Select 
   @tilPeriode,   ---PeriodeIndlæst
   [Profitcenter],   ---Profitcenter
   [ProfitcenterNavn],   ---ProfitcenterNavn
   [OmkStedKont],   ---OmkStedKont
   [OmkStedNavn],   ---OmkStedNavn
   [Fuldtidsstillinger]   ---Fuldtidsstillinger
From
   dbo.GD_R_Personaledata
Where
   PeriodeIndlæst = @fraPeriode
 
/* dbo.GD_R_LønsumAnsættelsetype*/
Delete from dbo.GD_R_LønsumAnsættelsetype where PeriodeIndlæst = @tilPeriode
 
Insert into dbo.GD_R_LønsumAnsættelsetype (
   [Profitcenter],
   [ProfitcenterNavn],
   [Art],
   [ArtNavn],
   [Medarb_Grp],
   [Medarb_GrpNavn],
   [PeriodeIndlæst],
   [Lønsum]
)
Select 
   [Profitcenter],   ---Profitcenter
   [ProfitcenterNavn],   ---ProfitcenterNavn
   [Art],   ---Art
   [ArtNavn],   ---ArtNavn
   [Medarb_Grp],   ---Medarb_Grp
   [Medarb_GrpNavn],   ---Medarb_GrpNavn
   @tilPeriode,   ---PeriodeIndlæst
   [Lønsum]   ---Lønsum
From
   dbo.GD_R_LønsumAnsættelsetype
Where
   PeriodeIndlæst = @fraPeriode
 
/* dbo.GD_R_Lokoførertid_STog*/
Delete from dbo.GD_R_Lokoførertid_STog where periodeIndlæst = @tilPeriode
 
Insert into dbo.GD_R_Lokoførertid_STog (
   [periodeIndlæst],
   [Turdepot],
   [TurdepotNavn],
   [OpgaveType],
   [OpgaveGruppe],
   [OpgaveGruppeNavn],
   [Togsystem],
   [TogsystemNavn],
   [Costobjekt],
   [TidsintervalNavn],
   [Timer]
)
Select 
   @tilPeriode,   ---periodeIndlæst
   [Turdepot],   ---Turdepot
   [TurdepotNavn],   ---TurdepotNavn
   [OpgaveType],   ---OpgaveType
   [OpgaveGruppe],   ---OpgaveGruppe
   [OpgaveGruppeNavn],   ---OpgaveGruppeNavn
   [Togsystem],   ---Togsystem
   [TogsystemNavn],   ---TogsystemNavn
   [Costobjekt],   ---Costobjekt
   [TidsintervalNavn],   ---TidsintervalNavn
   [Timer]   ---Timer
From
   dbo.GD_R_Lokoførertid_STog
Where
   periodeIndlæst = @fraPeriode
 
 
/* dbo.GD_R_Baneafgifter_FR*/
Delete from dbo.GD_R_Baneafgifter_FR where PeriodeIndlæst = @tilPeriode
 
Insert into dbo.GD_R_Baneafgifter_FR (
   [PeriodeIndlæst],
   [Afgift],
   [Passage],
   [Produkt],
   [Togsystem],
   [TogsystemNavn],
   [Costobjekt],
   [Enhed],
   [Værdi]
)
Select 
   @tilPeriode,   ---PeriodeIndlæst
   [Afgift],   ---Afgift
   [Passage],   ---Passage
   [Produkt],   ---Produkt
   [Togsystem],   ---Togsystem
   [TogsystemNavn],   ---TogsystemNavn
   [Costobjekt],   ---Costobjekt
   [Enhed],   ---Enhed
   [Værdi]   ---Værdi
From
   dbo.GD_R_Baneafgifter_FR
Where
   PeriodeIndlæst = @fraPeriode
 
/* dbo.GD_R_Togproduktion_FR*/
Delete from dbo.GD_R_Togproduktion_FR where PeriodeIndlæst = @tilPeriode
 
Insert into dbo.GD_R_Togproduktion_FR (
   [PeriodeIndlæst],
   [Materielkørsel],
   [LitraTypeID],
   [LitraTypeNavn],
   [Togsystem],
   [TogsystemNavn],
   [TidsintervalNavn],
   [CostObjekt],
   [Enhed],
   [Værdi]
)
Select 
   @tilPeriode,   ---PeriodeIndlæst
   [Materielkørsel],   ---Materielkørsel
   [LitraTypeID],   ---LitraTypeID
   [LitraTypeNavn],   ---LitraTypeNavn
   [Togsystem],   ---Togsystem
   [TogsystemNavn],   ---TogsystemNavn
   [TidsintervalNavn],   ---TidsintervalNavn
   [CostObjekt],   ---CostObjekt
   [Enhed],   ---Enhed
   [Værdi]   ---Værdi
From
   dbo.GD_R_Togproduktion_FR
Where
   PeriodeIndlæst = @fraPeriode
 
/* dbo.GD_R_Lokoførertid_FR*/
Delete from dbo.GD_R_Lokoførertid_FR where PeriodeIndlæst = @tilPeriode
 
Insert into dbo.GD_R_Lokoførertid_FR (
   [PeriodeIndlæst],
   [Turdepot],
   [TurdepotNavn],
   [OpgaveType],
   [OpgaveGruppe],
   [OpgaveGruppeNavn],
   [ElementKode],
   [ElementKodeNavn],
   [Produkt],
   [Togsystem],
   [TogsystemNavn],
   [Timer],
   [Costobjekt],
   [TidsintervalNavn]
)
Select 
   @tilPeriode,   ---PeriodeIndlæst
   [Turdepot],   ---Turdepot
   [TurdepotNavn],   ---TurdepotNavn
   [OpgaveType],   ---OpgaveType
   [OpgaveGruppe],   ---OpgaveGruppe
   [OpgaveGruppeNavn],   ---OpgaveGruppeNavn
   [ElementKode],   ---ElementKode
   [ElementKodeNavn],   ---ElementKodeNavn
   [Produkt],   ---Produkt
   [Togsystem],   ---Togsystem
   [TogsystemNavn],   ---TogsystemNavn
   [Timer],   ---Timer
   [Costobjekt],   ---Costobjekt
   [TidsintervalNavn]   ---TidsintervalNavn
From
   dbo.GD_R_Lokoførertid_FR
Where
   PeriodeIndlæst = @fraPeriode
 
/* dbo.GD_R_Lokoførertid_FR_Fix*/
Delete from dbo.GD_R_Lokoførertid_FR_Fix where PeriodeIndlæst = @tilPeriode
 
Insert into dbo.GD_R_Lokoførertid_FR_Fix (
   [PeriodeIndlæst],
   [Turdepot],
   [TurdepotNavn],
   [OpgaveType],
   [OpgaveGruppe],
   [OpgaveGruppeNavn],
   [ElementKode],
   [ElementKodeNavn],
   [Produkt],
   [Togsystem],
   [TogsystemNavn],
   [Timer],
   [Costobjekt],
   [TidsintervalNavn]
)
Select 
   @tilPeriode,   ---PeriodeIndlæst
   [Turdepot],   ---Turdepot
   [TurdepotNavn],   ---TurdepotNavn
   [OpgaveType],   ---OpgaveType
   [OpgaveGruppe],   ---OpgaveGruppe
   [OpgaveGruppeNavn],   ---OpgaveGruppeNavn
   [ElementKode],   ---ElementKode
   [ElementKodeNavn],   ---ElementKodeNavn
   [Produkt],   ---Produkt
   [Togsystem],   ---Togsystem
   [TogsystemNavn],   ---TogsystemNavn
   [Timer],   ---Timer
   [Costobjekt],   ---Costobjekt
   [TidsintervalNavn]   ---TidsintervalNavn
From
   dbo.GD_R_Lokoførertid_FR_Fix
Where
   PeriodeIndlæst = @fraPeriode
  
/* dbo.GD_R_RejserIndtægter_Stog*/
Delete from dbo.GD_R_RejserIndtægter_Stog where PeriodeIndlæst = @tilPeriode
 
Insert into dbo.GD_R_RejserIndtægter_Stog (
   [PeriodeIndlæst],
   [Togsystem],
   [TogsystemNavn],
   [Costobjekt],
   [Enhed],
   [Værdi]
)
Select 
   @tilPeriode,   ---PeriodeIndlæst
   [Togsystem],   ---Togsystem
   [TogsystemNavn],   ---TogsystemNavn
   [Costobjekt],   ---Costobjekt
   [Enhed],   ---Enhed
   [Værdi]   ---Værdi
From
   dbo.GD_R_RejserIndtægter_Stog
Where
   PeriodeIndlæst = @fraPeriode
 
/* dbo.GD_R_RejserIndtægter_FR*/
Delete from dbo.GD_R_RejserIndtægter_FR where PeriodeIndlæst = @tilPeriode
 
Insert into dbo.GD_R_RejserIndtægter_FR (
   [PeriodeIndlæst],
   [Stationsnr],
   [Stationsnavn],
   [Stationstype],
   [Landsdel],
   [Togsystem],
   [TogsystemNavn],
   [CostObjekt],
   [Produkt],
   [TidsintervalNavn],
   [Enhed],
   [Værdi]
)
Select 
   @tilPeriode,   ---PeriodeIndlæst
   [Stationsnr],   ---Stationsnr
   [Stationsnavn],   ---Stationsnavn
   [Stationstype],   ---Stationstype
   [Landsdel],   ---Landsdel
   [Togsystem],   ---Togsystem
   [TogsystemNavn],   ---TogsystemNavn
   [CostObjekt],   ---CostObjekt
   [Produkt],   ---Produkt
   [TidsintervalNavn],   ---TidsintervalNavn
   [Enhed],   ---Enhed
   [Værdi]   ---Værdi
From
   dbo.GD_R_RejserIndtægter_FR
Where
   PeriodeIndlæst = @fraPeriode
 
/* dbo.GD_R_Økonomi_Anlæg*/
Delete from dbo.GD_R_Økonomi_Anlæg where Periode = @tilPeriode
 
Insert into dbo.GD_R_Økonomi_Anlæg (
   [HovednrUnr],
   [Firmakode],
   [AktiverDato],
   [BetegnelseAnlaegAktiv],
   [Balkonto],
   [AnlKlasse],
   [AkkAfskrPrimo],
   [AkkAfskrUltimo],
   [Afskrivning],
   [BogfoertVaerdiPrimo],
   [BogfoertVaerdiUltimo],
   [OmkStedUltimo],
   [OmkStedNavnUltimo],
   [Sats],
   [AnskVaerdi],
   [Profitcenter],
   [AfskrivningerAM],
   [Afvigelse],
   [Forrentningsgrundlag],
   [Forrentning],
   [Timestamp],
   [Delområde],
   [Beskrivelse],
   [Periode]
)
Select 
   [HovednrUnr],   ---HovednrUnr
   [Firmakode],   ---Firmakode
   [AktiverDato],   ---AktiverDato
   [BetegnelseAnlaegAktiv],   ---BetegnelseAnlaegAktiv
   [Balkonto],   ---Balkonto
   [AnlKlasse],   ---AnlKlasse
   [AkkAfskrPrimo],   ---AkkAfskrPrimo
   [AkkAfskrUltimo],   ---AkkAfskrUltimo
   [Afskrivning],   ---Afskrivning
   [BogfoertVaerdiPrimo],   ---BogfoertVaerdiPrimo
   [BogfoertVaerdiUltimo],   ---BogfoertVaerdiUltimo
   [OmkStedUltimo],   ---OmkStedUltimo
   [OmkStedNavnUltimo],   ---OmkStedNavnUltimo
   [Sats],   ---Sats
   [AnskVaerdi],   ---AnskVaerdi
   [Profitcenter],   ---Profitcenter
   [AfskrivningerAM],   ---AfskrivningerAM
   [Afvigelse],   ---Afvigelse
   [Forrentningsgrundlag],   ---Forrentningsgrundlag
   [Forrentning],   ---Forrentning
   [Timestamp],   ---Timestamp
   [Delområde],   ---Delområde
   [Beskrivelse],   ---Beskrivelse
   @tilPeriode   ---Periode
From
   dbo.GD_R_Økonomi_Anlæg
Where
   Periode = @fraPeriode
 
/* dbo.GD_R_Økonomi_Drift*/
Delete from dbo.GD_R_Økonomi_Drift where Periode = @tilPeriode
 
Insert into dbo.GD_R_Økonomi_Drift (
   [Profitcenter],
   [Profitcenternavn_dont_use],
   [Omkostningssted],
   [Omkostningsstednavn_dont_use],
   [Omkostningsart],
   [Omkostningsartnavn_dont_use],
   [PSP-element],
   [PSP-elementNavn_dont_use],
   [Ordre],
   [Ordrenavn_dont_use],
   [Litratype],
   [Litratypenavn_dont_use],
   [Delområde],
   [DelområdeNavn],
   [StationsNr],
   [StationsNavn],
   [StationsType],
   [StationsTypeNavn],
   [NøgleFastEjendom],
   [Beskrivelse],
   [FaktiskBeløb],
   [indlæstTidspunktRådata],
   [indlæstAfRådata],
   [Momsstatus],
   [CeArtGrp],
   [CeArtGrpNavn],
   [ArtGrp],
   [ArtGrpNavn],
   [Variabilitet],
   [VariabilitetNavn],
   [Reversibilitet],
   [ReversibilitetNavn],
   [indlæstTidspunktManuelledata],
   [indlæstAfManuelleDAta],
   [indlæstTidspunkt],
   [indlæstAf],
   [Periode]
)
Select 
   [Profitcenter],   ---Profitcenter
   [Profitcenternavn_dont_use],   ---Profitcenternavn_dont_use
   [Omkostningssted],   ---Omkostningssted
   [Omkostningsstednavn_dont_use],   ---Omkostningsstednavn_dont_use
   [Omkostningsart],   ---Omkostningsart
   [Omkostningsartnavn_dont_use],   ---Omkostningsartnavn_dont_use
   [PSP-element],   ---PSP-element
   [PSP-elementNavn_dont_use],   ---PSP-elementNavn_dont_use
   [Ordre],   ---Ordre
   [Ordrenavn_dont_use],   ---Ordrenavn_dont_use
   [Litratype],   ---Litratype
   [Litratypenavn_dont_use],   ---Litratypenavn_dont_use
   [Delområde],   ---Delområde
   [DelområdeNavn],   ---DelområdeNavn
   [StationsNr],   ---StationsNr
   [StationsNavn],   ---StationsNavn
   [StationsType],   ---StationsType
   [StationsTypeNavn],   ---StationsTypeNavn
   [NøgleFastEjendom],   ---NøgleFastEjendom
   [Beskrivelse],   ---Beskrivelse
   [FaktiskBeløb],   ---FaktiskBeløb
   [indlæstTidspunktRådata],   ---indlæstTidspunktRådata
   [indlæstAfRådata],   ---indlæstAfRådata
   [Momsstatus],   ---Momsstatus
   [CeArtGrp],   ---CeArtGrp
   [CeArtGrpNavn],   ---CeArtGrpNavn
   [ArtGrp],   ---ArtGrp
   [ArtGrpNavn],   ---ArtGrpNavn
   [Variabilitet],   ---Variabilitet
   [VariabilitetNavn],   ---VariabilitetNavn
   [Reversibilitet],   ---Reversibilitet
   [ReversibilitetNavn],   ---ReversibilitetNavn
   [indlæstTidspunktManuelledata],   ---indlæstTidspunktManuelledata
   [indlæstAfManuelleDAta],   ---indlæstAfManuelleDAta
   [indlæstTidspunkt],   ---indlæstTidspunkt
   [indlæstAf],   ---indlæstAf
   @tilPeriode   ---Periode
From
   dbo.GD_R_Økonomi_Drift
Where
   Periode = @fraPeriode
  
/* dbo.GD_R_RejseIndtægter_Togsystem_FR*/
Delete from dbo.GD_R_RejseIndtægter_Togsystem_FR where PeriodeIndlæst = @tilPeriode
 
Insert into dbo.GD_R_RejseIndtægter_Togsystem_FR (
   [PeriodeIndlæst],
   [togsystemnummer],
   [Togsystemnavn_Kort],
   [costObjekt],
   [Enhed],
   [værdi]
)
Select 
   @tilPeriode,   ---PeriodeIndlæst
   [togsystemnummer],   ---togsystemnummer
   [Togsystemnavn_Kort],   ---Togsystemnavn_Kort
   [costObjekt],   ---costObjekt
   [Enhed],   ---Enhed
   [værdi]   ---værdi
From
   dbo.GD_R_RejseIndtægter_Togsystem_FR
Where
   PeriodeIndlæst = @fraPeriode

/* dbo.GD_R_Togproduktion_STog*/
Delete from dbo.GD_R_Togproduktion_STog where PeriodeIndlæst = @tilPeriode
 
Insert into dbo.GD_R_Togproduktion_STog (
   [PeriodeIndlæst],
   [Litratype],
   [Togsystem],
   [TogsystemNavn],
   [Costobjekt],
   [Enhed],
   [Værdi],
   [TidsintervalNavn]
)
Select 
   @tilPeriode,   ---PeriodeIndlæst
   [Litratype],   ---Litratype
   [Togsystem],   ---Togsystem
   [TogsystemNavn],   ---TogsystemNavn
   [Costobjekt],   ---Costobjekt
   [Enhed],   ---Enhed
   [Værdi],   ---Værdi
   [TidsintervalNavn]   ---TidsintervalNavn
From
   dbo.GD_R_Togproduktion_STog
Where
   PeriodeIndlæst = @fraPeriode
GO
PRINT N'Creating [ods].[TD_Togsystem_mapning_prc]...';


GO

CREATE proc [ods].[TD_Togsystem_mapning_prc] @yyyymm varchar(6)
as
begin

set nocount on

if @yyyymm is null or len (@yyyymm) <> 6 return -1
declare @periodeSøgestreng varchar(7)
set @periodeSøgestreng = @yyyymm + '%'


delete from ods.TD_Togsystem_mapning where year(dato) = substring(@yyyymm,1,4) and month(dato) = substring(@yyyymm,5,2)

insert into ods.TD_Togsystem_mapning
	(Dato,
	Tognummer,
	Frastation,
	Tilstation,
	Fratidspunkt,
	Tiltidspunkt,
	Togsystem,
	Kilde)

select distinct 
	convert(datetime, fk_di_tid) as Dato,
	tognr,
	frastation,
	tilstation,
	[dbo].[LTDDatoOgTidspunktTilDatetime](convert(datetime, fk_di_tid),fratidspunkt,2),
	[dbo].[LTDDatoOgTidspunktTilDatetime](convert(datetime, fk_di_tid),tiltidspunkt,2),
	di.Togsystemnummer,
	'Direkte fra togproduktion facttabel'
from 
	edw.ft_togproduktion_tog ft
		left outer join 
	edw.di_togsystem di on ft.FK_DI_Togsystem = di.PK_DI_Togsystem
where 
	fk_di_tid like @periodeSøgestreng

/*Udfyld huller ved stop på stationer*/


declare @kilde varchar(50)
set @kilde = 'Etl - huller udfyldt'

if object_id('tempdb..#huller') is not null drop table #huller
create table #huller (
	dato datetime null
	,tognummer int null
	,frastation varchar(10) null
	,tilstation varchar(10) null
	,Fratidspunkt datetime null
	,Tiltidspunkt datetime null 
	,Togsystem int null
	)

declare c cursor fast_forward for 
	select dato, tognummer, frastation, tilstation, Fratidspunkt, Tiltidspunkt, togsystem 
	from ods.TD_Togsystem_mapning
	where year(dato) = substring(@yyyymm,1,4)
	order by dato, tognummer, Fratidspunkt, Tiltidspunkt

open c
declare 
	@dato varchar(20)
	,@tognummer int
	,@Fratidspunkt datetime
	,@Tiltidspunkt datetime
	,@frastation varchar(10)
	,@tilstation varchar(10)
	,@togsystem int

	,@old_dato varchar(20)
	,@old_tognummer int
	,@old_Fratidspunkt datetime
	,@old_Tiltidspunkt datetime
	,@old_frastation varchar(10)
	,@old_tilstation varchar(10)
	,@old_togsystem int

fetch next from c into @old_dato,@old_tognummer, @old_frastation, @old_tilstation, @old_Fratidspunkt, @old_Tiltidspunkt, @old_togsystem
while @@fetch_status = 0
begin
	fetch next from c into @dato,@tognummer, @frastation, @tilstation, @Fratidspunkt, @Tiltidspunkt, @togsystem
	if @old_dato <> @dato or @old_tognummer <> @tognummer goto _next
	else
	begin
		--print @old_Fratidspunkt + ' ' + @old_Tiltidspunkt
		--print @Fratidspunkt + ' ' + @Tiltidspunkt
		if @old_Tiltidspunkt < @Fratidspunkt
		insert into #huller 
		(
		dato
		,tognummer
		,frastation
		,tilstation
		,Fratidspunkt
		,Tiltidspunkt
		,Togsystem
		)
		values
		(@dato
		,@tognummer
		,@old_tilstation
		,@frastation
		,@old_Tiltidspunkt
		,@Fratidspunkt
		,@togsystem
		)
	end
	_next:
	set @old_dato =@dato
	set @old_tognummer = @tognummer
	set @old_frastation = @frastation
	set @old_tilstation = @tilstation
	set @old_Fratidspunkt = @Fratidspunkt
	set @old_Tiltidspunkt = @Tiltidspunkt
	set @old_togsystem = @togsystem
end
close c
deallocate c


--select dato,tognummer,frastation, tilstation,Fratidspunkt, Tiltidspunkt,  togsystem 
--from ods.TD_Togsystem_mapning where dato = '2012-02-01' order by dato, tognummer, frastation, tilstation, Fratidspunkt, Tiltidspunkt, togsystem 
insert into ods.TD_Togsystem_mapning
	(Dato,
	Tognummer,
	Frastation,
	Tilstation,
	Fratidspunkt,
	Tiltidspunkt,
	Togsystem,
	Kilde)
select 
	dato,
	tognummer,
	frastation, 
	tilstation,
	Fratidspunkt, 
	Tiltidspunkt,  
	Togsystem  , 
	@kilde
from #huller 


end
GO
PRINT N'Creating [dbo].[MD_G_STAM_Ejendomme_Kategori]...';


GO



-- =============================================
-- Author:		Thomas B
-- Create date: 20141029
-- Description:	Returnere kategorien for en ejendom
-- =============================================
CREATE PROCEDURE [dbo].[MD_G_STAM_Ejendomme_Kategori] 
	@Alternativ Varchar(50),
	@Fredning Varchar(50),
	@Omkostningssted Varchar(50),
	@Branche Varchar(50),
	@Ejendom  Varchar(50),
	@BGV_Nr_Anlæg Varchar(50),
	@Benyttelsesart_UE Varchar(50),
	@Firmakode Varchar(50),
	@Status Varchar(50),
	@Kategori Varchar(50) OUTPUT
AS
BEGIN
	SET NOCOUNT ON;
    
    SET @Kategori=
      CASE 
        WHEN @Alternativ='Station' and @Fredning='X' THEN 'Station SL'
        WHEN @Alternativ='Station' THEN 'Station'
        WHEN SUBSTRING(@Omkostningssted, 1,3) = '711' THEN 'Kort&Godt'
        WHEN SUBSTRING(@Omkostningssted, 1,3) = '715' THEN 'DSB Ejendomsudvikling'
        WHEN SUBSTRING(@Omkostningssted, 1,3) = '718' THEN 'DSB S-tog'
        WHEN SUBSTRING(@Omkostningssted, 1,3) = '721' THEN 'DSB Vedligehold'
        WHEN SUBSTRING(@Branche, 1,6) = 'Museum' THEN 'Jernbanemuseum'
        WHEN SUBSTRING(@Omkostningssted, 1,3) = '706' THEN 'Koncernens lejemål'
        WHEN SUBSTRING(@Omkostningssted, 1,4) = '7761' THEN 'Koncernens lejemål'
        WHEN @Ejendom = 'GDT' THEN 'Koncernens lejemål'
        WHEN @BGV_Nr_Anlæg = 'GB_012' THEN 'Koncernens lejemål'
        WHEN SUBSTRING(@Omkostningssted, 1,4) = '7756' THEN 'F&R Klargøring'
        WHEN SUBSTRING(@Omkostningssted, 1,4) = '7758' THEN 'F&R Fremføring'
        WHEN SUBSTRING(@Omkostningssted, 1,4) = '7266' THEN 'F&R OBS'
        WHEN SUBSTRING(@Omkostningssted, 1,4) = '7227' THEN 'S&T'
        WHEN @Branche = 'Standsningsafgift' THEN 'Station'
        WHEN @Branche = 'Billet' THEN 'Station'
        WHEN SUBSTRING(@Firmakode, 1,2) = '18' THEN 'DSB S-tog'
        WHEN SUBSTRING(@Omkostningssted, 1,1) = '7' THEN 'Øvrige interne lejemål'
        WHEN @Status = 'Ekstern' THEN 'Øvrige eksterne lejemål'
        WHEN @Benyttelsesart_UE = 'Havelod' THEN 'Øvrige eksterne lejemål'
        ELSE 'Ikke Station'
      END
    
	
END
GO
PRINT N'Creating [etl].[Grl_DataLoadCheck_char_Log]...';


GO

create procedure [etl].[Grl_DataLoadCheck_char_Log](
    @DataLoadCheck_Element int,
    @Period_char varchar(8),
    @Vaerdi decimal(24,6))
AS

BEGIN
  SET NOCOUNT ON;
  DECLARE @Period int
  SELECT  @Period = convert(int, @Period_char)

  exec etl.Grl_DataLoadCheck_Log @DataLoadCheck_Element, @Period, @Vaerdi

  SET NOCOUNT OFF;
END
GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
